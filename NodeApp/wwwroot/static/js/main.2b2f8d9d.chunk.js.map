{"version":3,"sources":["assets/logo.PNG","reducers/node.js","reducers/path.js","reducers/ui.js","reducers/contacts.js","reducers/index.js","reducers/dialogs.js","reducers/chats.js","reducers/messages.js","reducers/users.js","reducers/forwardMessage.js","reducers/auth.js","reducers/callbacks.js","reducers/publicKeys.js","reducers/search.js","reducers/keys.js","reducers/keysForDecrypt.js","actions/dialogs.js","actions/user.js","actions/ui.js","transport/Connect.js","actions/node.js","actions/path.js","components/Auth.js","components/Registration.js","actions/auth.js","helpers/index.js","helpers/Helpers.js","components/Verify.js","selectors/index.js","selectors/Message.js","selectors/Dialog.js","selectors/User.js","components/SidebarItem.js","components/HeadSidebar.js","components/Search.js","actions/search.js","components/Sidebar.js","components/HeadDialog.js","actions/callbacks.js","components/Avatar.js","actions/keys.js","assets/tick_icon.svg","assets/double_tick_icon.svg","components/Message.js","assets/paperclip_icon.svg","assets/send_button_icon.svg","components/NewMessageField.js","components/Dialog.js","components/DialogContainer.js","components/ProfileModal.js","components/CreateChatModal.js","transport/Request.js","components/ContactsModal.js","components/ContactsGroupsModal.js","actions/contacts.js","components/SettingsModal.js","components/MainContainer.js","transport/Socket.js","App.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["module","exports","__webpack_require__","p","defaulState","activeNode","allNodes","defaultState","prevPath","currentPath","profile","search","showDrawer","appFocus","isCrypto","modals","createChatModal","contactsModal","contactsGroupsModal","settingsModal","callbacks","users","usersIDs","groups","combineReducers","dialogs","state","arguments","length","undefined","action","type","newState","Object","toConsumableArray","activeDialog","find","dialog","active","forEach","ConversationId","ConversationType","messagesRecieved","payload","data","UnreadedCount","SecondUid","Id","fakeDialog","Title","NameFirst","NameSecond","Photo","fake","push","messages","conversationId","conversationType","PreviewText","Text","chats","chatsUsers","ChatId","Users","message","mess","GlobalId","sort","a","b","a_date","Date","SendingTime","b_date","Read","user","concat","contacts","objectSpread2","ContactUserId","userId","groupIndex","GroupsId","indexOf","groupId","splice","group","GroupId","forwardMessage","auth","node","nodes","path","ui","text","name","localStorage","removeItem","callbackData","id","callback","response","RequestId","publicKeys","publicKey","key","JSONbig","stringify","KeyId","searchResult","symmetricKey","symmetricKeysForDecrypt","symmetricKeyForDecrypt","dialogsReceived","messagesReceived","forwardingMessage","openDialog","userReceived","openProfile","toggleDrawer","toggleModal","wSocket","Connect","classCallCheck","this","domain","_this","webSocket","WebSocket","onopen","console","log","wsOnConnect","onclose","event","wasClean","onmessage","blobToJson","ErrorCode","onMessage","onMessageAuth","onerror","error","readyState","u","x","URL","createObjectURL","XMLHttpRequest","open","send","revokeObjectURL","parse","responseText","result","charactersLength","i","charAt","Math","floor","random","parseInt","JSON","setActiveNode","setPath","Auth","possibleConstructorReturn","getPrototypeOf","call","props","item","setItem","socket","start","Domains","menu","react_default","createElement","es_menu","onClick","selectNode","bind","map","Item","Name","row","align","justify","style","height","col","className","es_button","connectNode","dropdown","overlay","getItem","icon","Component","connect","dispatch","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","surname","setSurname","_useState5","_useState6","phone","setPhone","_useState7","_useState8","email","setEmail","_useState9","_useState10","verifyCode","setVerifyCode","_useState11","_useState12","nameErr","setNameErr","_useState13","_useState14","emailErr","setEmailErr","_useState15","_useState16","contactsErr","setContactsErr","_useState17","_useState18","verifyCodeErr","setVerifyCodeErr","_useState19","_useState20","btnLoader","setbtnLoader","_useState21","_useState22","_useState23","_useState24","showRegButton","setShowRegButton","useEffect","ResponseType","FileAccessToken","Token","AccessToken","RefreshToken","User","window","location","replace","es_form","Fragment","validateStatus","help","input","placeholder","value","onChange","e","target","textAlign","regData","Phones","About","Country","City","Birthday","Language","NodeId","Online","Emails","Blacklist","Visible","Security","Tag","RegistrationDate","VCode","makeId","RequestType","Type","loading","disabled","test","verifyData","VerificationType","Uid","IsRegistration","getVerifyCode","setAuth","helpers","bufferToBase64","buf","binstr","Array","prototype","ch","String","fromCharCode","join","btoa","base64ToBuffer","base64","atob","Uint8Array","charCodeAt","Verify","verifyUid","verifyErr","verifyRequestSended","btnPreloader","redirect","_this2","setState","Message","masterPassword","TextEncoder","encode","masterPasswordId","BigInt","crypto","Crypto","setKeyPair","keys","keysId","allKeyPairs","keysInBase64","public","private","setSignKeyPair","cryptoKeysId","getKeyPairShort","then","getKeyPairMidle","getKeyPairLong","catch","err","signKeysId","navigator","appVersion","userAgent","preventDefault","LoginType","UidType","verifyType","DeviceName","getDevice","OSName","getOS","AppName","_this3","react_router","to","setPrevPath","onSubmit","sendverifyCode","autoFocus","inputMode","onChangeVerifCode","htmlType","sendVerificationQuery","onChangePhone","selectors","getFormatedMessages","tempMess","Attachments","SenderId","getFormatedDialogs","tempDialogs","AttachmentType","IsMuted","LastMessageId","LastMessageSenderId","LastMessageSenderName","LastMessageTime","getFormatedChats","chat","tempChat","Key","NodesId","Public","getFormatedChatsUsers","tempUser","Banned","Deleted","InviterId","Joined","UserId","UserInfo","UserRole","getFormatedUser","BlackList","Confirmed","Contact","ContactsPrivacy","Encryption","Groups","Keys","getUserById","getUserInitials","initials","ChannelName","defaultAva","split","substr","getActiveDialog","SidebarItem","newsContent","refs","messageText","newsText","innerText","slice","avatarStyle","width","backgroundSize","backgroundPosition","backgroundImage","backgroundRepeat","react_router_dom","ref","dialogId","src","logo","alt","Search","Input","searchStart","searchEnd","queryText","setQueryText","searchDialogs","toLowerCase","searchRequest","SearchQuery","Direction","onSearch","enterButton","localFoundDialogs","setLocalFoundDialogs","filter","components_HeadSidebar","components_Search","components_SidebarItem","showSearchResultUsers","showSearchResultChats","channels","showSearchResultChannels","JavascriptTimeAgo","locale","ru","closeDialog","toggleCryptoMode","setDialog","setDefaultAva","setUser","document","body","clientWidth","windowWidth","setWindowWidth","onresize","ReactTimeAgo","date","es_switch","setCallbackId","borderRadius","setSymmetricKey","setSymmetricKeyForDecrypt","_extends","assign","source","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","points","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","tick_icon_SvgTickIcon","_ref","svgRef","y","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","double_tick_icon_extends","double_tick_icon_objectWithoutProperties","double_tick_icon_objectWithoutPropertiesLoose","double_tick_icon_ref2","d","double_tick_icon_ref3","double_tick_icon_ref4","double_tick_icon_ref5","double_tick_icon_ref6","double_tick_icon_ref7","double_tick_icon_ref8","double_tick_icon_ref9","double_tick_icon_ref10","double_tick_icon_ref11","double_tick_icon_ref12","double_tick_icon_ref13","double_tick_icon_ref14","double_tick_icon_ref15","double_tick_icon_ref16","double_tick_icon_ref17","double_tick_icon_SvgDoubleTickIcon","double_tick_icon_ForwardRef","currentUser","visible","setVisible","messageTime","setMessageTime","isContextMenuVisible","setSsContextMenuVisible","setRedirect","decryptedMessage","setDecryptedMessage","fileMsg","setFileMsg","encoder","decoder","TextDecoder","timestamp","setTime","hour","getHours","minutes","getMinutes","setLinks","str","reg","match","k","conversation","Payload","background","components_Avatar","dangerouslySetInnerHTML","__html","FileId","forwardingUser","getForwardingUser","foundPublicSignKey","SignKeyId","requestId2","getUserKeys2","KeysId","privateKey","setPublicSignKeyToRecive","Data","setPrivateEncryptKeyToRecive","decryptKeyMsg","EncryptedData","idKey","failedDecryptMsg","signKeyForDecrypt","decryptSecretMsg","getMetaDataMsg","attach","decode","msg","fontStyle","href","download","Filename","showMessage","modal","onCancel","footer","maskClosable","paperclip_icon_extends","paperclip_icon_objectWithoutProperties","paperclip_icon_objectWithoutPropertiesLoose","paperclip_icon_ref2","transform","paperclip_icon_SvgPaperclipIcon","paperclip_icon_ForwardRef","send_button_icon_extends","send_button_icon_objectWithoutProperties","send_button_icon_objectWithoutPropertiesLoose","send_button_icon_ref2","send_button_icon_ref3","send_button_icon_ref4","send_button_icon_ref5","send_button_icon_ref6","send_button_icon_ref7","send_button_icon_ref8","send_button_icon_ref9","send_button_icon_ref10","send_button_icon_ref11","send_button_icon_ref12","send_button_icon_ref13","send_button_icon_ref14","send_button_icon_ref15","send_button_icon_ref16","send_button_icon_ref17","send_button_icon_SvgSendButtonIcon","send_button_icon_ForwardRef","setMessageText","imgLoading","setImgLoading","imageUrl","setImageUrl","attachmentsType","setAttachmentsType","sendMessage","Messages","ReceiverId","ReplyTo","MessagesGlobalId","Hash","MessageId","encryptMsg","encryptedMessage","SaveFlag","Lifetime","upload","showUploadList","customRequest","file","fileAccessToken","axios","defaults","headers","formData","FormData","append","post","res","status","File","handleUploadImage","beforeUpload","isJpgOrPng","info","onKeyDown","keyCode","requestsId","setMessages","messagesLoading","setMessagesLoading","height1","setHeight1","height2","setHeight2","callbackFunctions","setCallbackFunctions","interlocutorEncryptPublicKey","setInterlocutorEncryptPublicKey","mesViewport","useRef","includes","keyTimelife","GenerationTime","getTime","interEncryptPublicKey","mySignPrivateKey","keyId","setPublicEncryptKeyToSend","setPrivateSignKeyToSend","getSymmetricKey","symmKey","encryptKeyMsg","encryptedSymmetricKey","symmKeyEncrypted","requestId","keysPairs","signKeysPairs","addNewKeys","Version","MessagesId","current","onscroll","scrollTop","scrollHeight","messagesRequest","NavigationMessageId","ChannelId","setTimeout","scrollBottom","uniqueUsers","Set","n","requestUsers","UsersId","getUsers","callbackIds","getUserKeys","NavigationTime","keyExchangeMessage","onDragOver","classList","add","fileOver","onDragLeave","remove","fileLeave","onDrop","dataTransfer","files","upladedFile","encryptImgMsg","attachmentType","fileDrop","components_Message","size","ChannelsId","components_NewMessageField","NavigationMessageTime","zIndex","components_HeadDialog","components_Dialog","setProfile","prevProfile","setPrevProfile","getChatInfo","ChatsId","undefinedUsers","handleCancelProfile","margin","FullNumber","foundUser","marginTop","chatName","setChatName","nameError","setNameError","chatPrivate","setChatPrivate","chatChannel","setChatChannel","setLoading","setUsersIds","showUsers","setShowUsers","title","ContactUser","ContactId","foudnUserIndex","addContactToChat","listType","fontSize","color","divider","checked","block","newChat","Chats","handleCreateChat","request","Request","getDialogs","getUserContacts","usersIds","requestdData","Privacy","contactsIDs","TabPane","Tabs","getUserGroups","showContacts","contact","handleOpenChat","tabs","defaultActiveKey","getGroupContacts","tab","Typography","removeContactFromGroup","removeGroup","groupOpen","setGroupOpen","creatingGroup","setCreatingGroup","handleSetChatName","openGroup","openedGroup","strong","newGroup","Group","createGroup","defaultValue","shape","removeUser","removeUserFromGroup","addUsersToGroup","updateGroup","removeContactGroup","lastName","setLastName","about","setAbout","privacySettings","setPrivacySettings","namePrivacy","setNamePrivacy","photoPrivacy","setPhotoPrivacy","onlinePrivacy","setOnlinePrivacy","phonePrivacy","setPhonePrivacy","emailPrivacy","setEmailPrivacy","uploadButton","addonBefore","SubscriberNumber","privacy","userData","editUser","handleUpdateUser","drawer","placement","closable","onClose","logout","Full","components_Sidebar","components_DialogContainer","components_ProfileModal","components_CreateChatModal","components_ContactsModal","components_ContactsGroupsModal","components_SettingsModal","chatsReceived","chatsUsersReceived","readMessages","searchResultReceived","setContactUsersIDs","userGroupsReceived","setContacts","setPublicKeys","setCallbackData","getSelf","Conversations","Code","getChatsUsers","NavigationUserId","ChatUsers","Channels","userIDs","Contacts","messagesRead","licens","setNodes","setAppFocus","position","addEventListener","scrollTo","getNodesObj","Nodes","login","transport_Socket","spin","components_MainContainer","components_Verify","components_Registration","components_Auth","Boolean","hostname","initialState","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b2f8d9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.024bbe57.PNG\";","/* eslint-disable */\nconst defaulState = {\n  activeNode: null,\n  allNodes: null\n}\n\nexport function node(state = defaulState, action) {\n  if(action.type === 'SET_NODE') {\n    let newState = {...state}\n    newState.activeNode = action.node\n    return newState\n  } else if(action.type === 'SET_NODES') {\n    let newState = {...state}\n    newState.allNodes = action.nodes\n    return newState\n  }\n  return state\n}\n","/* eslint-disable */\nconst defaultState = {\n  prevPath: '',\n  currentPath: ''\n}\n\nexport function path(state = defaultState, action) {\n  if(action.type === 'SET_PATH') {\n    let newState = {...state}\n    newState.prevPath = newState.path\n    newState.currentPath = action.path\n    return newState\n  } else if(action.type === 'PREV_PATH') {\n    let newState = {...state}\n    newState.currentPath = newState.prevPath\n    return newState\n  }\n  return state\n}\n","/* eslint-disable */\nconst defaultState = {\n  profile: null,\n  search: false,\n  showDrawer: false,\n  appFocus: true,\n  isCrypto: false,\n  modals: {\n    createChatModal: false,\n    contactsModal: false,\n    contactsGroupsModal: false,\n    settingsModal: false\n  },\n  callbacks: []\n}\n\nexport function ui(state = defaultState, action) {\n  if(action.type === 'OPEN_PROFILE') {\n    let newState = {...state}\n    newState.profile = action.dialog\n    return newState\n  }\n  else if (action.type === 'SEARCH_START') {\n    let newState = {...state}\n    newState.search = action.text\n    return newState\n  }\n  else if (action.type === 'SEARCH_END') {\n    let newState = {...state}\n    newState.search = false\n    return newState\n  }\n  else if (action.type === 'TOGGLE_DRAWER') {\n    let newState = {...state}\n    if (action.name === \"close\") {\n      newState.showDrawer = false\n    } else {\n      newState.showDrawer = !newState.showDrawer\n    }\n    return newState\n  }\n  else if (action.type === 'TOGGLE_MODAL') {\n    let newState = {...state}\n    if (action.name === \"close\") {\n      for (var name in newState.modals) {\n        newState.modals[name] = false\n      }\n    } else {\n      newState.modals[action.name] = !newState.modals[action.name]\n    }\n    return newState\n  }\n  else if (action.type === 'SET_APP_FOCUS') {\n    let newState = {...state}\n    newState.appFocus = action.data\n    return newState\n  }\n  else if (action.type === 'TOGGLE_CRYPTO_MODE') {\n    localStorage.removeItem(\"keysUpload\")\n    let newState = {...state}\n    newState.isCrypto = action.isCrypto\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\nconst defaultState = {\n  users: [],\n  usersIDs: [],\n  groups: []\n}\n\nexport function contacts(state = defaultState, action) {\n  if(action.type === 'SET_CONTACT_USERS_IDS') {\n    let newState = {...state}\n    newState.usersIDs = action.usersIDs\n    return newState\n  }\n  if(action.type === 'SET_CONTACTS') {\n    let newState = {...state}\n    newState.users = action.contacts\n    return newState\n  }\n  else if (action.type === \"USER_GROUPS_RECEIVED\") {\n    let newState = {...state}\n    newState.groups = action.groups\n    return newState\n  }\n  else if (action.type === \"REMOVE_CONTACT_FROM_GROUP\") {\n    let newState = {...state}\n    newState.users.forEach(user => {\n      if (user.ContactUserId === action.payload.userId) {\n        let groupIndex = user.GroupsId.indexOf(action.payload.groupId)\n        user.GroupsId.splice(groupIndex, 1)\n      }\n    })\n    return newState\n  }\n  else if (action.type === \"REMOVE_GROUP\") {\n    let newState = {...state}\n    newState.groups.forEach(group => {\n      if (group.GroupId === action.groupId) {\n        let groupIndex = newState.groups.indexOf(group)\n        newState.groups.splice(groupIndex, 1)\n      }\n    })\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","import { combineReducers } from \"redux\"\nimport { dialogs } from \"./dialogs\"\nimport { chats } from \"./chats\"\nimport { messages } from \"./messages\"\nimport { users } from \"./users\"\nimport { forwardMessage } from \"./forwardMessage\"\nimport { auth } from \"./auth\"\nimport { node } from \"./node\"\nimport { path } from \"./path\"\nimport { ui } from \"./ui\"\nimport { callbacks } from \"./callbacks\"\nimport { searchResult } from \"./search\"\nimport { contacts } from \"./contacts\"\nimport { symmetricKey } from \"./keys\"\nimport { symmetricKeysForDecrypt } from \"./keysForDecrypt\"\nimport { publicKeys } from \"./publicKeys\"\n\nexport default combineReducers({\n  dialogs,\n  chats,\n  messages,\n  users,\n  contacts,\n  forwardMessage,\n  auth,\n  node,\n  path,\n  ui,\n  callbacks,\n  publicKeys,\n  searchResult,\n  symmetricKey,\n  symmetricKeysForDecrypt\n})\n","/* eslint-disable */\nexport function dialogs(state = [], action) {\n   if (action.type === 'DIALOGS_RECEIVED') {\n      let newState = [...state]\n      let activeDialog = newState.find(dialog => dialog.active)\n      newState = action.dialogs\n      if (activeDialog) {\n         newState.forEach(dialog => {\n            if (dialog.ConversationId === activeDialog.ConversationId && dialog.ConversationType === activeDialog.ConversationType) {\n               dialog.active = true\n               dialog.messagesRecieved = activeDialog.messagesRecieved\n            }\n         })\n      }\n      return newState\n   }\n   else if(action.type === 'OPEN_DIALOG') {\n      let newState = [...state]\n      // В action.payload.data может содержаться и сам диалог и объект юзера диалога с которым еще нет\n      // Если диалога с юзером нет, то создаем фэйковый диалог\n      // И после отправи сообщения диалог будет создан и просто запрашиваем его на сервере\n      if (action.payload.type === 'dialog') {\n         newState.forEach(function(dialog){\n            dialog.active = false\n   \n            if (dialog.ConversationId === action.payload.data.ConversationId && dialog.ConversationType === action.payload.data.ConversationType) {\n               dialog.active = true\n               dialog.UnreadedCount = 0\n               dialog.type = action.payload.type\n            }\n         })\n      } else if (action.payload.type === 'user') {\n         let dialogWithUser = newState.find(dialog => dialog.SecondUid === action.payload.data.Id)\n         if (dialogWithUser) {\n            newState.forEach(dialog => {\n               dialog.active = false\n\n               if (dialog.SecondUid === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = 'dialog'\n               }\n            })\n         } else {\n            let fakeDialog = {}\n         \n            fakeDialog.ConversationId = action.payload.data.Id,\n            fakeDialog.Title = action.payload.data.NameFirst + ' ' + action.payload.data.NameSecond,\n            fakeDialog.Photo = action.payload.data.Photo,\n            fakeDialog.ConversationType = 1,\n            fakeDialog.SecondUid = action.payload.data.Id,\n            fakeDialog.fake = true\n   \n            newState.push(fakeDialog)\n   \n            newState.forEach(function(dialog){\n               dialog.active = false\n      \n               if (dialog.ConversationId === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = action.payload.type\n               }\n            })\n         }\n      } else if (action.payload.type === 'channel') {\n         newState.push(action.payload.data)\n\n         newState.forEach(function(dialog){\n            dialog.active = false\n   \n            if (dialog.ConversationId === action.payload.data.Id) {\n               dialog.active = true\n               dialog.UnreadedCount = 0\n               dialog.type = action.payload.type,\n               dialog.fake = true\n            }\n         })\n      } else if (action.payload.type === 'chat') {\n         let chat = newState.find(dialog => dialog.ConversationId === action.payload.data.Id)\n         if (chat) {\n            newState.forEach(dialog => {\n               dialog.active = false\n\n               if (dialog.ConversationId === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = 'chat'\n               }\n            })\n         } else {\n            let fakeDialog = {}\n         \n            fakeDialog.ConversationId = action.payload.data.Id,\n            fakeDialog.Title = action.payload.data.NameFirst + ' ' + action.payload.data.NameSecond,\n            fakeDialog.Photo = action.payload.data.Photo,\n            fakeDialog.ConversationType = 1,\n            fakeDialog.SecondUid = action.payload.data.Id,\n            fakeDialog.fake = true\n   \n            newState.push(fakeDialog)\n   \n            newState.forEach(function(dialog){\n               dialog.active = false\n      \n               if (dialog.ConversationId === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = action.payload.type\n               }\n            })\n         }\n      }\n\n      return newState\n   }\n   else if(action.type === 'CLOSE_DIALOG') {\n      let newState = [...state]\n\n      newState.forEach(dialog => {\n         if (dialog.active) {\n            dialog.active = false\n         }\n      })\n\n      return newState\n   }\n   else if(action.type === 'MESSAGES_RECEIVED'){\n      let newState = [...state]\n      if (action.messages.length) {\n         let conversationId = action.messages[0].ConversationId\n         let conversationType = action.messages[0].conversationType\n         newState.forEach(dialog => {\n            if (dialog.ConversationId === conversationId && dialog.ConversationType === conversationType) {\n               // устанавливаем флаг по которому при открытии диалога проверяем запрашивались ли для него сообщения\n               dialog.messagesRecieved = true\n               // превью диалога отображается в сайдбаре\n               dialog.PreviewText = action.messages[0].Text\n               // если диалог не открыт, то накручиваем счетчик непрочитаных\n               if(!dialog.active) {\n                  dialog.UnreadedCount += 1\n               }\n               // поднимаем диалог на первое место в сайдбаре\n               // let dialogIndex = newState.indexOf(dialog)\n               // newState.splice(dialogIndex, 1)\n               // newState.unshift(dialog)\n            }\n         })\n      }\n\n      return newState\n   }\n   else {\n      return state\n   }\n}\n","/* eslint-disable */\n// В chats хрнаится объект только одного чата, информацию о котором просматривается в данный момент\nexport function chats(state = [], action) {\nif (action.type === 'CHATS_RECEIVED') {\n    let newState = [...state];\n    newState = action.chats;\n    return newState;\n  }\n  else if (action.type === 'CHATS_USERS_RECEIVED') {\n    let newState = [...state];\n    if (newState[0].Id === action.chatsUsers[0].ChatId) {\n      newState[0].Users = action.chatsUsers;\n    }\n    return newState;\n  }\n  else {\n    return state;\n  }\n}\n","/* eslint-disable  */\n\nfunction sortMessages(messages) {\n  return messages.sort(function(a, b) {\n    let a_date = new Date(a.SendingTime)\n    let b_date = new Date(b.SendingTime)\n    if (a_date < b_date) {\n      return -1\n    } if (a_date > b_date) {\n      return 1\n    } else {\n      return 0\n    }\n  })\n}\n\nexport function messages(state = [], action) {\n  if (action.type === \"MESSAGES_RECEIVED\") {\n    let newState = [...state]\n    action.messages.forEach(message => {\n      let existence = newState.find(mess => mess.GlobalId === message.GlobalId)\n      if (!existence) {\n        newState.push(message)\n      }\n    })\n\n    return sortMessages(newState)\n  }\n  else if(action.type === \"READ_MESSAGES\") {\n    let newState = [...state]\n    \n    newState.forEach(message => {\n      if (message.ConversationId === action.data.ConversationId && message.ConversationType === action.data.ConversationType) {\n        message.Read = true\n      }\n    })\n\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\nexport function users(state = [], action) {\n  if(action.type === 'USER_RECEIVED') {\n    let newState = state;\n    \n    if(action.users.length > 0) {\n      let foundUser = newState.find(user => user.Id === action.users[0].Id);\n\n      if (!foundUser) {\n        newState = [...newState, ...action.users];\n      }\n    }\n    \n    return newState;\n  } else {\n    return state;\n  }\n}\n","/* eslint-disable */\nexport function forwardMessage(state = false, action) {\n  if (action.type === \"FORWARD_MESSAGE\") {\n    let newState = state\n\n    newState = action.message\n\n    return newState\n  } else {\n    return state\n  }\n}\n","/* eslint-disable */\nexport function auth(state = \"CHECK_AUTH\", action) {\n  if(action.type === 'SET_AUTH') {\n    let newState = state\n    newState = action.auth\n    return newState\n  }\n  return state\n}\n","/* eslint-disable */\nexport function callbacks(state = [], action) {\n  if (action.type === 'SET_CALLBACK_ID') {\n    let newState = [...state]\n    let callbackData = {\n      id: action.id,\n      data: null\n    }\n    newState.push(callbackData)\n    return newState\n  }\n  else if (action.type === 'SET_CALLBACK_DATA') {\n    let newState = [...state]\n    newState.forEach(callback => {\n      if (callback.id === action.response.RequestId) {\n        callback.data = action.response\n      }\n    })\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\nimport JSONbig from \"json-bigint\"\n// const defaultState = {\n//   symmetricKey: null,\n//   keysPair: null\n// }\n\nexport function publicKeys(state = [], action) {\n  if(action.type === 'SET_PUBLIC_KEYS') {\n    let newState = [...state]\n\n    action.publicKeys.forEach(publicKey => {\n      let foundPublicKey = newState.find(key => JSONbig.stringify(key.KeyId) === JSONbig.stringify(publicKey.KeyId))\n      if (!foundPublicKey) {\n        newState.push(publicKey)\n      }\n    })\n\n    return newState\n  } else {\n    return state\n  }\n}\n","/* eslint-disable */\nexport function searchResult(state = null, action) {\n  if(action.type === 'SEARCH_RESULT_RECEIVED') {\n    let newState = {...state}\n    newState = action.searchResult\n    return newState\n  }\n  else if(action.type === 'SEARCH_END') {\n    let newState = {...state}\n    newState = null\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\n// const defaultState = {\n//   symmetricKey: null,\n//   keysPair: null\n// }\n\nexport function symmetricKey(state = null, action) {\n  if(action.type === 'SET_SYMMETRIC_KEY') {\n    let newState = state\n    newState = action.symmetricKey\n    return newState\n  } else {\n    return state\n  }\n}\n","/* eslint-disable */\n// const defaultState = {\n//   symmetricKey: null,\n//   keysPair: null\n// }\n\nexport function symmetricKeysForDecrypt(state = [], action) {\n  if(action.type === 'SET_SYMMETRIC_KEY_FOR_DECRYPT') {\n    let newState = [...state]\n    let keyAdded = newState.find(key => key.KeyId === action.symmetricKeyForDecrypt.KeyId)\n    if (!keyAdded) {\n      newState.push(action.symmetricKeyForDecrypt)\n    }\n\n    return newState\n  } else {\n    return state\n  }\n}\n","export function dialogsReceived(dialogs) {\n  return {\n    type: \"DIALOGS_RECEIVED\",\n    dialogs\n  }\n}\n\nexport function chatsReceived(chats) {\n  return {\n    type: \"CHATS_RECEIVED\",\n    chats\n  }\n}\n\nexport function messagesReceived(messages) {\n  return {\n    type: \"MESSAGES_RECEIVED\",\n    messages\n  }\n}\n\nexport function readMessages(data) {\n  return {\n    type: \"READ_MESSAGES\",\n    data\n  }\n}\n\nexport function forwardingMessage(message) {\n  return {\n    type: \"FORWARD_MESSAGE\",\n    message\n  }\n}\n\nexport function openDialog(payload) {\n  return {\n    type: \"OPEN_DIALOG\",\n    payload\n  }\n}\n\nexport function closeDialog() {\n  return {\n    type: \"CLOSE_DIALOG\"\n  }\n}\n","export function userReceived(users) {\n  return {\n    type: \"USER_RECEIVED\",\n    users\n  }\n}\n\nexport function chatsUsersReceived(chatsUsers) {\n  return {\n    type: \"CHATS_USERS_RECEIVED\",\n    chatsUsers\n  }\n}\n","/* eslint-disable */\nexport function openProfile(dialog) {\n  return {\n    type: \"OPEN_PROFILE\",\n    dialog\n  }\n}\n\nexport function toggleDrawer(name) {\n  return {\n    type: \"TOGGLE_DRAWER\",\n    name\n  }\n}\n\nexport function toggleModal(name) {\n  return {\n    type: \"TOGGLE_MODAL\",\n    name: name\n  }\n}\n\nexport function setAppFocus(data) {\n  return {\n    type: \"SET_APP_FOCUS\",\n    data\n  }\n}\n\nexport function toggleCryptoMode(isCrypto) {\n  return {\n    type: \"TOGGLE_CRYPTO_MODE\",\n    isCrypto\n  }\n}\n","/* eslint-disable */\nimport JSONbig from \"json-bigint\"\n\nclass Connect {\n  constructor() {\n    \n  }\n\n  start(domain){\n    this.webSocket = new WebSocket(`wss://${domain}:5000`)\n    // this.webSocket = new WebSocket(`wss://testnode1-1.ymess.org:5000`)\n\n    this.webSocket.onopen = () => {\n      console.log(\"Соединение установлено\")\n      this.wsOnConnect()\n    }\n\n    this.webSocket.onclose = event => {\n      if (event.wasClean) {\n        console.log(\"Соединение закрыто\")\n      } else {\n        console.log(\"Обрыв соединения\")\n      }\n      console.log(\"Код: \", event)\n    }\n\n    this.webSocket.onmessage = event => {\n      const message = this.blobToJson(event.data)\n\n      if (message.ErrorCode && message.ErrorCode !== 0) {\n        console.log('%c REQUEST ERR ',  'background: #ff4545; color: #bada55; padding: 3px', message)\n      } else {\n        this.onMessage(message)\n        this.onMessageAuth(message)\n        console.log(\n          \"%c RESPONSE \",\n          \"background: #00ff00; color: #000; padding: 3px\",\n          this.blobToJson(event.data)\n        )\n      }\n    }\n\n    this.webSocket.onerror = error => {\n      console.log('%c ERROR CONNECT ',  'background: red; color: #bada55; padding: 3px', error);\n    }\n  }\n\n  getStatus(){\n    return this.webSocket.readyState\n  }\n\n  blobToJson(data) {\n    var u, x\n    u = URL.createObjectURL(data)\n    x = new XMLHttpRequest()\n    x.open(\"GET\", u, false)\n    x.send()\n    URL.revokeObjectURL(u)\n\n    return JSONbig.parse(x.responseText)\n  }\n\n  makeId() {\n    var result = \"\"\n    var characters = \"0123456789\"\n    var charactersLength = characters.length\n    for (var i = 0; i < 14; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength))\n    }\n\n    return parseInt(result)\n  }\n\n  send(data) {\n    console.log(\n      \"%c REQUEST \",\n      \"background: #222; color: #bada55; padding: 3px\",\n      data\n    )\n    this.webSocket.send(JSON.stringify(data))\n  }\n\n  onMessage() {}\n\n  onMessageAuth() {}\n\n  wsOnConnect() {}\n}\n\nconst wSocket = new Connect()\n\nexport default wSocket\n","/* eslint-disable */\nexport function setActiveNode(node) {\n  return {\n    type: \"SET_NODE\",\n    node\n  }\n}\n\nexport function setNodes(nodes) {\n  return {\n    type: \"SET_NODES\",\n    nodes\n  }\n}","export function setPath(path) {\n  return {\n    type: \"SET_PATH\",\n    path: path\n  }\n}\n\nexport function setPrevPath() {\n  return {\n    type: \"PREV_PATH\"\n  }\n}","import React, { Component } from \"react\"\nimport { Row, Col, Button, Menu, Dropdown, Icon } from \"antd\"\n// import { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport socket from \"../transport/Connect\"\nimport { setActiveNode } from \"../actions/node\"\nimport { setPath } from \"../actions/path\"\n\nclass Auth extends Component {\n  constructor() {\n    super()\n    // this.state = {\n    //   nodes: [],\n    //   activeNode: null\n    // }\n  }\n\n  componentDidMount() {\n    // this.setState({\n    //   nodes: JSON.parse(localStorage.getItem(\"nodes\")),\n    //   activeNode: JSON.parse(localStorage.getItem(\"node\"))\n    // })\n  }\n\n  selectNode(node) {\n    // this.setState({\n    //   activeNode: node.item.props.data\n    // })\n    this.props.setActiveNode(node.item.props.data)\n    localStorage.setItem(\"node\", JSON.stringify(node.item.props.data))\n  }\n\n  connectNode(path) {\n    if (this.props.node.activeNode) {\n      socket.start(this.props.node.activeNode.Domains[0])\n    } else {\n      socket.start(this.props.node.allNodes[0].Domains[0])\n      this.props.setActiveNode(this.props.node.allNodes[0])\n      localStorage.setItem(\"node\", JSON.stringify(this.props.node.allNodes[0]))\n    }\n    this.props.setPath(path)\n  }\n\n  render() {\n    const menu = (\n      <Menu onClick={this.selectNode.bind(this)}>\n        {\n          this.props.node.allNodes ?\n            this.props.node.allNodes.map((node, i) => {\n              return (\n                <Menu.Item key={i} data={node}>\n                  {node.Name}\n                </Menu.Item>\n              )\n            })\n          : null\n        }\n      </Menu>\n    )\n    return (\n      <Row\n        type=\"flex\"\n        align=\"middle\"\n        justify=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Col>\n          <div className=\"auth__type\">\n            <h1>Вход</h1>\n            <h2>Выберите способ входа</h2>\n            <Button type=\"secondary\" onClick={this.connectNode.bind(this, 'by-phone')}>По номеру телефона</Button>\n            <br />\n            <Button type=\"secondary\" onClick={this.connectNode.bind(this, 'by-email')}>По электронной почте</Button>\n            <br />\n            <Button type=\"secondary\">Через приложение</Button>\n            <br />\n            <br />\n            <Button type=\"link\" onClick={this.connectNode.bind(this, 'registration')}>Регистрация</Button>\n            <br />\n            <div className=\"auth__type_server\">\n              <span>Сервер: </span>\n              <Dropdown overlay={menu}>\n                <span className=\"ant-dropdown-link\">\n                  {localStorage.getItem(\"node\")\n                    ? JSON.parse(localStorage.getItem(\"node\")).Name\n                    : \"Автоматически\"}\n                  <Icon type=\"down\" />\n                </span>\n              </Dropdown>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    node: state.node\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveNode: node => dispatch(setActiveNode(node)),\n    setPath: path => dispatch(setPath(path))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { Row, Col, Button, Form, Input, Dropdown, Menu, Icon } from \"antd\"\nimport { connect } from \"react-redux\"\nimport socket from \"../transport/Connect\"\n\nfunction Registration(props) {\n  const [name, setName] = useState(\"\")\n  const [surname, setSurname] = useState(\"\")\n  const [phone, setPhone] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [verifyCode, setVerifyCode] = useState(\"\")\n  const [nameErr, setNameErr] = useState(false)\n  const [emailErr, setEmailErr] = useState(false)\n  const [contactsErr, setContactsErr] = useState(false)\n  const [verifyCodeErr, setVerifyCodeErr] = useState(false)\n  const [btnLoader, setbtnLoader] = useState(false)\n  const [activeNode, setActiveNode] = useState(null)\n  const [showRegButton, setShowRegButton] = useState(false)\n\n  useEffect(() => {\n    socket.onMessage = data => {\n      if (data.ErrorCode !== 0) {\n        // console.log(data)\n      } else if (data.ResponseType === 6) {\n        localStorage.setItem(\"FileAccessToken\", data.FileAccessToken)\n        localStorage.setItem(\"AccessToken\", data.Token.AccessToken)\n        localStorage.setItem(\"RefreshToken\", data.Token.RefreshToken)\n        localStorage.setItem(\"User\", JSON.stringify(data.User))\n\n        window.location.replace(\"/\")\n      }\n    }\n\n    setActiveNode(JSON.parse(localStorage.getItem(\"node\")))\n  }, [])\n\n  const handleRegistration = () => {\n    if (!verifyCode) {\n      setVerifyCodeErr(\"Это поле обязательно для заполнения\")\n    } else {\n      setbtnLoader(true)\n\n      const regData = {\n        User: {\n          Id: 0,\n          Phones: phone ? [phone] : null,\n          NameFirst: name,\n          NameSecond: surname,\n          About: \"\",\n          Photo: \"\",\n          Country: \"\",\n          City: \"\",\n          Birthday: \"\",\n          Language: null,\n          NodeId: activeNode.Id,\n          Online: null,\n          Emails: email ? [email] : null,\n          Blacklist: null,\n          Visible: null,\n          Security: null,\n          Tag: 0,\n          RegistrationDate: null\n        },\n        VCode: parseInt(verifyCode),\n        RequestId: socket.makeId(),\n        RequestType: 37,\n        Type: 0\n      }\n\n      socket.send(regData)\n    }\n  }\n\n  const handleSetName = e => {\n    setName(e.target.value)\n    setNameErr(false)\n  }\n\n  const handleSetSurname = e => {\n    setSurname(e.target.value)\n  }\n\n  const handleSetPhone = e => {\n    setPhone(e.target.value)\n    setContactsErr(false)\n  }\n\n  const handleSetEmail = e => {\n    const validateEmail = email => {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n\n    setEmail(e.target.value)\n    setContactsErr(false)\n\n    if (!validateEmail(e.target.value)) {\n      setEmailErr(\"Некорректный email адрес\")\n    } else {\n      setEmailErr(false)\n    }\n\n    if (e.target.value.length === 0) {\n      setEmailErr(false)\n    }\n  }\n\n  const handleSetVerifyCode = e => {\n    setVerifyCode(e.target.value)\n    setVerifyCodeErr(false)\n  }\n\n  const selectNode = data => {\n    if (data.item.props.data) {\n      setActiveNode(data.item.props.data)\n      localStorage.setItem(\"node\", JSON.stringify(data.item.props.data))\n    }\n  }\n\n  const menu = (\n    <Menu onClick={(node) => selectNode(node)}>\n      {props.nodes.map((node, i) => {\n        return (\n          <Menu.Item key={i} data={node}>\n            {node.Name}\n          </Menu.Item>\n        )\n      })}\n      {\n        // this.state.activeNode ? <Menu.Item key='auto' data={null}>Автоматически</Menu.Item> : null\n      }\n    </Menu>\n  )\n\n  const getVerifyCode = () => {\n    if (name.length === 0) {\n      setNameErr(\"Это поле обязательно для заполнения\")\n    } else if (phone.length === 0 && email.length === 0) {\n      setContactsErr(\"Одно из этих полей обязательно для заполнения\")\n    } else {\n      const verifyData = {\n        VerificationType: email ? 1 : phone ? 0 : 0,\n        Uid: phone ? phone : email,\n        IsRegistration: true,\n        RequestId: socket.makeId(),\n        RequestType: 42,\n        Type: 0\n      }\n\n      setShowRegButton(true)\n\n      socket.send(verifyData)\n    }\n  }\n\n  return (\n    <Row\n      type=\"flex\"\n      align=\"middle\"\n      justify=\"center\"\n      style={{ height: \"100vh\" }}\n    >\n      <Col>\n        <div className=\"auth__type\">\n          <h1>Регистрация</h1>\n          <div>\n            <Form className=\"login-form\">\n              {\n                showRegButton ? \n                  <>\n                    <div className=\"verify-text\">{`Мы отправили вам код подтверждения на ваш ${phone ? 'телефон' : 'email'}, пожалуйста введите его в поле ниже и завершите регистрацию`}</div>\n                    <Form.Item\n                      validateStatus={verifyCodeErr ? \"error\" : \"\"}\n                      help={verifyCodeErr || \"\"}\n                    >\n                      <Input placeholder=\"Код\" value={verifyCode} onChange={handleSetVerifyCode} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            onClick={handleRegistration}\n                            loading={btnLoader}\n                          >\n                            Зарегистрироваться\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </>\n                :\n                  <>\n                    <Form.Item\n                      validateStatus={nameErr ? \"error\" : \"\"}\n                      help={nameErr || \"\"}\n                    >\n                      <Input placeholder=\"Имя\" onChange={handleSetName} />\n                    </Form.Item>\n                    <Form.Item validateStatus=\"\">\n                      <Input placeholder=\"Фамилия\" onChange={handleSetSurname} />\n                    </Form.Item>\n                    <Form.Item\n                      validateStatus={contactsErr ? \"error\" : \"\"}\n                      help={contactsErr || \"\"}\n                    >\n                      <Input placeholder=\"Номер телефона\" disabled={email.length ? true : false} onChange={handleSetPhone} />\n                    </Form.Item>\n                    <div className=\"verify-text\"><span>или</span></div>\n                    <Form.Item\n                      validateStatus={contactsErr || emailErr ? \"error\" : \"\"}\n                      help={contactsErr || emailErr || \"\"}\n                    >\n                      <Input placeholder=\"Email\" disabled={phone.length ? true : false} onChange={handleSetEmail} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            onClick={() => getVerifyCode()}\n                            disabled={name && phone || email ? false : true}\n                          >\n                            Получить код\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </>\n              }\n            </Form>\n            <div className=\"auth__type_server\">\n              <span>Сервер: </span>\n              <Dropdown overlay={menu}>\n                <span className=\"ant-dropdown-link\">\n                  {activeNode\n                    ? activeNode.Name\n                    : \"Автоматически\"}\n                  <Icon type=\"down\" />\n                </span>\n              </Dropdown>\n            </div>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    nodes: state.node.allNodes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration)","export function setAuth(auth) {\n  return {\n    type: \"SET_AUTH\",\n    auth\n  }\n}\n","import {\n  bufferToBase64,\n  base64ToBuffer\n} from \"./Helpers\"\n\nexport default {\n  bufferToBase64,\n  base64ToBuffer\n}\n","export function bufferToBase64(buf) {\n  const binstr = Array.prototype.map.call(buf, function (ch) {\n      return String.fromCharCode(ch)\n  }).join('')\n  return btoa(binstr)\n}\n\nexport function base64ToBuffer(base64) {\n  let binstr = atob(base64)\n  let buf = new Uint8Array(binstr.length)\n  Array.prototype.forEach.call(binstr, function (ch, i) {\n    buf[i] = ch.charCodeAt(0)\n  })\n  return buf\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\"\nimport { Row, Col, Button, Form, Input, Icon } from \"antd\"\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { setAuth } from \"../actions/auth\"\nimport { setPrevPath } from \"../actions/path\"\nimport socket from \"../transport/Connect\"\nimport Crypto from \"y_crypto\"\nimport helpers from \"../helpers\"\n\nclass Verify extends Component {\n  constructor() {\n    super()\n    this.state = {\n      verifyUid: null,\n      verifyErr: null,\n      verifyRequestSended: false,\n      verifyCode: null,\n      verifyCodeErr: null,\n      btnPreloader: false,\n      redirect: false\n    }\n  }\n\n  componentDidMount() {\n    socket.onMessageAuth = data => {\n      this.setState({\n        btnPreloader: false\n      })\n\n      if (data.ErrorCode !== 0) {\n        this.setState({\n          verifyErr: data.Message\n        })\n      } else if (data.ResponseType === 10) {\n        this.setState({\n          verifyRequestSended: true\n        })\n      } else if (data.ResponseType === 6) {\n        localStorage.setItem(\"FileAccessToken\", data.FileAccessToken)\n        localStorage.setItem(\"AccessToken\", data.Token.AccessToken)\n        localStorage.setItem(\"RefreshToken\", data.Token.RefreshToken)\n        localStorage.setItem(\"User\", JSON.stringify(data.User))\n\n        this.props.setAuth(\"AUTH_SUCCESS\")\n\n        this.setState({\n          redirect: true\n        })\n      }\n    }\n\n\n    // шифрование\n    const encoder = new TextEncoder()\n    const masterPassword = encoder.encode('qwerty')\n    let masterPasswordId = BigInt(1)\n    const crypto = new Crypto(masterPassword, masterPasswordId)\n\n    const setKeyPair = (keys, keysId) => {\n      let allKeyPairs = JSON.parse(localStorage.getItem(\"keysPair\")) || []\n      let keysInBase64 = keys\n      keysInBase64.id = keysId\n      keysInBase64.public = helpers.bufferToBase64(keys.public)\n      keysInBase64.private = helpers.bufferToBase64(keys.private)\n      allKeyPairs.push(keysInBase64)\n  \n      localStorage.setItem(\"keysPair\", JSON.stringify(allKeyPairs))\n    }\n\n    const setSignKeyPair = (keys, keysId) => {\n      let allKeyPairs = JSON.parse(localStorage.getItem(\"signKeysPair\")) || []\n      let keysInBase64 = keys\n      keysInBase64.id = keysId\n      keysInBase64.public = helpers.bufferToBase64(keys.public)\n      keysInBase64.private = helpers.bufferToBase64(keys.private)\n      allKeyPairs.push(keysInBase64)\n  \n      localStorage.setItem(\"signKeysPair\", JSON.stringify(allKeyPairs))\n    }\n\n    let cryptoKeysId = socket.makeId()\n\n    // создаем ключи шифрования\n    crypto.getKeyPairShort(1, cryptoKeysId, 99999, true).then(data => {\n      setKeyPair(data, cryptoKeysId)\n      cryptoKeysId = socket.makeId()\n      crypto.getKeyPairMidle(1, cryptoKeysId, 99999, true).then(data => {\n        setKeyPair(data, cryptoKeysId)\n        cryptoKeysId = socket.makeId()\n        crypto.getKeyPairLong(1, cryptoKeysId, 99999, true).then(data => {\n          setKeyPair(data, cryptoKeysId)\n        }).catch(err => {console.log(err)})\n      }).catch(err => {console.log(err)})\n    }).catch(err => {console.log(err)})\n\n    let signKeysId = socket.makeId()\n\n    // создаем ключи подписи\n    crypto.getKeyPairShort(1, signKeysId, 99999, false).then(data => {\n      setSignKeyPair(data, signKeysId)\n      signKeysId = socket.makeId()\n      crypto.getKeyPairMidle(1, signKeysId, 99999, false).then(data => {\n        setSignKeyPair(data, signKeysId)\n        signKeysId = socket.makeId()\n        crypto.getKeyPairLong(1, signKeysId, 99999, false).then(data => {\n          setSignKeyPair(data, signKeysId)\n        }).catch(err => {console.log(err)})\n      }).catch(err => {console.log(err)})\n    }).catch(err => {console.log(err)})\n\n  }\n\n  onChangePhone(e) {\n    this.setState({\n      verifyUid: e.target.value,\n      verifyErr: null\n    })\n  }\n\n  onChangeVerifCode(e) {\n    this.setState({\n      verifyCode: e.target.value,\n      verifyCodeErr: null\n    })\n  }\n\n  getOS() {\n    if (navigator.appVersion.indexOf('Windows') >= 0) return 'Windows'\n    else if (navigator.appVersion.indexOf('Android') >= 0) return 'Android'\n    else if (navigator.appVersion.indexOf('Mac') >= 0) return 'MacOS'\n    else return \"unknown\"\n  }\n\n  getDevice() {\n    if (navigator.userAgent.indexOf(\"Android\") >= 0) return \"Phone\"\n    else if (navigator.userAgent.indexOf(\"webOS\") >= 0) return \"webOS\"\n    else if (navigator.userAgent.indexOf(\"iPhone\") >= 0) return \"iPhone\"\n    else if (navigator.userAgent.indexOf(\"iPad\") >= 0) return \"iPad\"\n    else if (navigator.userAgent.indexOf(\"iPod\") >= 0) return \"iPod\"\n    else return \"PC\"\n  }\n\n  sendverifyCode(e) {\n    e.preventDefault()\n\n    this.setState({\n      btnPreloader: true\n    })\n\n    const data = {\n      Uid: this.state.verifyUid,\n      VCode: this.state.verifyCode,\n      LoginType: 1,\n      UidType: this.props.verifyType === 'by-email' ? 2 : this.props.verifyType === 'by-phone' ? 0 : 0,\n      DeviceName: this.getDevice(),\n      OSName: this.getOS(),\n      AppName: \"Y messenger - WEB\",\n      RequestId: socket.makeId(),\n      RequestType: 33,\n      Type: 0\n    }\n\n    socket.send(data)\n  }\n\n  sendVerificationQuery(e) {\n    e.preventDefault()\n\n    this.setState({\n      btnPreloader: true\n    })\n\n    const data = {\n      VerificationType: this.props.verifyType === 'by-email' ? 1 : this.props.verifyType === 'by-phone' ? 0 : 0,\n      Uid: this.state.verifyUid,\n      RequestId: socket.makeId(),\n      RequestType: 42,\n      Type: 0\n    }\n\n    socket.send(data)\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />\n    } else {\n      return (\n        <Row\n          type=\"flex\"\n          align=\"middle\"\n          justify=\"center\"\n          style={{ height: \"100vh\" }}\n        >\n          <Col>\n            <div className=\"auth__type\">\n              <div className=\"modal_back\" onClick={() => this.props.setPrevPath()}><Icon type=\"arrow-left\" /></div>\n              <h1>Вход</h1>\n              {!this.state.verifyRequestSended ? (\n                <div>\n                  <h2>\n                    {this.props.verifyType === 'by-email' ? 'Введите ваш email' : this.props.verifyType === 'by-phone' ? 'Введите номер телефона' : ''}\n                  </h2>\n                  <Form\n                    onSubmit={this.sendVerificationQuery.bind(this)}\n                    className=\"login-form\"\n                  >\n                    <Form.Item\n                      validateStatus={this.state.verifyErr ? \"error\" : \"\"}\n                      help={this.state.verifyErr ? this.state.verifyErr : \"\"}\n                    >\n                      <Input\n                        autoFocus\n                        inputMode={this.props.verifyType === 'by-email' ? 'email' : this.props.verifyType === 'by-phone' ? 'tel' : ''}\n                        placeholder={this.props.verifyType === 'by-email' ? 'Ваш email' : this.props.verifyType === 'by-phone' ? 'Ваш номер телефона' : ''}\n                        onChange={this.onChangePhone.bind(this)}\n                      />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabled={!this.state.verifyUid}\n                            loading={!!this.state.btnPreloader}\n                          >\n                            Получить {this.props.verifyType === 'by-email' ? 'письмо' : this.props.verifyType === 'by-phone' ? 'SMS' : ''} с кодом\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </Form>\n                </div>\n              ) : (\n                <div>\n                  <h2>Код подтверждения из {this.props.verifyType === 'by-email' ? 'письма' : this.props.verifyType === 'by-phone' ? 'SMS' : ''}</h2>\n                  <p>\n                    Мы отправили {this.props.verifyType === 'by-email' ? 'письмо' : this.props.verifyType === 'by-phone' ? 'SMS' : ''} \n                    на {this.props.verifyType === 'by-email' ? 'email' : this.props.verifyType === 'by-phone' ? 'номер' : ''} {this.state.verifyUid}. Введите\n                    полученый код в поле ниже\n                  </p>\n                  <Form\n                    onSubmit={this.sendverifyCode.bind(this)}\n                    className=\"login-form\"\n                  >\n                    <Form.Item\n                      validateStatus={this.state.verifyCodeErr ? \"error\" : \"\"}\n                      help={this.state.verifyCodeErr ? this.state.verifyCodeErr : \"\"}\n                    >\n                      <Input\n                        autoFocus\n                        inputMode='tel'\n                        placeholder={`Код из ${this.props.verifyType === 'by-email' ? 'письма' : this.props.verifyType === 'by-phone' ? 'SMS' : ''}, 4 цифры`}\n                        onChange={this.onChangeVerifCode.bind(this)}\n                      />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabled={!this.state.verifyCode}\n                            loading={!!this.state.btnPreloader}\n                          >\n                            Войти\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </Form>\n                </div>\n              )}\n            </div>\n          </Col>\n        </Row>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    verifyType: state.path.currentPath\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuth: auth => dispatch(setAuth(auth)),\n    setPrevPath: () => dispatch(setPrevPath())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Verify)\n","import { getFormatedMessages } from \"./Message\"\nimport {\n  getFormatedDialogs,\n  getFormatedChats,\n  getActiveDialog\n} from \"./Dialog\"\nimport {\n  getFormatedUser,\n  getFormatedChatsUsers,\n  getUserById,\n  getUserInitials\n} from \"./User\"\n\nexport default {\n  getFormatedMessages,\n  getFormatedDialogs,\n  getFormatedChats,\n  getFormatedChatsUsers,\n  getFormatedUser,\n  getUserById,\n  getUserInitials,\n  getActiveDialog\n}\n","// eslint-disable-next-line\nexport function getFormatedMessages(messages) {\n  const mess = []\n  messages.forEach(message => {\n    const tempMess = {\n      Attachments: message.Attachments,\n      ConversationId: message.ConversationId,\n      ConversationType: message.ConversationType,\n      GlobalId: message.GlobalId,\n      Read: message.Read,\n      SenderId: message.SenderId,\n      SendingTime: message.SendingTime,\n      Text: message.Text\n    }\n    mess.push(tempMess)\n  })\n\n  return mess\n}\n","// eslint-disable-next-line\nexport function getFormatedDialogs(data) {\n  const dialogs = []\n  data.forEach(dialog => {\n    const tempDialogs = {\n      AttachmentType: dialog.AttachmentType,\n      ConversationId: dialog.ConversationId,\n      ConversationType: dialog.ConversationType,\n      IsMuted: dialog.IsMuted,\n      LastMessageId: dialog.LastMessageId,\n      LastMessageSenderId: dialog.LastMessageSenderId,\n      LastMessageSenderName: dialog.LastMessageSenderName,\n      LastMessageTime: dialog.LastMessageTime,\n      Photo: dialog.Photo,\n      PreviewText: dialog.PreviewText,\n      Read: dialog.Read,\n      SecondUid: dialog.SecondUid,\n      Title: dialog.Title,\n      UnreadedCount: dialog.UnreadedCount\n    }\n    dialogs.push(tempDialogs)\n  })\n\n  return dialogs\n}\n\nexport function getFormatedChats(data) {\n  const chats = []\n  data.forEach(chat => {\n    const tempChat = {\n      About: chat.About,\n      Id: chat.Id,\n      Key: chat.Key,\n      Name: chat.Name,\n      NodesId: chat.NodesId,\n      Photo: chat.Photo,\n      Public: chat.Public,\n      Security: chat.Security,\n      Tag: chat.Tag,\n      Type: chat.Type,\n      Users: chat.Users,\n      Visible: chat.Visible\n    }\n    chats.push(tempChat)\n  })\n\n  return chats\n}\n\nexport function getActiveDialog(dialogs) {\n  const dialog = dialogs.find(dialog => dialog.active)\n\n  return dialog\n}\n","// eslint-disable-next-line\nexport function getFormatedUser(data) {\n  const users = []\n  data.forEach(user => {\n    const tempUser = {\n      About: user.About,\n      Birthday: user.Birthday,\n      BlackList: user.BlackList,\n      City: user.City,\n      Confirmed: user.Confirmed,\n      Contact: user.Contact,\n      ContactsPrivacy: user.ContactsPrivacy,\n      Country: user.Country,\n      Emails: user.Emails,\n      Encryption: user.Encryption,\n      Groups: user.Groups,\n      Id: user.Id,\n      Keys: user.Keys,\n      Language: user.Language,\n      NameFirst: user.NameFirst,\n      NameSecond: user.NameSecond,\n      NodeId: user.NodeId,\n      Online: user.Online,\n      Phones: user.Phones,\n      Photo: user.Photo,\n      RegistrationDate: user.RegistrationDate,\n      Security: user.Security,\n      Tag: user.Tag,\n      Visible: user.Visible\n    }\n    users.push(tempUser)\n  })\n\n  return users\n}\n\nexport function getFormatedChatsUsers(data) {\n  const users = []\n  data.forEach(user => {\n    const tempUser = {\n      Banned: user.Banned,\n      ChatId: user.ChatId,\n      Deleted: user.Deleted,\n      InviterId: user.InviterId,\n      IsMuted: user.IsMuted,\n      Joined: user.Joined,\n      UserId: user.UserId,\n      UserInfo: user.UserInfo,\n      UserRole: user.UserRole\n    }\n    users.push(tempUser)\n  })\n\n  return users\n}\n\nexport function getUserById(id, users) {\n  const foundUser = users.find(user => user.Id === id)\n  return foundUser\n}\n\nexport function getUserInitials(dialog) {\n  if (!dialog.Photo) {\n    let initials = \"\"\n\n    if (dialog.Title || dialog.ChannelName) {\n      let defaultAva = dialog.Title || dialog.ChannelName\n      defaultAva = defaultAva.split(\" \", 2)\n\n      if (defaultAva[0]) {\n        initials = defaultAva[0][0]\n      }\n      if (defaultAva[1]) {\n        initials += defaultAva[1][0]\n      }\n    } else if (dialog.NameFirst) {\n      initials = dialog.NameFirst[0]\n      if (dialog.NameSecond) {\n        initials = initials + dialog.NameSecond[0]\n      }\n    } else {\n      const secondUid = dialog.SecondUid + ''\n      initials = secondUid.substr(0, 2)\n    }\n\n    return initials\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { openDialog } from \"../actions/dialogs\"\nimport selectors from \"../selectors\"\n\nclass SidebarItem extends Component {\n  constructor() {\n    super()\n    this.state = {\n      defaultAva: \"\"\n    }\n  }\n\n  componentDidMount() {\n    // обрезаем строку с последним сообщением (не css потому что 2 строки)\n    const size = 60\n    const newsContent = this.refs.messageText\n    const newsText = newsContent.innerText\n\n    if (newsText.length > size) {\n      newsContent.innerText = newsText.slice(0, size) + \" ...\"\n    }\n\n    // добавляем инициалы в стэйт если нет аватарки\n    if (!this.props.dialog.Photo) {\n      this.setState({\n        defaultAva: selectors.getUserInitials(this.props.dialog)\n      })\n    }\n  }\n\n  openDialog() {\n    const payload = {}\n    payload.type = this.props.type\n    payload.data = this.props.dialog\n    this.props.openDialog(payload)\n  }\n\n  render() {\n    const avatarStyle = {\n      width: \"100%\",\n      height: \"100%\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center center\",\n      backgroundImage: `url(https://${this.props.node}:5000/api/Files/${this.props.dialog.Photo})`,\n      backgroundRepeat: \"no-repeat\"\n    }\n\n    // const defaultAvaBg = {\n    //   background: `hsl(${this.props.dialog.SecondUid}, 90%, 90%)`\n    // }\n\n    return (\n      <NavLink to={\"/\"} onClick={() => this.openDialog()}>\n        <div className=\"sidebar__item\">\n          <div className=\"sidebar__ava\">\n            {this.props.dialog.UnreadedCount > 0 ? (\n              <div className=\"sidebar__badge\">\n                {this.props.dialog.UnreadedCount}\n              </div>\n            ) : null}\n            <div className=\"sidebar__photo\">\n              {\n                this.props.dialog.Photo ?\n                  this.props.dialog.Photo.length > 0 ? \n                    <div style={avatarStyle} />\n                  : null\n                : \n                  <div className=\"sidebar__photo-default avatar-default\">\n                    {this.state.defaultAva}\n                  </div>\n              }\n            </div>\n          </div>\n          <div>\n            <div className=\"sidebar__name\">\n              <span>{this.props.dialog.Title || this.props.dialog.NameFirst + this.props.dialog.NameSecond || this.props.dialog.ChannelName || this.props.dialog.Name || 'Имя скрыто'}</span>\n            </div>\n            <div className=\"sidebar__message\" ref=\"messageText\">\n              {\n                this.props.dialog.PreviewText ? this.props.dialog.PreviewText :\n                this.props.dialog.AttachmentType ===  1 ? 'Файл' :\n                this.props.dialog.AttachmentType ===  2 ? 'Изображение' :\n                this.props.dialog.About ? this.props.dialog.About : null\n              }\n            </div>\n          </div>\n        </div>\n      </NavLink>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarItem)\n","/* eslint-disable */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport logo from \"../assets/logo.PNG\"\nimport { toggleDrawer } from \"../actions/ui\"\nimport { Icon } from 'antd';\n\nfunction HeadSidebar(props) {\n  return (\n    <div className=\"head-sidebar\">\n      <Icon type=\"menu\" className='menu-btn' onClick={() => props.toggleDrawer()} />\n      <div className=\"head-sidebar__logo\">\n        <img src={logo} alt=\"Y Messenger\" />\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleDrawer: () => dispatch(toggleDrawer())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadSidebar)","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Input } from \"antd\"\nimport { searchStart, searchEnd } from \"../actions/search\"\nimport socket from \"../transport/Connect\"\n\nconst { Search } = Input\n\nfunction SearchComponent(props) {\n  const [queryText, setQueryText] = useState(\"\")\n  const searchDialogs = value => {\n    // в функцию может прилетать и текст и евент\n    if (typeof value === \"object\") {\n      setQueryText(value.target.value)\n    } else if (typeof value === \"string\") {\n      setQueryText(value)\n    }\n\n    if (queryText.length) {\n      props.searchStart(queryText.toLowerCase())\n    } else if (!queryText.length) {\n      props.searchEnd()\n    }\n\n    const searchRequest = {\n      RequestType: 46,\n      SearchQuery: queryText,\n      RequestId: socket.makeId(),\n      Direction: true,\n      Type: 0\n    }\n\n    socket.send(searchRequest)\n  }\n\n  return (\n    <div className=\"search\">\n      <Search\n        placeholder=\"Поиск\"\n        value={queryText}\n        onSearch={searchDialogs}\n        onChange={searchDialogs}\n        enterButton\n      />\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.ui.search\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchStart: data => dispatch(searchStart(data)),\n    searchEnd: () => dispatch(searchEnd())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent)\n","export function searchResultReceived(searchResult) {\n  return {\n    type: \"SEARCH_RESULT_RECEIVED\",\n    searchResult\n  }\n}\n\nexport function searchStart(text) {\n  return {\n    type: \"SEARCH_START\",\n    text\n  }\n}\n\nexport function searchEnd() {\n  return {\n    type: \"SEARCH_END\"\n  }\n}\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport SidebarItem from \"./SidebarItem\"\nimport HeadSidebar from \"./HeadSidebar\"\nimport Search from \"./Search\"\nimport { openDialog } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\n\nfunction Sidebar(props) {\n  const [localFoundDialogs, setLocalFoundDialogs] = useState([])\n\n  useEffect(() => {\n    if (props.search) {\n      const searchDialogs = props.dialogs.filter(dialog => {\n        if (!dialog.fake) {\n          if (dialog.Title) {\n            return dialog.Title.toLowerCase().indexOf(props.search) >= 0\n          }\n        }\n      })\n      setLocalFoundDialogs(searchDialogs)\n    } else {\n      setLocalFoundDialogs(props.dialogs)\n    }\n  }, [props.search, props.dialogs])\n\n  const showSidebarItem = () => {\n    return localFoundDialogs.map(dialog => {\n      if(dialog && !dialog.fake){\n        return <SidebarItem dialog={dialog} key={socket.makeId()} type='dialog' />\n      }\n    })\n  }\n\n  const showSearchResultChannels = () => {\n    if (props.searchResult.channels) {\n      return props.searchResult.channels.map((dialog, i) => {\n        if(dialog){\n          if (i === 0) {\n            return (\n              <div key={socket.makeId()}>\n                <div className=\"sidebar__title\">Каналы:</div>\n                <SidebarItem dialog={dialog} type=\"channel\" />\n              </div>\n            )\n          } else {\n            return (\n              <SidebarItem dialog={dialog} type=\"channel\" key={socket.makeId()} />\n            )\n          }\n        }\n      })\n    }\n  }\n\n  const showSearchResultChats = () => {\n    if (props.searchResult.chats) {\n      return props.searchResult.chats.map((dialog, i) => {\n        if(dialog){\n          if (i === 0) {\n            return (\n              <div key={socket.makeId()}>\n                <div className=\"sidebar__title\">Чаты:</div>\n                <SidebarItem dialog={dialog} type=\"chat\" />\n              </div>\n            )\n          } else {\n            return (\n              <SidebarItem dialog={dialog} type=\"chat\" key={socket.makeId()} />\n            )\n          }\n        }\n      })\n    }\n  }\n\n  const showSearchResultUsers = () => {\n    if (props.searchResult.users) {\n      return props.searchResult.users.map((dialog, i) => {\n        if(dialog){\n          if (i === 0) {\n            return (\n              <div key={socket.makeId()}>\n                <div className=\"sidebar__title\">Пользователи:</div>\n                <SidebarItem dialog={dialog} type=\"user\" />\n              </div>\n            )\n          } else {\n            return (\n              <SidebarItem dialog={dialog} type=\"user\" key={socket.makeId()} />\n            )\n          }\n        }\n      })\n    }\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <HeadSidebar />\n      <Search />\n      <div className=\"sidebar-viewport\">\n        {showSidebarItem()}\n        {props.searchResult ? showSearchResultUsers() : null}\n        {props.searchResult ? showSearchResultChats() : null}\n        {props.searchResult ? showSearchResultChannels() : null}\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    search: state.ui.search,\n    searchResult: state.searchResult\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport ReactTimeAgo from \"react-time-ago\"\nimport JavascriptTimeAgo from \"javascript-time-ago\"\nimport ru from \"javascript-time-ago/locale/ru\"\nimport { Icon, Switch } from \"antd\"\nimport socket from \"../transport/Connect\"\nimport { openProfile, toggleCryptoMode } from \"../actions/ui\"\nimport { closeDialog } from \"../actions/dialogs\"\nimport selectors from \"../selectors\"\n\nJavascriptTimeAgo.locale(ru)\n\nfunction HeadDialog(props) {\n  const [dialog, setDialog] = useState(null)\n  const [defaultAva, setDefaultAva] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [windowWidth, setWindowWidth] = useState(document.body.clientWidth)\n\n  useEffect(() => {}, [windowWidth])\n\n  window.onresize = () => {\n    setWindowWidth(document.body.clientWidth)\n  }\n\n  useEffect(() => {\n    if (props.users && dialog) {\n      const user = props.users.find(user => user.Id === dialog.SecondUid)\n      setUser(user)\n    }\n  }, [props.users, dialog])\n\n  useEffect(() => {\n    props.dialogs.forEach(dialog => {\n      if (dialog.active) {\n        setDialog(dialog)\n      }\n    })\n  }, [props.dialogs])\n\n  useEffect(() => {\n    if (dialog) {\n      // добавляем инициалы в стэйт если нет аватарки\n      if (!dialog.Photo) {\n        setDefaultAva(selectors.getUserInitials(dialog))\n      }\n    }\n  }, [dialog])\n\n  const logout = () => {\n    const logout = {\n      Full: false,\n      AccessToken: localStorage.getItem(\"AccessToken\"),\n      RequestType: 34,\n      RequestId: socket.makeId(),\n      Type: 0\n    }\n\n    socket.send(logout)\n\n    localStorage.removeItem(\"AccessToken\")\n    localStorage.removeItem(\"FileAccessToken\")\n    localStorage.removeItem(\"RefreshToken\")\n    localStorage.removeItem(\"User\")\n\n    window.location.replace(\"/\")\n  }\n\n  const handleOpenProfile = () => {\n    props.openProfile(dialog)\n  }\n\n  return (\n    <div className=\"head-dialog\">\n      {windowWidth <= 675 && selectors.getActiveDialog(props.dialogs) ? (\n        <div className=\"head-dialog__back\" onClick={props.closeDialog} >\n          <Icon type=\"left\" />\n        </div>\n      ) : null}\n      <div className=\"head-dialog__user\" onClick={handleOpenProfile}>\n        <div className=\"head-dialog__ava\">\n          {dialog ? (\n            dialog.Photo ? (\n              <div\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center center\",\n                  backgroundImage: `url(https://${props.node}:5000/api/Files/${dialog.Photo})`,\n                  backgroundRepeat: \"no-repeat\"\n                }}\n              />\n            ) : (\n              <div className=\"head-dialog__photo-default avatar-default\">{defaultAva}</div>\n            )\n          ) : null}\n        </div>\n        <div>\n          <div className=\"head-dialog__name\">{dialog ? dialog.Title || dialog.ChannelName || 'Имя скрыто' : null}</div>\n          <div className=\"head-dialog__status\">\n            {user ?\n              user.Online ? \n                <ReactTimeAgo date={user.Online * 1000} locale=\"ru\" />\n              : null\n            : null}\n          </div>\n        </div>\n      </div>\n      {\n        dialog ? \n          <div className='switch-label'>\n            <div>Секретный чат</div>\n            <Switch onChange={value => props.toggleCryptoMode(value)} />\n          </div>\n        : null\n      }\n      {/* <div className='head__lock'>\n        <LockIcon />\n      </div> */}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    users: state.users,\n    node: state.node.activeNode.Domains[0],\n    isCrypto: state.ui.isCrypto\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openProfile: data => dispatch(openProfile(data)),\n    closeDialog: () => dispatch(closeDialog()),\n    toggleCryptoMode: (isCrypto) => dispatch(toggleCryptoMode(isCrypto))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadDialog)\n","export function setCallbackId(id) {\n  return {\n    type: \"SET_CALLBACK_ID\",\n    id\n  }\n}\n\nexport function setCallbackData(response) {\n  return {\n    type: \"SET_CALLBACK_DATA\",\n    response\n  }\n}\n","/* eslint-disable */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport selectors from \"../selectors\"\n\nfunction Avatar(props) {\n  const avatarStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    backgroundImage: `url(https://${props.node}:5000/api/Files/${props.user.Photo})`,\n    backgroundRepeat: \"no-repeat\",\n    borderRadius: \"100%\"\n  }\n\n  return (\n    <div className=\"avatar\">\n      {\n        props.user.Photo ? \n          <div style={avatarStyle}></div>\n        :\n          <div className=\"avatar-default\">\n            {selectors.getUserInitials(props.user)}\n          </div>\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Avatar)\n","export function setSymmetricKey(symmetricKey) {\n  return {\n    type: \"SET_SYMMETRIC_KEY\",\n    symmetricKey\n  }\n}\n\nexport function setSymmetricKeyForDecrypt(symmetricKeyForDecrypt) {\n  return {\n    type: \"SET_SYMMETRIC_KEY_FOR_DECRYPT\",\n    symmetricKeyForDecrypt\n  }\n}\n\nexport function setPublicKeys(publicKeys) {\n  return {\n    type: \"SET_PUBLIC_KEYS\",\n    publicKeys\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"check\"\n}, React.createElement(\"polygon\", {\n  points: \"142.8,323.85 35.7,216.75 0,252.45 142.8,395.25 448.8,89.25 413.1,53.55  \"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgTickIcon = function SvgTickIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"448.8px\",\n    height: \"448.8px\",\n    viewBox: \"0 0 448.8 448.8\",\n    style: {\n      enableBackground: \"new 0 0 448.8 448.8\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTickIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/tick_icon.06277842.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"done-all\"\n}, React.createElement(\"path\", {\n  d: \"M448.8,161.925l-35.7-35.7l-160.65,160.65l35.7,35.7L448.8,161.925z M555.899,126.225l-267.75,270.3l-107.1-107.1 l-35.7,35.7l142.8,142.8l306-306L555.899,126.225z M0,325.125l142.8,142.8l35.7-35.7l-142.8-142.8L0,325.125z\"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgDoubleTickIcon = function SvgDoubleTickIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"594.149px\",\n    height: \"594.149px\",\n    viewBox: \"0 0 594.149 594.149\",\n    style: {\n      enableBackground: \"new 0 0 594.149 594.149\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDoubleTickIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/double_tick_icon.7319bcfe.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { Modal, Icon } from \"antd\"\nimport { connect } from \"react-redux\"\nimport { NavLink, Redirect } from \"react-router-dom\"\nimport selectors from \"../selectors\"\nimport { forwardingMessage, openDialog } from \"../actions/dialogs\"\nimport { setCallbackId } from \"../actions/callbacks\"\nimport Avatar from \"./Avatar\"\nimport Crypto from \"y_crypto\"\nimport { setSymmetricKey, setSymmetricKeyForDecrypt } from \"../actions/keys\"\nimport helpers from \"../helpers\"\nimport socket from \"../transport/Connect\"\nimport JSONbig from \"json-bigint\"\nimport { ReactComponent as TickIcon } from \"../assets/tick_icon.svg\"\nimport { ReactComponent as DoubleTickIcon } from \"../assets/double_tick_icon.svg\"\n\nfunction Message(props) {\n  const [visible, setVisible] = useState(false)\n  const [messageTime, setMessageTime] = useState(\"\")\n  const [isContextMenuVisible, setSsContextMenuVisible] = useState(false)\n  const [redirect, setRedirect] = useState(false)\n  const [decryptedMessage, setDecryptedMessage] = useState(null)\n  const [fileMsg, setFileMsg] = useState(false)\n  // const [encryptPublicKeyRequest, setEncryptPublicKeyRequest] = useState(null)\n  // const [signPublicKeyRequest, setSignPublicKeyRequest] = useState(null)\n  const user = selectors.getUserById(props.message.SenderId, props.users) || {}\n\n  const encoder = new TextEncoder()\n  const decoder = new TextDecoder()\n  const masterPassword = encoder.encode('qwerty')\n  let masterPasswordId = BigInt(1)\n  const crypto = new Crypto(masterPassword, masterPasswordId)\n\n  useEffect(() => {\n    if (props.message) {\n      // формируем время сообщения\n      const timestamp = new Date(props.message.SendingTime * 1000)\n      const date = new Date()\n      date.setTime(timestamp)\n\n      let hour = `${date.getHours()}`\n      let minutes = `${date.getMinutes()}`\n\n      if (hour.length === 1) {\n        hour = `0${hour}`\n      }\n      if (minutes.length === 1) {\n        minutes = `0${minutes}`\n      }\n\n      setMessageTime(`${hour}:${minutes}`)\n    }\n  }, [props.message])\n\n  // useEffect(() => {\n  //   console.log(props.publicKeys)\n  // }, [props.publicKeys])\n\n  const setLinks = text => {\n    let str = text\n    let reg = false\n    if (str) {\n      reg = str.match(/(http|https|ftp|ftps)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(\\/\\S*)?/g)\n    }\n    let k = 0\n    // console.log(reg);\n\t\tfor (k in reg){\n      // console.log(reg[k]);\n\t\t\tstr = str.replace(reg[k], ' <a href=\"' + reg[k] + '\" target=\"_blank\"> ' + reg[k] + ' </a> ')\n    }\n\n    return str\n    \n    // let mes_block = this.refs.textMessage;\n    // if (mes_block) {\n    //   mes_block.innerHTML = str\n    // }\n  }\n\n  function getForwardingUser(userId) {\n    const forwardingUser = props.users.find(user => user.Id === userId)\n    if (forwardingUser) {\n      return ` ${forwardingUser.NameFirst} ${forwardingUser.NameSecond}`\n    }\n  }\n\n  function showMessage(message) {\n    if (message.Attachments) {\n      if (message.Attachments.length) {\n        // СООБЩЕНИЯ С ВЛОЖЕНИЯМИ\n        // сообщения с изображением\n        if (message.Attachments[0].Type === 2) {\n          return (\n            <div className=\"message__img\" onClick={() => setVisible(true)}>\n              <img\n                src={`https://${props.node}:5000/api/Files/` + message.Attachments[0].Payload.FileId}\n                alt=\"\"\n              />\n            </div>\n          )\n        } else if (message.Attachments[0].Type === 1) {\n          // сообщение с файлом\n          if (message.Attachments[0].Payload) {\n            return (\n              <div>\n                <Icon type=\"download\" className=\"download-icon\" />\n                <a href={`https://${props.node}:5000/api/Files/` + message.Attachments[0].Payload.FileId} download>\n                  {message.Attachments[0].Payload.Filename}\n                </a>\n                <span dangerouslySetInnerHTML={{__html: setLinks(message.Text)}}></span>\n              </div>\n            )\n          }\n        } else if (message.Attachments[0].Type === 5) {\n          // Пересланное сообщение\n          if (message.Attachments[0].Payload.length > 0) {\n            return (\n              <div className=\"forwarding_message\">\n                Пересланное сообщение от\n                <NavLink to=\"/\" onClick={() => openDialog()}>\n                  {getForwardingUser(message.Attachments[0].Payload[0].SenderId)}\n                </NavLink>\n                <div dangerouslySetInnerHTML={{__html: setLinks(message.Attachments[0].Payload[0].Text)}} className=\"forward-message-text\"></div>\n                {\n                  message.Text ?\n                    <div dangerouslySetInnerHTML={{__html: setLinks(message.Text)}}></div>\n                  : null\n                }\n              </div>\n            )\n          } else {\n            return (\n              <div className=\"forwarding_message\">\n                Пересланное сообщение от:\n                <div>Пересланное сообщение удалено</div>\n              </div>\n            )\n          }\n        } else if (message.Attachments[0].Type === 6) {\n          // console.log(message)\n            // let foundPublicKey = null\n            let foundPublicSignKey = null\n            if (message.SenderId === props.user.Id) {\n              // console.log('out - ', JSONbig.stringify(message.Attachments[0].Payload.SignKeyId))\n            }\n            else {\n              // console.log('into - ', message)\n              // foundPublicKey = props.publicKeys.find(publicKey => JSONbig.stringify(publicKey.KeyId) === JSONbig.stringify(message.Attachments[0].Payload.KeyId))\n              foundPublicSignKey = props.publicKeys.find(publicKey => JSONbig.stringify(publicKey.KeyId) === JSONbig.stringify(message.Attachments[0].Payload.SignKeyId))\n\n              if (!foundPublicSignKey) {\n                // console.log(\"запршиваем ключ подписи\")\n                let requestId2 = socket.makeId()\n                // localStorage.setItem(\"encryptPublicKey\", requestId2)\n                const getUserKeys2 = {\n                  UserId: message.SenderId,\n                  Direction: true,\n                  KeysId: [JSONbig.stringify(message.Attachments[0].Payload.SignKeyId)],\n                  RequestType: 105,\n                  RequestId: requestId2,\n                  Type: 0\n                }\n                socket.send(getUserKeys2)\n              }\n            }\n          \n            if(foundPublicSignKey){\n              let keysPair = JSON.parse(localStorage.getItem(\"keysPair\"))\n              let privateKey = keysPair.find(key => JSONbig.stringify(key.id) === JSONbig.stringify(message.Attachments[0].Payload.KeyId))\n              if (privateKey) {\n                crypto.setPublicSignKeyToRecive(helpers.base64ToBuffer(foundPublicSignKey.Data))\n                crypto.setPrivateEncryptKeyToRecive(helpers.base64ToBuffer(privateKey.private))\n  \n                crypto.decryptKeyMsg(helpers.base64ToBuffer(message.Attachments[0].Payload.EncryptedData)).then(data => {\n                  const symmetricKeyForDecrypt = props.symmetricKeysForDecrypt.find(key => key.idKey == data.idKey)\n                  // console.log('симметричный расшифрован - ', data)\n                  if (!symmetricKeyForDecrypt) {\n                    props.setSymmetricKeyForDecrypt(data)\n                  }\n                }).catch(err => {\n                  console.log(err)\n                })\n              } else {\n                // console.log(\"Не найден приватный ключ\")\n              }\n            }\n\n\n            \n            // if (message.Attachments[0].Payload.KeyId.toString().length < 15) {\n            // props.setSymmetricKeyForDecrypt(payload)\n            // }\n            // if (!props.symmetricKey) {\n              // props.setSymmetricKey(message.Attachments[0].Payload.EncryptedData)\n              // localStorage.setItem('keyID', message.Attachments[0].Payload.KeyId)\n            // }\n          return <div>Симметричный ключ шифрования</div>\n        } else if (message.Attachments[0].Type === 4) {\n          // console.log(message)\n          const symmetricKeyForDecrypt = props.symmetricKeysForDecrypt.find(key => key.idKey == JSONbig.stringify(message.Attachments[0].Payload.KeyId))\n          let failedDecryptMsg = false\n          // console.log(message.GlobalId, symmetricKeyForDecrypt)\n          if (symmetricKeyForDecrypt) {\n            const signKeyForDecrypt = props.publicKeys.find(key => JSONbig.stringify(key.KeyId) == JSONbig.stringify(message.Attachments[0].Payload.SignKeyId))\n            if (signKeyForDecrypt) {\n              // console.log(message)\n              // console.log(symmetricKeyForDecrypt)\n              // console.log(signKeyForDecrypt)\n              crypto.setSymmetricKey(symmetricKeyForDecrypt.key)\n              crypto.setPublicSignKeyToRecive(helpers.base64ToBuffer(signKeyForDecrypt.Data))\n              crypto.decryptSecretMsg(helpers.base64ToBuffer(message.Attachments[0].Payload.EncryptedData)).then(result => {\n                if (Crypto.getMetaDataMsg(helpers.base64ToBuffer(message.Attachments[0].Payload.EncryptedData)).attach.type === 0) {\n                  setDecryptedMessage(decoder.decode(result.msg))\n                } else {\n                  setFileMsg(true)\n                  setDecryptedMessage(\"Просмотр файлов доступен только в мобильной версии приложения\")\n                }\n                // console.log(message)\n              }).catch(err => {\n                console.log(err)\n                setDecryptedMessage(\"Неподдерживаемое зашифрованное сообщение\")\n              })\n            }\n            // console.log(symmetricKeyForDecrypt)\n            // const encoder2 = new TextEncoder()\n            // const decoder2 = new TextDecoder()\n            // const masterPassword2 = encoder.encode('qwerty')\n            // let masterPasswordId2 = BigInt(1)\n            // const crypto2 = new Crypto(masterPassword2, masterPasswordId2)\n          } else {\n            // console.log(\"Не удалось расшифровать сообщение\")\n            failedDecryptMsg = \"Зашифрованное сообщение\"\n            // setDecryptedMessage(\"Не удалось расшифровать сообщение\")\n          }\n          \n          return (\n            <div style={!decryptedMessage || fileMsg ? {fontStyle: \"italic\"} : null}>\n              {failedDecryptMsg ? failedDecryptMsg : decryptedMessage ? decryptedMessage : \"Сообщение расшифровывается...\"}\n            </div>\n          )\n        } else {\n          // прочие типы сообщений\n          return <div style={{fontStyle: \"italic\"}}>*неподдерживаемый тип сообщения*</div>\n        }\n      } else {\n        // обычное сообщение с текстом\n        return message.Text ? (\n          <div dangerouslySetInnerHTML={{__html: setLinks(message.Text)}}></div>\n        ) : null\n      }\n    } else {\n      // обычное сообщение с текстом\n      return message.Text ? (\n        <div>{message.Text}</div>\n      ) : null\n    }\n  }\n\n  function showMessageMenu() {\n    setSsContextMenuVisible(!isContextMenuVisible)\n  }\n\n  const handleReplyToMessage = () => {\n    props.forwardingMessage(props.message)\n  }\n\n  const handleForwardMessage = () => {\n    props.forwardingMessage(props.message)\n    setRedirect(true)\n  }\n\n  const openDialog = () => {\n    const conversation = props.dialogs.find(dialog => dialog.ConversationId === props.message.Attachments[0].Payload[0].ConversationId && dialog.ConversationType === props.message.Attachments[0].Payload[0].ConversationType)\n    if (conversation) {\n      const payload = {}\n      payload.type = \"dialog\"\n      payload.data = conversation\n      props.openDialog(payload)\n    }\n  }\n\n  if (redirect) {\n    return <Redirect to=\"/\" />\n  }\n  if (user && props.message) {\n    return (\n      <div\n        className={\n          user.currentUser\n            ? \"message message-out\"\n            : \"message message-in\"\n        }\n        id={props.message.GlobalId}\n        onClick={showMessageMenu}\n        style={props.message && isContextMenuVisible ? { background: \"#ebf5ff\" } : null }\n      >\n        <div className=\"wrap-message-content\">\n          {!user.currentUser && props.message.ConversationType !== 3 ? <Avatar user={user} /> : null}\n          {\n            user.currentUser && props.message.Read ?\n              <DoubleTickIcon className='message__read' />\n            : user.currentUser && !props.message.Read ? \n              <TickIcon className='message__read' />\n            : null\n          }\n          <div \n            className={\n              props.message.Attachments[0] ?\n                props.message.Attachments[0].Type === 6 ? \"message__content key_message\"  :\n                props.message.Attachments[0].Type === 4 ? \"message__content encrypted_message\"  : null\n              : \"message__content\"\n            }\n          >\n            {\n              !user.currentUser ?\n                <div className=\"message__name\">\n                  {user.NameFirst ? user.NameFirst + ' ' : null}\n                  {user.NameSecond ? user.NameSecond : null}\n                </div>\n              : null\n            }          \n            {showMessage(props.message)}\n          </div>\n          <div className=\"message__time\">{messageTime}</div>\n        </div>\n        {props.message.Attachments && props.message.Attachments[0] ? (\n          <Modal\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            footer={null}\n            maskClosable\n          >\n            <img\n              className=\"popup__img\"\n              src={`https://${props.node}:5000/api/Files/${props.message.Attachments[0].Payload.FileId}`}\n              alt=\"\"\n            />\n          </Modal>\n        ) : null}\n        {props.message && isContextMenuVisible ? (\n          <div className=\"message-menu\">\n            <ul>\n              <li onClick={handleReplyToMessage}>Ответить</li>\n              <li onClick={handleForwardMessage}>Переслать</li>\n            </ul>\n          </div>\n        ) : null}\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users,\n    user: state.users.find(user => user.currentUser === true),\n    dialogs: state.dialogs,\n    forwardMessage: state.forwardMessage,\n    node: state.node.activeNode.Domains[0],\n    // symmetricKey: state.symmetricKey,\n    symmetricKeysForDecrypt: state.symmetricKeysForDecrypt,\n    // callbacks: state.callbacks,\n    publicKeys: state.publicKeys\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    forwardingMessage: message => dispatch(forwardingMessage(message)),\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    setSymmetricKey: key => dispatch(setSymmetricKey(key)),\n    setSymmetricKeyForDecrypt: key => dispatch(setSymmetricKeyForDecrypt(key)),\n    setCallbackId: id => dispatch(setCallbackId(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Message)\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(-198)\",\n  id: \"g69\"\n}, React.createElement(\"g\", {\n  id: \"_x33__22_\"\n}, React.createElement(\"g\", {\n  id: \"g66\"\n}, React.createElement(\"path\", {\n  id: \"path64\",\n  d: \"m 544.5,99 v 495 c 0,82.021 -66.479,148.5 -148.5,148.5 -82.021,0 -148.5,-66.479 -148.5,-148.5 V 148.5 c 0,-54.673 44.327,-99 99,-99 54.673,0 99,44.327 99,99 V 594 c 0,27.349 -22.176,49.5 -49.5,49.5 -27.349,0 -49.5,-22.151 -49.5,-49.5 V 198 H 297 v 396 c 0,54.673 44.327,99 99,99 54.673,0 99,-44.327 99,-99 V 148.5 C 495,66.479 428.521,0 346.5,0 264.479,0 198,66.479 198,148.5 V 618.75 C 210.202,716.389 295.045,792 396,792 496.955,792 581.798,716.389 594,618.75 V 99 Z\"\n}))));\n\nvar SvgPaperclipIcon = function SvgPaperclipIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlSpace: \"preserve\",\n    viewBox: \"0 0 396 792\",\n    height: 0,\n    width: 0,\n    y: \"0px\",\n    x: \"0px\",\n    id: \"Capa_1\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPaperclipIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/paperclip_icon.b4a5561e.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g95\"\n}, React.createElement(\"g\", {\n  id: \"send\"\n}, React.createElement(\"polygon\", {\n  id: \"polygon92\",\n  points: \"0,38.25 0,216.75 382.5,267.75 0,318.75 0,497.25 535.5,267.75 \"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g97\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g99\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g101\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g103\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g105\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g107\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g109\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g111\"\n});\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g113\"\n});\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g115\"\n});\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g117\"\n});\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g119\"\n});\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g121\"\n});\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g123\"\n});\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g125\"\n});\n\nvar SvgSendButtonIcon = function SvgSendButtonIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlSpace: \"preserve\",\n    viewBox: \"0 0 535.5 459\",\n    height: 0,\n    width: 0,\n    y: \"0px\",\n    x: \"0px\",\n    id: \"Capa_1\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSendButtonIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/send_button_icon.56dc055f.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { ReactComponent as Paperclip } from \"../assets/paperclip_icon.svg\"\nimport { ReactComponent as SendBtn } from \"../assets/send_button_icon.svg\"\nimport { forwardingMessage } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\nimport { Upload, Icon } from \"antd\"\nimport axios from 'axios'\nimport Crypto from \"y_crypto\"\nimport helpers from \"../helpers\"\n\nfunction NewMessageField(props) {\n  const [messageText, setMessageText] = useState(\"\")\n  const [imgLoading, setImgLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(null)\n  const [attachmentsType, setAttachmentsType] = useState(null)\n\n  useEffect(() => {\n    if (imageUrl) {\n      sendMessage()\n    }\n  }, [imageUrl])\n\n  const sendMessage = () => {\n    \n    if (props.forwardMessage) {\n      // отправка пересылаемого сообщения или ответ на сообщение\n      const data = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: messageText,\n            Attachments: [\n              {\n                Type: 5,\n                Payload: {\n                  MessagesGlobalId: [props.forwardMessage.GlobalId],\n                  ConversationId: props.forwardMessage.ConversationId,\n                  ConversationType: props.forwardMessage.ConversationType\n                }\n              }\n            ]\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(data)\n    } else if (imageUrl) {\n      // сообщение с изображением\n      const data = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: messageText,\n            Attachments: [\n              {\n                Type: attachmentsType,\n                Hash: null,\n                MessageId: 0,\n                Payload: imageUrl,\n                NodesId: null\n              }\n            ],\n            GlobalId: null\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(data)\n    } else if (props.isCrypto) {\n      // зашифрованное текстовое сообщение\n      const encoder = new TextEncoder()\n      const masterPassword = encoder.encode('qwerty')\n      let masterPasswordId = BigInt(1)\n      const crypto = new Crypto(masterPassword, masterPasswordId)\n\n      crypto.setSymmetricKey(helpers.base64ToBuffer(props.symmetricKey.key))\n      crypto.encryptMsg(1, 1, 99999, encoder.encode(messageText)).then(encryptedMessage => {\n        const data = {\n          Messages: [\n            {\n              Id: 0,\n              SendingTime: \"\",\n              SenderId: props.user.Id,\n              ReceiverId: props.dialog.SecondUid,\n              ConversationId: props.dialog.ConversationId,\n              ConversationType: props.dialog.ConversationType,\n              Read: false,\n              NodesId: null,\n              ReplyTo: null,\n              Text: null,\n              Attachments: [\n                {\n                  Type: 4,\n                  Hash: null,\n                  MessageId: 0,\n                  Payload: {\n                    KeyId: props.symmetricKey.id,\n                    SignKeyId: JSON.parse(localStorage.getItem(\"signKeysPair\"))[JSON.parse(localStorage.getItem(\"signKeysPair\")).length-1].id,\n                    SaveFlag: 1,\n                    Lifetime: 99999,\n                    EncryptedData: helpers.bufferToBase64(encryptedMessage)\n                  },\n                  NodesId: null\n                }\n              ],\n              GlobalId: null\n            }\n          ],\n          RequestType: 39,\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n        socket.send(data)\n      }).catch(err => console.log(err))\n    } else {\n      // отправка обычного сообщения без вложения\n      const data = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: messageText,\n            Attachments: null,\n            GlobalId: null\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(data)\n    }\n\n    setMessageText(\"\")\n\n    if(props.forwardMessage){\n      props.forwardingMessage(false)\n    }\n  }\n\n  const handleOnKeyDown = event => {\n    if (event.keyCode === 13) {\n      sendMessage()\n    }\n  }\n\n  const handleUploadImage = data => {\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', data.file)\n\n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            setImgLoading(false)\n            setImageUrl(res.data.File.FileId)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          console.log(err)\n        }\n    )\n  }\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\"\n    if (isJpgOrPng) {\n      setAttachmentsType(2)\n    } else {\n      setAttachmentsType(1)\n    }\n    return isJpgOrPng\n  }\n\n  const handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      setImgLoading(true)\n      return\n    }\n  }\n\n  return (\n    <div className=\"new-message\">\n      <Upload\n        showUploadList={false}\n        customRequest={file => handleUploadImage(file)}\n        beforeUpload={beforeUpload}\n        onChange={handleChange}\n      >\n        {\n          imgLoading ? \n            <Icon type=\"loading\" className=\"loading-icon\" />\n          :\n            <Paperclip className=\"new-message__attach\"/>\n        }\n      </Upload>\n      <input\n        type=\"text\"\n        className=\"new-message__inp\"\n        placeholder=\"Введите сообщение\"\n        value={messageText}\n        onChange={e => {\n          setMessageText(e.target.value)\n        }}\n        onKeyDown={handleOnKeyDown}\n      />\n      <SendBtn\n        onClick={() => {\n          sendMessage()\n        }}\n        className=\"new-message__send\"\n      />\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.users.find(user => user.currentUser === true),\n    dialogs: state.dialog,\n    forwardMessage: state.forwardMessage,\n    node: state.node.activeNode.Domains[0],\n    symmetricKey: state.symmetricKey,\n    isCrypto: state.ui.isCrypto\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    forwardingMessage: message => dispatch(forwardingMessage(message))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMessageField)\n","/* eslint-disable */\nimport React, { useState, useEffect, useRef } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button } from 'antd'\nimport Message from \"./Message\"\nimport NewMessageField from \"./NewMessageField\"\nimport { openDialog } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\nimport axios from 'axios'\nimport { ui } from \"../reducers/ui\"\nimport helpers from \"../helpers\"\nimport Crypto from \"y_crypto\"\nimport { setCallbackId } from \"../actions/callbacks\"\nimport { setSymmetricKey, setSymmetricKeyForDecrypt } from \"../actions/keys\"\n\nfunction Dialog(props) {\n  const [messages, setMessages] = useState([])\n  const [dialog, setDialog] = useState(null)\n  const [messagesLoading, setMessagesLoading] = useState(false)\n  const [height1, setHeight1] = useState(0)\n  const [height2, setHeight2] = useState(0)\n  const [callbackFunctions, setCallbackFunctions] = useState([])\n  const [interlocutorEncryptPublicKey, setInterlocutorEncryptPublicKey] = useState(null)\n  const mesViewport = useRef(null)\n\n  // функция для получения отправитля в сообщениях и в пересланных сообщениях\n  const getUsers = mess => {\n    const users = []\n    mess.forEach(message => {\n      if (message.Attachments) {\n        if (message.Attachments.length) {\n          if (message.Attachments[0].Type === 5) {\n            if (message.Attachments[0].Payload.length > 0) {\n              const foundUser = props.users.find(\n                user => user.Id === message.Attachments[0].Payload[0].SenderId\n              )\n\n              if (!foundUser) {\n                if(message.Attachments[0].Payload[0].SenderId){\n                  users.push(message.Attachments[0].Payload[0].SenderId)\n                }\n              }\n            }\n          }\n        }\n      }\n      const foundUser = props.users.find(user => user.Id === message.SenderId)\n\n      if (!foundUser) {\n        if(message.SenderId){\n          users.push(message.SenderId)\n        }\n      }\n    })\n    const uniqueUsers = [...new Set(users.map(n => n))]\n\n    if (uniqueUsers.length) {\n      const requestUsers = {\n        UsersId: [...uniqueUsers],\n        RequestType: 28,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(requestUsers)\n    }\n  }\n\n  useEffect(() => {\n    props.callbacks.forEach(callback => {\n      if (callbackFunctions.includes(callback.id) && callback.data) {\n        console.log('вот этот колбек', callback)\n        \n        const encoder = new TextEncoder()\n        const masterPassword = encoder.encode('qwerty')\n        let masterPasswordId = BigInt(1)\n        const crypto = new Crypto(masterPassword, masterPasswordId)\n\n        if (callback.data.Keys[0]) {\n          let keyTimelife = (callback.data.Keys[0].GenerationTime + callback.data.Keys[0].Lifetime)*1000\n          let date = new Date()\n          if (date.getTime()/1000 < keyTimelife) {\n            console.log(\"Ключ собеседника живой, все нормально\")\n            let interEncryptPublicKey = callback.data.Keys[0]\n            setInterlocutorEncryptPublicKey(interEncryptPublicKey)\n            let mySignPrivateKey = JSON.parse(localStorage.getItem(\"signKeysPair\"))[JSON.parse(localStorage.getItem(\"signKeysPair\")).length-1]\n            const keyId = socket.makeId()\n            crypto.setPublicEncryptKeyToSend(helpers.base64ToBuffer(interEncryptPublicKey.Data))\n            crypto.setPrivateSignKeyToSend(helpers.base64ToBuffer(mySignPrivateKey.private))\n            crypto.getSymmetricKey(1, keyId, 99999, ).then(symmetricKey => {\n              // console.log(symmetricKey)\n              // этот незашифрованный симметричный ключ добавляем в стэйт что бы расшифровывать на нем сообщения\n              let symmKey = {\n                key: helpers.bufferToBase64(symmetricKey),\n                id: keyId\n              }\n              props.setSymmetricKeyForDecrypt(symmKey)\n              crypto.encryptKeyMsg(1, 99999, symmetricKey).then(encryptedSymmetricKey => {\n                // console.log(encryptedSymmetricKey)\n                // здесь зашифрованный симметричный ключ добавляем в стэйт\n                // Этот ключ отправляется собеседнику при начале защищенного диалога, и из него бередтся идентификатор при отправке сообщений\n                let symmKeyEncrypted = {\n                  key: helpers.bufferToBase64(symmetricKey),\n                  id: keyId\n                }\n                props.setSymmetricKey(symmKeyEncrypted)\n              }).catch(err => {\n                console.log(err)\n              })\n            }).catch(err => console.log(err))\n          } else {\n            console.log(\"У пользовтеля истекли ключи\")\n          }\n        } else {\n          console.log(\"У пользователя нет действующих публичных ключей\")\n        }\n      }\n    })\n  }, [props.callbacks])\n\n  useEffect(() => {\n    if (props.user && props.dialog) {\n      const requestId = socket.makeId()\n      const keysPairs = JSON.parse(localStorage.getItem('keysPair'))\n      const signKeysPairs = JSON.parse(localStorage.getItem('signKeysPair'))\n      props.setCallbackId(requestId)\n      \n      const addNewKeys = {\n        Keys: [\n          {\n            KeyId: keysPairs[keysPairs.length - 1].id,\n            Data: keysPairs[keysPairs.length - 1].public, \n            Lifetime: 99999,\n            GenerationTime: parseInt(new Date().getTime()/1000),\n            Version: 1,\n            // type 0 - подпись, 1 - шифрование\n            Type: 1,\n            UserId: props.user.Id,\n            ChatId: null\n          },\n          {\n            KeyId: signKeysPairs[keysPairs.length - 1].id,\n            Data: signKeysPairs[keysPairs.length - 1].public, \n            Lifetime: 99999,\n            GenerationTime: parseInt(new Date().getTime()/1000),\n            Version: 1,\n            // type 0 - подпись, 1 - шифрование\n            Type: 0,\n            UserId: props.user.Id,\n            ChatId: null\n          }\n        ],\n        RequestType: 100,\n        RequestId: requestId,\n        Type: 0\n      }\n\n      socket.send(addNewKeys)\n    }\n  }, [props.user, props.dialog])\n\n  useEffect(() => {\n    if(props.dialog){\n      setDialog(props.dialog)\n\n      // отмечаем сообщения прочитанными\n      if (props.appFocus) {\n        if (props.dialog.LastMessageId) {\n          const data = {\n            MessagesId: [props.dialog.LastMessageId],\n            ConversationType: props.dialog.ConversationType,\n            ConversationId: props.dialog.ConversationId,\n            RequestId: socket.makeId(),\n            RequestType: 35,\n            Type: 0\n          }\n  \n          socket.send(data)\n        }\n      }\n\n      // подгрузка сообщений по скроллу\n      mesViewport.current.onscroll = () => {\n        if (mesViewport.current.scrollTop === 0) {\n          setHeight1(mesViewport.current.scrollHeight)\n          setMessagesLoading(true)\n\n          const messagesRequest = {\n            ConversationType: props.dialog.ConversationType,\n            ConversationId: props.dialog.ConversationId,\n            NavigationMessageId: messages[0].GlobalId,\n            MessagesId: null,\n            RequestType: 25,\n            RequestId: socket.makeId(),\n            Direction: true,\n            Type: 0\n          }\n\n          socket.send(messagesRequest)\n        }\n      }\n    }\n    // setHeight2(mesViewport.current.scrollHeight)\n  }, [messages, props.dialog])\n\n  useEffect(() => {\n    // console.log(height2)\n  }, [height1, height2])\n\n  useEffect(() => {\n    if (dialog) {\n      const mess = props.messages.filter(message => message.ConversationId === parseInt(dialog.ConversationId || dialog.ChannelId) && message.ConversationType === dialog.ConversationType)\n      setMessages(mess)\n\n      setHeight2(mesViewport.current.scrollHeight)\n      setTimeout(() => {\n        if (mesViewport.current && !messagesLoading) {\n          mesViewport.current.scrollTop = 450000\n        } else {\n          mesViewport.current.scrollBottom = height1 - height2\n        }\n      }, 10)\n\n      getUsers(mess)\n    }\n    setHeight2(mesViewport.current.scrollHeight)\n  }, [dialog, props.messages])\n\n  useEffect(() => {\n    if (props.isCrypto) {\n      // получение публичных ключей шифрования собеседника\n      const requestId = socket.makeId()\n      props.setCallbackId(requestId)\n      let callbackIds = callbackFunctions\n      callbackIds.push(requestId)\n      setCallbackFunctions(callbackIds)\n\n      if (props.user && props.dialog) {\n        const getUserKeys = {\n          UserId: props.dialog.SecondUid,\n          Direction: true,\n          KeysId: null,\n          RequestType: 105,\n          NavigationTime: parseInt(new Date().getTime()/1000),\n          RequestId: requestId,\n          Type: 0\n        }\n        socket.send(getUserKeys)\n      }\n    }\n  }, [props.isCrypto])\n\n  useEffect(() => {\n    // отправляем симметричный ключ собеседнику\n    if (props.symmetricKey) {\n      console.log('Отправляем симметричный ключ')\n      const keyExchangeMessage = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: null,\n            Attachments: [\n              {\n                Type: 6,\n                Hash: null,\n                MessageId: 0,\n                Payload: {\n                  KeyId: interlocutorEncryptPublicKey.KeyId,\n                  SignKeyId: JSON.parse(localStorage.getItem(\"signKeysPair\"))[JSON.parse(localStorage.getItem(\"signKeysPair\")).length-1].id,\n                  EncryptedData: props.symmetricKey.key\n                },\n                NodesId: null\n              }\n            ],\n            GlobalId: null\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n  \n      socket.send(keyExchangeMessage)\n    }\n  }, [props.symmetricKey])\n\n  const joinToChannel = () => {\n    const data = {\n      ChannelsId: [dialog.ChannelId],\n      UsersId: [props.user.Id],\n      RequestType: 48,\n      RequestId: socket.makeId(),\n      Type: 0\n    }\n\n    socket.send(data)\n  }\n\n  const fileOver = e => {\n    e.preventDefault()\n    mesViewport.current.classList.add('file-over')\n  }\n\n  const fileLeave = e => {\n    e.preventDefault()\n    mesViewport.current.classList.remove('file-over')\n  }\n\n  const fileDrop = (e) => {\n    e.preventDefault()\n    mesViewport.current.classList.remove('file-over')\n\n    if (props.isCrypto) {\n      // зашифрованное сообщение с файлом\n      const encoder = new TextEncoder()\n      const masterPassword = encoder.encode('qwerty')\n      let masterPasswordId = BigInt(1)\n      const crypto = new Crypto(masterPassword, masterPasswordId)\n\n      crypto.setSymmetricKey(helpers.base64ToBuffer(props.symmetricKey.key))\n      // crypto.encryptMsg(1, 4, 99999, encoder.encode(e.dataTransfer.files[0])).then(data => {\n        // if (data.length > 0) {\n          const fileAccessToken = localStorage.getItem('FileAccessToken')\n          axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n          const formData = new FormData()\n          // formData.append('file', new Blob(data))\n          formData.append('file', e.dataTransfer.files[0])\n\n          axios.post(`https://${props.node}:5000/api/Files`, formData).then(upladedFile => {\n            console.log(upladedFile)\n            crypto.encryptMsg(1, 4, 99999, encoder.encode(JSON.stringify(upladedFile.data.File))).then(encryptImgMsg => {\n              const data = {\n                Messages: [\n                  {\n                    Id: 0,\n                    SendingTime: \"\",\n                    SenderId: props.user.Id,\n                    ReceiverId: dialog.SecondUid,\n                    ConversationId: dialog.ConversationId,\n                    ConversationType: dialog.ConversationType,\n                    Read: false,\n                    NodesId: null,\n                    ReplyTo: null,\n                    Text: null,\n                    Attachments: [\n                      {\n                        Type: 4,\n                        Hash: null,\n                        MessageId: 0,\n                        Payload: {\n                          KeyId: props.symmetricKey.id,\n                          SignKeyId: JSON.parse(localStorage.getItem(\"signKeysPair\"))[JSON.parse(localStorage.getItem(\"signKeysPair\")).length-1].id,\n                          SaveFlag: 1,\n                          Lifetime: 99999,\n                          EncryptedData: helpers.bufferToBase64(encryptImgMsg)\n                        },\n                        NodesId: null\n                      }\n                    ],\n                    GlobalId: null\n                  }\n                ],\n                RequestType: 39,\n                RequestId: socket.makeId(),\n                Type: 0\n              }\n              \n              // console.log(data)\n              socket.send(data)\n            }).catch(err => {\n              console.log(err)\n            })\n          }).catch(err => {\n            console.log(err)\n          })\n        // }\n      // }).catch(err => {\n      //   console.log(err)\n      // })\n    } else {\n      // обычное сообщение с файлом\n      const isJpgOrPng = e.dataTransfer.files[0].type === \"image/jpeg\" || e.dataTransfer.files[0].type === \"image/png\"\n      let attachmentType = null\n      if (isJpgOrPng) {\n        attachmentType = 2\n      } else {\n        attachmentType = 1\n      }\n\n      const fileAccessToken = localStorage.getItem('FileAccessToken')\n      axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n      const formData = new FormData()\n      formData.append('file', e.dataTransfer.files[0])\n\n      axios.post(`https://${props.node}:5000/api/Files`, formData)\n      .then(\n          (res) => {\n            if (res.status === 200) {\n              // setImgLoading(false)\n              const data = {\n                Messages: [\n                  {\n                    Id: 0,\n                    SendingTime: \"\",\n                    SenderId: props.user.Id,\n                    ReceiverId: dialog.SecondUid,\n                    ConversationId: dialog.ConversationId,\n                    ConversationType: dialog.ConversationType,\n                    Read: false,\n                    NodesId: null,\n                    ReplyTo: null,\n                    Text: \"\",\n                    Attachments: [\n                      {\n                        Type: attachmentType,\n                        Hash: null,\n                        MessageId: 0,\n                        Payload: res.data.File.FileId,\n                        NodesId: null\n                      }\n                    ],\n                    GlobalId: null\n                  }\n                ],\n                RequestType: 39,\n                RequestId: socket.makeId(),\n                Type: 0\n              }\n        \n              socket.send(data)\n            }\n          }\n      )\n      .catch(\n          (err) => {\n            console.log(err)\n          }\n      )\n    }\n  }\n\n  return (\n    <div className=\"dialog\">\n      <div \n        className=\"dialog__messages-viewport\"\n        ref={mesViewport}\n        onDragOver={(e) => fileOver(e)}\n        onDragLeave={(e) => fileLeave(e)}\n        onDrop={(e) => fileDrop(e)}\n      >\n        <div className=\"dialog__messages\">\n          {dialog\n            ? messages.map(message => {\n                return <Message key={socket.makeId()} message={message} />\n              })\n            : null}\n        </div>\n      </div>\n      {props.forwardMessage ? (\n        <div className=\"reply-message\">\n          Ответ на:\n          {` ${props.forwardMessage.Text}`}\n        </div>\n      ) : null}\n      {\n        props.dialog ? \n          props.dialog.type === \"channel\" && props.dialog.fake ? \n            <Button type=\"primary\" size='large' onClick={joinToChannel}>Вступить</Button> \n          : props.dialog.ConversationType !== 3 ?\n            <NewMessageField {...props} dialog={dialog} />\n          : null\n        : null\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state)\n  return {\n    messages: state.messages,\n    forwardMessage: state.forwardMessage,\n    users: state.users,\n    user: state.users.find(user => user.currentUser === true),\n    node: state.node.activeNode.Domains[0],\n    appFocus: state.ui.appFocus,\n    requestsId: state.ui.requestsId,\n    symmetricKey: state.symmetricKey,\n    isCrypto: state.ui.isCrypto,\n    callbacks: state.callbacks\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    setCallbackId: id => dispatch(setCallbackId(id)),\n    setSymmetricKey: key => dispatch(setSymmetricKey(key)),\n    setSymmetricKeyForDecrypt: key => dispatch(setSymmetricKeyForDecrypt(key)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dialog)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport socket from \"../transport/Connect\"\nimport HeadDialog from \"./HeadDialog\"\nimport Dialog from \"./Dialog\"\nimport selectors from \"../selectors\"\nimport { openDialog } from \"../actions/dialogs\"\n\nfunction DialogContainer(props) {\n  // const [messages, setMessages] = useState([]);\n  const [dialog, setDialog] = useState(null)\n\n  useEffect(() => {\n    props.dialogs.forEach(dialog => {\n      if (dialog.active) {\n        setDialog(dialog)\n      }\n    })\n  }, [props.dialogs])\n\n  useEffect(() => {\n    // if (props.messages) {\n    //    props.messages.map(message => {\n    //       if (message.ConversationId === dialogId) {\n    //          // console.log(messages);\n    //          let mess = messages;\n    //          mess.push(message);\n    //          // console.log(mess);\n    //          setMessages(messages.push(message));\n    //       }\n    //    });\n    // }\n  }, [props.messages])\n\n  useEffect(() => {\n    if (dialog) {\n      // console.log(dialog)\n      // console.log(dialog.messagesRecieved)\n\n      // если для этого диалога сообщения еще не запрашивались, то запрашиваем\n      if (!dialog.messagesRecieved) {\n        // запрос на получение сообщений\n        const data = {\n          ConversationType: dialog.type === \"channel\" ? 3 : dialog.ConversationType,\n          ConversationId: dialog.ConversationId ? dialog.ConversationId : dialog.ChannelId,\n          NavigationMessageTime: null,\n          MessageId: null,\n          RequestType: 25,\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n\n        socket.send(data)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dialog])\n\n  return (\n    <div className=\"dialog-container\" style={selectors.getActiveDialog(props.dialogs) ? {zIndex: 2} : null}>\n      <HeadDialog {...props} />\n      {selectors.getActiveDialog(props.dialogs) ? <Dialog dialog={dialog} {...props} /> : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    messages: state.messages\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogContainer)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { NavLink } from \"react-router-dom\"\nimport { Modal } from \"antd\"\nimport { openProfile } from \"../actions/ui\"\nimport { openDialog } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\nimport selectors from \"../selectors\"\n\nfunction ProfileModal(props) {\n  const [visible, setVisible] = useState(false)\n  const [profile, setProfile] = useState(null)\n  const [prevProfile, setPrevProfile] = useState(null)\n\n  useEffect(() => {\n    if(props.profile) {\n      if(props.profile.ConversationType === 1){\n        const user = selectors.getUserById(props.profile.SecondUid, props.users)\n        if (user) {\n          setProfile(user)\n          setVisible(true)\n        }\n      } else if (props.profile.NameFirst) {\n        setProfile(props.profile)\n        setVisible(true)\n      } else if (props.profile.Users) {\n        setProfile(props.profile)\n        setVisible(true)\n      } else if (props.profile.ConversationType === 2){\n        const getChatInfo = {\n          RequestType: 45,\n          ChatsId: [props.profile.ConversationId],\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n    \n        socket.send(getChatInfo)\n      }\n    }\n  }, [props.profile])\n\n  useEffect(() => {\n    if (props.chats.length) {\n      setProfile(props.chats[0])\n      setVisible(true)\n\n      // запрашиваем недостающих юзеров для отображения в профиле\n      const undefinedUsers = []\n      props.chats[0].Users.map(user => {\n        const foundUser = selectors.getUserById(user.UserId, props.users)\n        if(!foundUser){\n          undefinedUsers.push(user.UserId)\n        }\n      })\n      if(undefinedUsers.length){\n        const requestUsers = {\n          UsersId: [...undefinedUsers],\n          RequestType: 28,\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n\n        socket.send(requestUsers)\n      }\n    }\n  }, [props.chats])\n\n  const openProfile = data => {\n    setPrevProfile(profile)\n    props.openProfile(data)\n  }\n\n  const showUsers = () => {\n    return props.chats[0].Users.map(user => {\n      const foundUser = selectors.getUserById(user.UserId, props.users)\n      if(foundUser){\n        let name = null\n        if (foundUser.NameFirst) {\n          name = foundUser.NameFirst\n        }\n        if (foundUser.NameSecond) {\n          name = name + ' ' + foundUser.NameSecond\n        }\n        return (\n          <div key={foundUser.Id} className='profile__info_user' onClick={() => {openProfile(foundUser)}}>\n            {\n              foundUser.Photo ? \n                <div\n                  style={{\n                    width: \"50px\",\n                    height: \"50px\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center center\",\n                    backgroundImage: `url(https://${props.node}:5000/api/Files/${foundUser.Photo})`,\n                    backgroundRepeat: \"no-repeat\",\n                    borderRadius: 100,\n                    margin: '0 auto',\n                    marginTop: \"10px\"\n                  }}\n                ></div>\n              : \n              <div className='profile__info_ava'>{selectors.getUserInitials(foundUser)}</div> \n            }\n            {name ? name : 'Имя скрыто'}\n          </div>\n        )\n      }\n    })\n  }\n\n  const handleCancelProfile = () => {\n    setVisible(false)\n    props.openProfile(null)\n  }\n\n  const handleOpenDialog = () => {\n    let payload = {}\n    payload.data = props.profile\n    if (props.profile.type === \"dialog\") {\n      payload.type = \"dialog\"\n    } else {\n      payload.type = \"user\"\n    }\n    props.openDialog(payload)\n    handleCancelProfile()\n  }\n\n  const handleBackProfile = () => {\n    props.openProfile(prevProfile)\n    setPrevProfile(null)\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={handleCancelProfile}\n      footer={null}\n      maskClosable\n    >\n      {\n        profile ? \n          <div className='profile'>\n            {\n              prevProfile ? <div onClick={handleBackProfile}>Назад</div> : null\n            }\n            {\n              profile.Photo ? \n                <div\n                  className='profile__ava'\n                  style={{\n                    width: \"100px\",\n                    height: \"100px\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center center\",\n                    backgroundImage: `url(https://${props.node}:5000/api/Files/${profile.Photo})`,\n                    backgroundRepeat: \"no-repeat\",\n                    borderRadius: 100,\n                    margin: '0 auto'\n                  }}\n                ></div>\n              : null \n            }\n            {\n              profile.Name ?\n                <div className='profile__name'>{profile.Name}</div>\n              :\n                <div className='profile__name'>\n                  {profile.NameFirst ? profile.NameFirst  : null}\n                  {' '}\n                  {profile.NameSecond ? profile.NameSecond : null}\n                </div>\n            }\n            {\n              profile.Phones ? \n                profile.Phones.length > 0 ?\n                  <div className='profile__info'>\n                    <div className='profile__info_name'>Телефон</div>\n                    <div className='profile__info_value'>{profile.Phones[0].FullNumber}</div>\n                  </div>\n                : null\n              : null\n            }\n            {\n              profile.Emails ? \n                <div className='profile__info'>\n                  <div className='profile__info_name'>Email</div>\n                  <div className='profile__info_value'><a href={`mailto:${profile.Emails[0]}`}>{profile.Emails[0]}</a></div>\n                </div>\n              : null\n            }\n            {\n              profile.About ? \n                <div className='profile__info'>\n                  <div className='profile__info_name'>О себе</div>\n                  <div className='profile__info_value'>{profile.About}</div>\n                </div>\n              : null\n            }\n            {\n              profile.Users ? \n                <div className='profile__info'>\n                  <div className='profile__info_name'>Участники</div>\n                  <div className='profile__info_users'>{showUsers()}</div>\n                </div>\n              : null\n            }\n            {\n              props.profile ? \n                <NavLink\n                  to={\"/\"}\n                  onClick={handleOpenDialog}\n                >\n                  <div className='profile__open_chat'>Открыть чат</div>\n                </NavLink>\n              : null\n            }\n          </div>\n        : null\n      }\n      \n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.ui.profile,\n    users: state.users,\n    chats: state.chats,\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openProfile: user => dispatch(openProfile(user)),\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileModal)\n","/* eslint-disable */\nimport React, {useState} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Form, Input, Switch, Divider, Upload, Icon, message, Button } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport socket from \"../transport/Connect\"\nimport Avatar from \"../components/Avatar\"\nimport axios from 'axios'\n\nfunction CreateChatModal(props) {\n  const [chatName, setChatName] = useState(null)\n  const [nameError, setNameError] = useState(false)\n  const [chatPrivate, setChatPrivate] = useState(false)\n  const [chatChannel, setChatChannel] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(null)\n  const [usersIDs, setUsersIds] = useState([])\n  const [showUsers, setShowUsers] = useState(false)\n\n  const handleSetChatName = value => {\n    setChatName(value)\n    setNameError(false)\n    if (value.length < 1) {\n      setNameError(true)\n    }\n  }\n\n  const handleCreateChat = () => {\n    if (!chatName) {\n      setNameError(true)\n    } else {\n      const users = usersIDs.map(userId => {\n        return {userId}\n      })\n      const newChat = {\n        Chats: [\n          {\n            Id: 0,\n            Name: chatName,\n            Tag: 0,\n            Photo: imageUrl,\n            About: null,\n            NodesId: null,\n            Visible: null,\n            Public: null,\n            Security: null,\n            Type: 1,\n            Users: users\n          }\n        ],\n        RequestId: socket.makeId(),\n        RequestType: 36,\n        Type: 0\n       }\n      \n      socket.send(newChat)\n\n      props.toggleModal(\"createChatModal\")\n    }\n  }\n\n  const handleUploadImage = data => {\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', data.file)\n  \n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            setLoading(false)\n            setImageUrl(res.data.File.FileId)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          console.log(err)\n        }\n    )\n  }\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n      message.error('Поддерживается только загрузка JPG/PNG файлов!')\n    }\n    return isJpgOrPng\n  }\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true)\n      return\n    }\n  }\n\n  const addContactToChat = userId => {\n    let users = [...usersIDs]\n    if (usersIDs.includes(userId)) {\n      let foudnUserIndex = users.indexOf(userId)\n      users.splice(foudnUserIndex, 1)\n      setUsersIds(users)\n    } else {\n      users.push(userId)\n      setUsersIds(users)\n    }\n  }\n\n  const showContacts = () => {\n    return props.contacts.map(user => {\n      if(user){\n        let name = null\n        if (user.ContactUser.NameFirst) {\n          name = user.ContactUser.NameFirst\n        }\n        if (user.ContactUser.NameSecond) {\n          name = name + ' ' + user.ContactUser.NameSecond\n        }\n        return (\n          <div key={user.ContactId} className={usersIDs.includes(user.ContactUserId) ? 'contacts contacts-active' : 'contacts'} onClick={() => {addContactToChat(user.ContactUserId)}}>\n            <Avatar user={user.ContactUser} />\n            {name ? name : 'Имя скрыто'}\n          </div>\n        )\n      }\n    })\n  }\n\n  return (\n    <Modal\n      visible={props.createChatModal}\n      // visible={true}\n      onCancel={() => props.toggleModal(\"createChatModal\")}\n      title=\"Создание группового чата\"\n      className=\"create-chat-modal\"\n      footer={null}\n      maskClosable\n    >\n      {\n        !showUsers ?\n          <>\n            <Upload\n              listType=\"picture-card\"\n              className=\"avatar-uploader\"\n              showUploadList={false}\n              customRequest={file => handleUploadImage(file)}\n              beforeUpload={beforeUpload}\n              onChange={handleChange}\n            >\n              {\n                loading ? \n                <Icon type=\"loading\" className=\"loading-icon\" />\n              : imageUrl ?\n                  <img src={`https://${props.node}:5000/api/Files/${imageUrl}`} alt=\"avatar\" style={{ width: '100%' }} />\n                :\n                  <>\n                    <p className=\"ant-upload-drag-icon\">\n                      <Icon type=\"inbox\" style={{fontSize: \"40px\", color: \"#1890ff\", marginTop: \"15px\"}} />\n                    </p>\n                    <p className=\"ant-upload-text\">Загрузить <br/> аватар</p>\n                  </>\n              }\n            </Upload>\n            <Divider />\n            <Form.Item\n              validateStatus={nameError ? \"error\" : ''}\n              help={nameError ? \"Это поле обязательно для заполнения\" : false}\n            >\n              <Input \n                placeholder=\"Название чата\"\n                onChange={(e) => handleSetChatName(e.target.value)}\n              />\n            </Form.Item>\n            <Divider />\n            <div className='switch-label'>\n              <div>Приватный чат</div>\n              <Switch checked={chatPrivate} onChange={(value) => setChatPrivate(value)} />\n            </div>\n            <Divider />\n            <div className='switch-label'>\n              <div>Создать канал</div>\n              <Switch checked={chatChannel} onChange={(value) => setChatChannel(value)} />\n            </div>\n            <Divider />\n            <Button type=\"normal\" block icon=\"usergroup-add\" onClick={() => setShowUsers(!showUsers)}>Добавить пользователей</Button>    \n          </>\n        :\n          <>\n            <div className=\"modal_back\" onClick={() => setShowUsers(false)}><Icon type=\"arrow-left\" /></div>\n            {\n              showUsers ?\n                <div className=\"wrap_contacts\">\n                  {showContacts()}\n                </div>\n              : null\n            }  \n          </>\n      }\n      <Divider />\n      <Button type=\"primary\" block onClick={() => handleCreateChat()}>Создать</Button>\n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createChatModal: state.ui.modals.createChatModal,\n    node: state.node.activeNode.Domains[0],\n    contacts: state.contacts.users\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateChatModal)\n","import Connect from \"./Connect\"\n\n/* eslint-disable */\nclass Request {\n  constructor() {}\n\n  // запрос диалогов\n  getDialogs() {\n    const getDialogs = {\n      NavigationMessageTime: null,\n      RequestId: Connect.makeId(),\n      RequestType: 12,\n      Type: 0\n    }\n\n    Connect.send(getDialogs)\n  }\n\n  // запрос списка контактов\n  getUserContacts() {\n    const getUserContacts = {\n      RequestId: Connect.makeId(),\n      RequestType: 64,\n      Type: 0\n    }\n\n    Connect.send(getUserContacts)\n  }\n\n  // запрос юзеров\n  getUsers(usersIds) {\n    const getUsers = {\n      RequestId: Connect.makeId(),\n      RequestType: 28,\n      Type: 0,\n      UsersId: usersIds\n    }\n\n    Connect.send(getUsers)\n  }\n\n  // запрос юзеров\n  getUsers(usersIds) {\n    const getUsers = {\n      RequestId: Connect.makeId(),\n      RequestType: 28,\n      Type: 0,\n      UsersId: usersIds\n    }\n\n    Connect.send(getUsers)\n  }\n\n  // запрос группы контактов\n  getUserGroups() {\n    const data = {\n      RequestId: Connect.makeId(),\n      RequestType: 61,\n      Type: 0,\n    }\n\n    Connect.send(data)\n  }\n\n  // запрос конактов из группы\n  getGroupContacts(groupId) {\n    const data = {\n      RequestId: Connect.makeId(),\n      RequestType: 60,\n      Type: 0,\n      GroupId: groupId\n    }\n\n    Connect.send(data)\n  }\n\n  // обновить информацию о пользователе\n  editUser(data) {\n    const requestdData = {\n      User: {\n        NameFirst: data.NameFirst,\n        NameSecond: data.NameSecond,\n        About: data.About,\n        Photo: data.Photo,\n        Country: null,\n        Language: null,\n        Visible: null,\n        Privacy: data.Privacy,\n        Security: null,\n        Phones: null,\n        Emails: null\n      },\n      RequestId: Connect.makeId(),\n      RequestType: 10,\n      Type: 0\n    }\n\n    Connect.send(requestdData)\n  }\n\n  // создать чат\n  createChat(data) {\n    const requestdData = {\n      Chats: [\n        {\n          Id: 0,\n          Name: \"NEW CHAT\",\n          Tag: 0,\n          Photo: null,\n          About: \"about chat\",\n          NodesId: null,\n          Visible: null,\n          Public: null,\n          Security: null,\n          Type: 1,\n          Users: [\n            {\n              ChatId: 0,\n              UserId: 1,\n              Deleted: false,\n              Banned: false,\n              UserRole: 0,\n              UserInfo: null\n            },\n            {\n              ChatId: 0,\n              UserId: 2,\n              Deleted: false,\n              Banned: false,\n              UserRole: 0,\n              UserInfo: null\n            }\n          ]\n        }\n      ],\n      RequestId: 3387209483927527400,\n      RequestType: 36,\n      Type: 0\n    }\n\n    Connect.send(requestdData)\n  }\n}\n\nconst request = new Request()\n\nexport default request\n","import React, {useState, useEffect} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Tabs } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport Request from \"../transport/Request\"\nimport Avatar from \"./Avatar\"\nimport { openDialog } from \"../actions/dialogs\"\n\nfunction ContactsModal(props) {\n  // const [contacts, setContacts] = useState([])\n\n  const { TabPane } = Tabs\n\n  useEffect(() => {\n    Request.getUserContacts()\n    Request.getUserGroups()\n  }, [])\n\n  // useEffect(() => {\n  //   const contactsTmp = []\n  //   props.users.forEach(user => {\n  //     if (props.contactsIDs.find(id => user.Id === id)) {\n  //       contactsTmp.push(user)\n  //     }\n  //   })\n  //   setContacts(contactsTmp)\n  // }, [props.users, props.contactsIDs])\n\n  const handleOpenChat = user => {\n    let payload = {}\n    payload.data = user\n    payload.type = \"user\"\n    props.openDialog(payload)\n    props.toggleModal(\"close\")\n  }\n\n  const changeGroup = groupId => {\n    if (groupId === \"all\") {\n      Request.getUserContacts()\n    } else {\n      Request.getGroupContacts(groupId)\n    }\n  }\n\n  const showContacts = () => {\n    return props.contacts.map(contact => {\n      if (contact.ContactUser) {\n        return (\n          <div className=\"contact\" key={contact.ContactId} onClick={() => handleOpenChat(contact.ContactUser)}>\n            <Avatar user={contact.ContactUser} />\n            <div className=\"name\">\n              {`${contact.ContactUser.NameFirst} ${contact.ContactUser.NameSecond}`}\n            </div>\n          </div>\n        )\n      }\n    })\n  }\n\n  const showGroups = () => {\n    return props.groups.map(group => {\n      return (\n        <TabPane tab={group.Title} key={group.GroupId}>\n          {showContacts()}\n        </TabPane>\n      )\n    })\n  }\n\n  return (\n    <Modal\n      visible={props.contactsModal}\n      // visible={true}\n      onCancel={() => props.toggleModal(\"contactsModal\")}\n      title=\"Контакты\"\n      footer={null}\n      maskClosable\n      className=\"contacts\"\n    >\n      <Tabs defaultActiveKey=\"1\" onChange={changeGroup}>\n        <TabPane tab=\"Все\" key=\"all\">\n          {showContacts()}\n        </TabPane>\n        {showGroups()}\n      </Tabs>\n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contactsModal: state.ui.modals.contactsModal,\n    users: state.users,\n    contacts: state.contacts.users,\n    contactsIDs: state.contacts.usersIDs,\n    groups: state.contacts.groups\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name)),\n    openDialog: data => dispatch(openDialog(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsModal)\n","/* eslint-disable */\nimport React, {useState} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Button, Input, Divider, Form, Typography, Icon } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport { removeContactFromGroup, removeGroup } from \"../actions/contacts\"\nimport Avatar from \"../components/Avatar\"\nimport socket from \"../transport/Connect\"\n\nconst { Text } = Typography\n\nfunction ContactsGroupsModal(props) {\n  const [chatName, setChatName] = useState(null)\n  const [nameError, setNameError] = useState(false)\n  const [groupOpen, setGroupOpen] = useState(false)\n  const [creatingGroup, setCreatingGroup] = useState(false)\n  const [usersIDs, setUsersIds] = useState([])\n  const [showUsers, setShowUsers] = useState(false)\n\n  const handleSetChatName = value => {\n    setChatName(value)\n    setNameError(false)\n    if (value.length < 1) {\n      setNameError(true)\n    }\n  }\n\n  const removeContactGroup = (groupId) => {\n    const removeGroup = {\n      GroupsId: [groupId],\n      RequestId: socket.makeId(),\n      RequestType: 57,\n      Type: 0\n    }\n\n    socket.send(removeGroup)\n    props.removeGroup(groupId)\n  }\n\n  const showGroups = () => {\n    return props.groups.map(group => {\n      return (\n        <div className=\"contact\" key={group.GroupId}>\n          <div className=\"name\" onClick={() => openGroup(group.GroupId)}>{group.Title}</div>\n          <Button className=\"remove-user\" type=\"danger\" shape=\"circle\" icon=\"close\" onClick={() => removeContactGroup(group.GroupId)} />\n        </div>\n      )\n    })\n  }\n\n  const openGroup = groupId => {\n    const openedGroup = props.groups.find(group => group.GroupId === groupId)\n    if (openedGroup) {\n      setGroupOpen(openedGroup)\n    }\n  }\n\n  const handleSetCreatingGroup = () => {\n    if (!chatName) {\n      setNameError(true)\n    } else {\n      setCreatingGroup(\"step2\")\n    }\n  }\n\n  const updateGroup = () => {\n    const addUsersToGroup = {\n      UsersId: usersIDs,\n      GroupId: groupOpen.GroupId,\n      RequestId: socket.makeId(),\n      RequestType: 58,\n      Type: 0\n    }\n    \n    socket.send(addUsersToGroup)\n\n    props.toggleModal(\"contactsGroupsModal\")\n  }\n\n  const createGroup = () => {\n    const newGroup = {\n      Group: {\n        GroupId: groupOpen ? groupOpen.GroupId : null,\n        Title: chatName ? chatName : groupOpen.Title,\n        UsersId: usersIDs,\n      },\n      RequestId: socket.makeId(),\n      RequestType: 56,\n      Type: 0\n    }\n    \n    socket.send(newGroup)\n\n    props.toggleModal(\"contactsGroupsModal\")\n  }\n\n  const removeUserFromGroup = user => {\n    const removeUser = {\n      UsersId: [user.Id],\n      GroupId: groupOpen.GroupId,\n      RequestId: socket.makeId(),\n      RequestType: 59,\n      Type: 0\n    }\n    \n    socket.send(removeUser)\n\n    props.removeContactFromGroup({userId: user.Id, groupId: groupOpen.GroupId})\n  }\n\n  const showUsersInGroup = () => {\n    return props.contacts.users.map(user => {\n      if(user.GroupsId.includes(groupOpen.GroupId)){\n        let name = null\n        if (user.ContactUser.NameFirst) {\n          name = user.ContactUser.NameFirst\n        }\n        if (user.ContactUser.NameSecond) {\n          name = name + ' ' + user.ContactUser.NameSecond\n        }\n        return (\n          <div key={user.ContactId} className='contacts'>\n            <>\n            <Avatar user={user.ContactUser} />\n            {name ? name : 'Имя скрыто'}\n            </>\n            <Button className=\"remove-user\" type=\"danger\" shape=\"circle\" icon=\"user-delete\" onClick={() => removeUserFromGroup(user.ContactUser)} />\n          </div>\n        )\n      }\n    })\n  }\n\n  const addContactToChat = userId => {\n    let users = [...usersIDs]\n    if (usersIDs.includes(userId)) {\n      let foudnUserIndex = users.indexOf(userId)\n      users.splice(foudnUserIndex, 1)\n      setUsersIds(users)\n    } else {\n      users.push(userId)\n      setUsersIds(users)\n    }\n  }\n\n  const showContacts = () => {\n    let contacts = []\n    if (groupOpen) {\n      contacts = props.contacts.users.map(contact => {\n        if (!contact.GroupsId.includes(groupOpen.GroupId)) {\n          return contact\n        }\n      })\n    } else {\n      contacts = props.contacts.users\n    }\n    return contacts.map(user => {\n      if(user){\n        let name = null\n        if (user.ContactUser.NameFirst) {\n          name = user.ContactUser.NameFirst\n        }\n        if (user.ContactUser.NameSecond) {\n          name = name + ' ' + user.ContactUser.NameSecond\n        }\n        return (\n          <div key={user.ContactId} className={usersIDs.includes(user.ContactUserId) ? 'contacts contacts-active' : 'contacts'} onClick={() => {addContactToChat(user.ContactUserId)}}>\n            <Avatar user={user.ContactUser} />\n            {name ? name : 'Имя скрыто'}\n          </div>\n        )\n      }\n    })\n  }\n\n  const handleCloseModal = () => {\n    setChatName(null)\n    setNameError(false)\n    setGroupOpen(false)\n    setCreatingGroup(false)\n    setUsersIds([])\n    setShowUsers(false)\n    props.toggleModal(\"contactsGroupsModal\")\n  }\n\n  return (\n    <Modal\n      visible={props.contactsGroupsModal}\n      // visible={true}\n      onCancel={() => handleCloseModal()}\n      title=\"Группы контактов\"\n      footer={null}\n      maskClosable\n      className=\"contacts create-chat-modal\"\n    >\n      {\n        creatingGroup === \"step1\" ?\n          <div className=\"content\">\n            <div className=\"modal_back\" onClick={() => setCreatingGroup(false)}><Icon type=\"arrow-left\" /></div>\n            <Form.Item\n              validateStatus={nameError ? \"error\" : ''}\n              help={nameError ? \"Это поле обязательно для заполнения\" : false}\n            >\n              <Input\n                placeholder=\"Название группы\"\n                onChange={(e) => handleSetChatName(e.target.value)}\n              />\n            </Form.Item>\n            <Divider />\n            <Button type=\"primary\" block onClick={() => handleSetCreatingGroup()}>Далее</Button>\n          </div>\n        : creatingGroup === \"step2\" ?\n          <div className=\"content\">\n            <div className=\"modal_back\" onClick={() => setCreatingGroup(\"step1\")}><Icon type=\"arrow-left\" /></div>\n            <Text strong>Добавьте участников</Text>\n            <div className=\"wrap_contacts\">\n              {showContacts()}\n            </div>\n            <Divider />\n            <Button type=\"primary\" block onClick={() => createGroup()}>Создать группу</Button>\n          </div>\n        : groupOpen ?\n          <div className=\"content\">\n            {\n              showUsers ?\n                <>\n                  <div className=\"modal_back\" onClick={() => setShowUsers(false)}><Icon type=\"arrow-left\" /></div>\n                  <Text strong>Добавьте участников</Text>\n                  <div className=\"wrap_contacts\">\n                    {showContacts()}\n                  </div>\n                  <Divider />\n                </>\n              :\n                <>\n                  <div className=\"modal_back\" onClick={() => setGroupOpen(false)}><Icon type=\"arrow-left\" /></div>\n                  <Text strong>Название:</Text>\n                  <Input defaultValue={chatName ? chatName : groupOpen.Title} onChange={(e) => handleSetChatName(e.target.value)} />\n                  <Divider />\n                  <Text strong>Участники:</Text>\n                  <div className=\"wrap_contacts\">\n                    {showUsersInGroup()}\n                  </div>\n                  <Divider />\n                  <Button type=\"normal\" block icon=\"usergroup-add\" onClick={() => setShowUsers(!showUsers)}>Добавить пользователей</Button>\n                  <Divider />\n                </>\n            }\n            <Button type=\"primary\" block onClick={() => updateGroup()}>Сохранить</Button>\n          </div>\n        :\n          <>\n            {showGroups()}\n            <div className=\"content\">\n              <Button type=\"primary\" block onClick={() => setCreatingGroup(\"step1\")}>Добавить группу</Button>\n            </div>\n          </>\n      }\n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contactsGroupsModal: state.ui.modals.contactsGroupsModal,\n    users: state.users,\n    contacts: state.contacts,\n    contactsIDs: state.contacts.usersIDs,\n    groups: state.contacts.groups\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name)),\n    removeContactFromGroup: data => dispatch(removeContactFromGroup(data)),\n    removeGroup: data => dispatch(removeGroup(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsGroupsModal)","export function setContactUsersIDs(usersIDs) {\n  return {\n    type: \"SET_CONTACT_USERS_IDS\",\n    usersIDs\n  }\n}\n\nexport function setContacts(contacts) {\n  return {\n    type: \"SET_CONTACTS\",\n    contacts\n  }\n}\n\nexport function userGroupsReceived(groups) {\n  return {\n    type: \"USER_GROUPS_RECEIVED\",\n    groups\n  }\n}\n\nexport function removeContactFromGroup(payload) {\n  return {\n    type: \"REMOVE_CONTACT_FROM_GROUP\",\n    payload\n  }\n}\n\nexport function removeGroup(groupId) {\n  return {\n    type: \"REMOVE_GROUP\",\n    groupId\n  }\n}\n","/* eslint-disable */\nimport React, {useState, useEffect} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Button, Input, Divider, Upload, Icon, message, Switch } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport Request from \"../transport/Request\"\nimport Avatar from \"./Avatar\"\nimport axios from 'axios'\n\nfunction SettingsModal(props) {\n  const [loading, setLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(false)\n  const [name, setName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [about, setAbout] = useState('')\n  const [privacySettings, setPrivacySettings] = useState(false)\n  const [namePrivacy, setNamePrivacy] = useState(false)\n  const [photoPrivacy, setPhotoPrivacy] = useState(false)\n  const [onlinePrivacy, setOnlinePrivacy] = useState(false)\n  const [phonePrivacy, setPhonePrivacy] = useState(false)\n  const [emailPrivacy, setEmailPrivacy] = useState(false)\n\n  useEffect(() => {\n    if (props.user) {\n      setName(props.user.NameFirst)\n      setLastName(props.user.NameSecond)\n      setAbout(props.user.About)\n      setImageUrl(props.user.Photo)\n      setNamePrivacy(props.user.Visible[0][1])\n      setPhotoPrivacy(props.user.Visible[0][2])\n      setOnlinePrivacy(props.user.Visible[0][14])\n      setPhonePrivacy(props.user.Visible[0][15])\n      setEmailPrivacy(props.user.Visible[0][17])\n    }\n  }, [props.user])\n  \n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n      message.error('Поддерживается только загрузка JPG/PNG файлов!')\n    }\n    return isJpgOrPng\n  }\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true)\n      return\n    }\n  }\n\n  const uploadButton = (\n    <div>\n      <Icon type={loading ? 'loading' : 'plus'} />\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  )\n\n  const handleUploadImage = data => {\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', data.file)\n  \n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            setLoading(false)\n            setImageUrl(res.data.File.FileId)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          console.log(err)\n        }\n    )\n  }\n\n  const handleUpdateUser = () => {\n    let privacy = props.user.Visible[0]\n    privacy[1] = namePrivacy\n    privacy[2] = photoPrivacy\n    privacy[14] = onlinePrivacy\n    privacy[15] = phonePrivacy\n    privacy[17] = emailPrivacy\n\n    const userData = {\n      NameFirst: name,\n      NameSecond: lastName,\n      About: about,\n      Photo: imageUrl,\n      Privacy: privacy\n    }\n\n    Request.editUser(userData)\n  }\n\n  return (\n    <Modal\n      visible={props.settingsModal}\n      // visible={true}\n      onCancel={() => props.toggleModal(\"settingsModal\")}\n      title=\"Редактировать профиль\"\n      footer={null}\n      maskClosable\n      className=\"contacts\"\n    >\n      {\n        props.user ?\n          <div className=\"content settings\">\n            {!privacySettings ?\n              <>\n                <Upload\n                  listType=\"picture-card\"\n                  className=\"avatar-uploader\"\n                  showUploadList={false}\n                  customRequest={file => handleUploadImage(file)}\n                  beforeUpload={beforeUpload}\n                  onChange={handleChange}\n                >\n                  {\n                    loading ? \n                      <Icon type=\"loading\" className=\"loading-icon\" />\n                    : null\n                  }\n                  {\n                    imageUrl ?\n                      <img src={`https://${props.node}:5000/api/Files/${imageUrl}`} alt=\"avatar\" style={{ width: '100%' }} />\n                    : props.user.Photo ?\n                      <Avatar user={props.user} />\n                    : uploadButton\n                  }\n                </Upload>\n                <Divider />\n                <Input value={lastName} onChange={e => setLastName(e.target.value)} placeholder=\"Фамилия\" />\n                <Divider />\n                <Input value={name} onChange={e => setName(e.target.value)} placeholder=\"Имя\" />\n                <Divider />\n                <Input value={about} onChange={e => setAbout(e.target.value)} placeholder=\"О себе\" />\n                <Divider />\n                <Input addonBefore=\"+7\" defaultValue={props.user.Phones[0] ? props.user.Phones[0].SubscriberNumber : ''} placeholder=\"Телефон\" disabled />\n                <Divider />\n                <Input defaultValue={props.user.Emails[0]} placeholder=\"Email\" disabled />\n                <Divider />\n                <Button type=\"link\" onClick={() => {setPrivacySettings(true)}}>Настроки приватности</Button>\n              </>\n            :\n              <>\n                <div className=\"modal_back\" onClick={() => setPrivacySettings(false)}><Icon type=\"arrow-left\" /></div>\n                <div className='switch-label'>\n                  <div>Имя, тэг</div>\n                  <Switch checked={namePrivacy} onChange={(value) => setNamePrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Онлайн статус</div>\n                  <Switch checked={onlinePrivacy} onChange={(value) => setOnlinePrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Телефон</div>\n                  <Switch checked={phonePrivacy} onChange={(value) => setPhonePrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Email</div>\n                  <Switch checked={emailPrivacy} onChange={(value) => setEmailPrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Фото, о себе</div>\n                  <Switch checked={photoPrivacy} onChange={(value) => setPhotoPrivacy(value)} />\n                </div>\n              </>\n            }\n            <Divider />\n            <Button type=\"primary\" block onClick={() => handleUpdateUser()}>Сохранить</Button>\n          </div>\n        : null\n      }        \n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    settingsModal: state.ui.modals.settingsModal,\n    user: state.users.find(user => user.currentUser === true),\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsModal)","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport Sidebar from \"./Sidebar\"\nimport DialogContainer from \"./DialogContainer\"\nimport ProfileModal from \"./ProfileModal\"\nimport CreateChatModal from \"./CreateChatModal\"\nimport ContactsModal from \"./ContactsModal\"\nimport ContactsGroupsModal from \"./ContactsGroupsModal\"\nimport { toggleDrawer, toggleModal } from \"../actions/ui\"\nimport { Drawer } from 'antd';\nimport SettingsModal from \"./SettingsModal\"\nimport socket from \"../transport/Connect\"\n\nfunction MainContainer(props) {\n  const logout = () => {\n    const logout = {\n      Full: false,\n      AccessToken: localStorage.getItem(\"AccessToken\"),\n      RequestType: 34,\n      RequestId: socket.makeId(),\n      Type: 0\n    }\n\n    socket.send(logout)\n\n    localStorage.removeItem(\"AccessToken\")\n    localStorage.removeItem(\"FileAccessToken\")\n    localStorage.removeItem(\"RefreshToken\")\n    localStorage.removeItem(\"User\")\n\n    window.location.replace(\"/\")\n  }\n\n  return (\n    <Router>\n      <div className=\"page\">\n        <div className=\"page__content\">\n          <Drawer\n            visible={props.ui.showDrawer}\n            // visible={true}\n            placement='left'\n            closable={true}\n            onClose={() => props.toggleDrawer()}\n            width='366'\n          >\n            {\n              props.user ? (\n                <div className=\"drawer-user\">\n                  <div className=\"drawer-user__ava\">\n                    { props.user.Photo ? (\n                      <div\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          backgroundSize: \"cover\",\n                          backgroundPosition: \"center center\",\n                          backgroundImage: `url(https://${props.node}:5000/api/Files/${props.user.Photo})`,\n                          backgroundRepeat: \"no-repeat\"\n                        }}\n                      />\n                    ) : (\n                      <div className=\"drawer-user__photo-default avatar-default\">defaultAva</div>\n                    )}\n                  </div>\n                  <div className=\"drawer-user__name\">\n                    {props.user.NameFirst + ' ' + props.user.NameSecond}\n                  </div>\n                </div>\n              ) : null\n            }\n            <ul className=\"menu\">\n              <li onClick={() => props.toggleModal(\"createChatModal\")}>Создать групповой чат</li>\n              <li onClick={() => props.toggleModal(\"contactsModal\")}>Контакты</li>\n              <li onClick={() => props.toggleModal(\"contactsGroupsModal\")}>Группы контактов</li>\n              <li onClick={() => props.toggleModal(\"settingsModal\")}>Настройки</li>\n              <li onClick={logout}>Выход</li>\n            </ul>\n            <div className=\"app-version\">v0.1.9</div>\n          </Drawer>\n          <>\n            <Sidebar {...props} />\n            <DialogContainer />\n          </>\n          {/* {windowWidth > 675 ? (\n            <>\n              <Sidebar {...props} />\n              <DialogContainer />\n            </>\n          ) : (\n            !selectors.getActiveDialog(props.dialogs) ? <Sidebar {...props} /> : <DialogContainer />\n          )} */}\n        </div>\n      </div>\n      <ProfileModal />\n      <CreateChatModal />\n      <ContactsModal />\n      <ContactsGroupsModal />\n      <SettingsModal />\n    </Router>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    ui: state.ui,\n    user: state.users.find(user => user.currentUser === true),\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleDrawer: () => dispatch(toggleDrawer()),\n    toggleModal: name => dispatch(toggleModal(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer)\n","/* eslint-disable */\nimport {useEffect} from \"react\"\nimport { connect } from \"react-redux\"\nimport Connect from \"./Connect\"\nimport Request from \"./Request\"\nimport {\n  dialogsReceived,\n  chatsReceived,\n  messagesReceived,\n  openDialog,\n  readMessages,\n} from \"../actions/dialogs\"\nimport { toggleModal, toggleDrawer } from \"../actions/ui\"\nimport { setCallbackData } from \"../actions/callbacks\"\nimport { searchResultReceived } from \"../actions/search\"\nimport {\n  setContactUsersIDs,\n  userGroupsReceived,\n  setContacts\n} from \"../actions/contacts\"\nimport selectors from \"../selectors\"\nimport { userReceived, chatsUsersReceived } from \"../actions/user\"\nimport { setAuth } from \"../actions/auth\"\nimport helpers from \"../helpers\"\nimport Crypto from \"y_crypto\"\nimport { setSymmetricKey, setPublicKeys } from \"../actions/keys\"\n\nfunction Socket(props) {\n  useEffect(() => {\n    Connect.onMessage = data => {\n      // Ответ на запрос авторизации либо на запрос обновления токенов\n      if (data.ResponseType === 6) {\n        // запрашиваем информацию об авторизировашемся пользователе\n        const getSelf = {\n          RequestId: Connect.makeId(),\n          RequestType: 27,\n          Type: 0\n        }\n\n        Connect.send(getSelf)\n\n        localStorage.setItem(\"FileAccessToken\", data.FileAccessToken)\n        localStorage.setItem(\"AccessToken\", data.Token.AccessToken)\n        localStorage.setItem(\"RefreshToken\", data.Token.RefreshToken)\n\n        props.setAuth(\"AUTH_SUCCESS\")\n      }\n      // Ответ на запрос получения текущего пользователя\n      else if (data.ResponseType === 12) {\n        const user = selectors.getFormatedUser([data.User])\n        user[0].currentUser = true\n        props.userReceived(user)\n        props.toggleModal(\"close\")\n        props.toggleDrawer(\"close\")\n      }\n      // Ответ на запрос получения дилогов\n      else if (data.ResponseType === 15) {\n        props.dialogsReceived(selectors.getFormatedDialogs(data.Conversations))\n      }\n      // Ответ на запрос получения сообщений\n      else if (data.ResponseType === 9) {\n        props.messagesReceived(selectors.getFormatedMessages(data.Messages))\n        // Request.getDialogs()\n      }\n      // Новое сообщение\n      else if (data.Message) {\n        props.messagesReceived(selectors.getFormatedMessages([data.Message]))\n        Request.getDialogs()\n      }\n      // Прочтение исходящих сообщений\n      else if (data.Type === 2 && data.Code === 5) {\n        props.readMessages({conversationId: data.ConversationId, conversationType: data.ConversationType})\n      }\n      // Ответ на запрос юзеров\n      else if (data.ResponseType === 0) {\n        props.userReceived(selectors.getFormatedUser(data.Users))\n      }\n      // Ответ на запрос чатов\n      else if (data.ResponseType === 2) {\n        const chats = selectors.getFormatedChats(data.Chats)\n\n        // запрашиваем список пользователей для чатов\n        chats.forEach(chat => {\n          const getChatsUsers = {\n            ChatId: chat.Id,\n            NavigationUserId: null,\n            RequestId: Connect.makeId(),\n            RequestType: 17,\n            Type: 0\n          }\n\n          Connect.send(getChatsUsers)\n        })\n\n        props.chatsReceived(selectors.getFormatedChats(data.Chats))\n      }\n      // Ответ на запрос юзеров в чате\n      // У них структура отличается от обычных юзеров, здесь приходит информация относящаяся именно к этому чату\n      else if (data.ResponseType === 16) {\n        props.chatsUsersReceived(selectors.getFormatedChatsUsers(data.ChatUsers))\n      }\n      // ответ на запрос публичных ключей\n      else if (data.ResponseType === 18) {\n        props.setPublicKeys(data.Keys)\n        // const answer = {\n        //   data: data.Keys,\n        //   id: data.RequestId\n        // }\n        props.setCallbackData(data)\n      }\n      // Ответ на вступление в канал\n      else if (data.ResponseType === 21) {\n        Request.getDialogs()\n      }\n      // Ответ на событие поиска\n      else if (data.ResponseType === 23) {\n        const searchResult = {}\n        if (data.Users.length > 0) {\n          searchResult.users = data.Users\n        }\n        if (data.Chats.length > 0) {\n          searchResult.chats = data.Chats\n        }\n        if (data.Channels.length > 0) {\n          searchResult.channels = data.Channels\n        }\n        props.searchResultReceived(searchResult)\n      }\n      // Ответ на запрос списка контактов\n      else if (data.ResponseType === 27) {\n        let userIDs = data.Contacts.map(user => {\n          return user.ContactUserId\n        })\n\n        props.setContactUsersIDs(userIDs)\n        props.setContacts(data.Contacts)\n\n        if (userIDs.length > 0) {\n          Request.getUsers(userIDs)\n        }\n      }\n      // Ответ на запрос групп контактов\n      else if (data.ResponseType === 26) {\n        props.userGroupsReceived(data.Groups)\n      }\n      // Уведомление о прочтении сообщений\n      else if (data.Code === 5) {\n        props.messagesRead(data.ConversationId)\n      }\n    }\n  }, [])\n\n  return null\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dialogsReceived: dialogs => dispatch(dialogsReceived(dialogs)),\n    chatsReceived: chats => dispatch(chatsReceived(chats)),\n    chatsUsersReceived: chatsUsers => dispatch(chatsUsersReceived(chatsUsers)),\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    userReceived: user => dispatch(userReceived(user)),\n    messagesReceived: messages => dispatch(messagesReceived(messages)),\n    readMessages: data => dispatch(readMessages(data)),\n    setAuth: auth => dispatch(setAuth(auth)),\n    searchResultReceived: data => dispatch(searchResultReceived(data)),\n    setContactUsersIDs: usersIDs => dispatch(setContactUsersIDs(usersIDs)),\n    userGroupsReceived: groups => dispatch(userGroupsReceived(groups)),\n    setContacts: contacts => dispatch(setContacts(contacts)),\n    toggleModal: name => dispatch(toggleModal(name)),\n    toggleDrawer: name => dispatch(toggleDrawer(name)),\n    setSymmetricKey: key => dispatch(setSymmetricKey(key)),\n    setPublicKeys: publicKeys => dispatch(setPublicKeys(publicKeys)),\n    setCallbackData: data => dispatch(setCallbackData(data)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Socket)\n","/* eslint-disable */\nimport React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Spin } from \"antd\"\nimport {\n  dialogsReceived,\n  messagesReceived,\n  openDialog\n} from \"./actions/dialogs\"\nimport { userReceived } from \"./actions/user\"\nimport { setAppFocus } from \"./actions/ui\"\nimport Auth from \"./components/Auth\"\nimport Registration from \"./components/Registration\"\nimport Verify from \"./components/Verify\"\nimport MainContainer from \"./components/MainContainer\"\nimport socket from \"./transport/Connect\"\nimport Connect from \"./transport/Socket\"\nimport { setAuth } from \"./actions/auth\"\nimport { setPath } from \"./actions/path\"\nimport { setNodes, setActiveNode } from \"./actions/node\"\nimport selectors from \"./selectors\"\n\nconst licens = new WebSocket(\"wss://testlic-1.ymess.org:5005\")\n\n\nfunction App(props) {\n  useEffect(() => {\n    if (selectors.getActiveDialog(props.dialogs)) {\n      document.body.style.position = \"fixed\"\n    } else {\n      document.body.style.position = \"relative\"\n    }\n  }, [props.dialogs])\n\n  // Устанавливаем флаг для отмечания сообщения прочитанными если вкладка не активна\n  // window.onfocus = () => {\n  //   props.setAppFocus(true)\n  // }\n  // window.onblur = () => {\n  //   props.setAppFocus(false)\n  // }\n\n  window.addEventListener(\"load\",function() {\n    setTimeout(function(){\n      window.scrollTo(0, 1)\n    }, 0)\n  })\n\n  useEffect(() => {\n    if (props.auth === \"AUTH_SUCCESS\") {\n      // запрос диалогов\n      const getDialogs = {\n        NavigationMessageTime: null,\n        RequestId: socket.makeId(),\n        RequestType: 12,\n        Type: 0\n      }\n\n      socket.send(getDialogs)\n    }\n  }, [props.auth])\n\n  useEffect(() => {\n    licens.onopen = () => {\n      // console.log(\"Соединение с лицензиаром установлено\")\n      const getNodesObj = {\n        RequestId: socket.makeId(),\n        RequestType: 1,\n        Type: 6\n      }\n\n      licens.send(JSON.stringify(getNodesObj))\n    }\n\n    licens.onmessage = event => {\n      const response = socket.blobToJson(event.data)\n      if (response.ResponseType === 2) {\n        props.setNodes(response.Nodes)\n        // устанавливаем первую ноду по умолчанию если выбран режим \"автоматически\"\n        if (!localStorage.getItem(\"node\")) {\n          // localStorage.setItem(\"node\", JSON.stringify(response.Nodes[0]))\n          // props.setActiveNode(response.Nodes[0])\n        } else {\n          props.setActiveNode(JSON.parse(localStorage.getItem(\"node\")))\n        }\n      }\n    }\n\n    const node = JSON.parse(localStorage.getItem(\"node\"))\n    if (node) {\n      props.setActiveNode(node)\n    }\n\n    if (localStorage.getItem(\"AccessToken\")) {\n      let login\n      if (localStorage.getItem(\"User\")) {\n        login = {\n          Token: {\n            UserId: JSON.parse(localStorage.getItem(\"User\")).Id,\n            AccessToken: localStorage.getItem(\"AccessToken\"),\n            RefreshToken: localStorage.getItem(\"RefreshToken\")\n          },\n          LoginType: 0,\n          UidType: 1,\n          RequestId: socket.makeId(),\n          RequestType: 33,\n          Type: 0\n        }\n      } else if (localStorage.getItem(\"Phone\")) {\n        login = {\n          Uid: localStorage.getItem(\"Phone\"),\n          Token: {\n            AccessToken: localStorage.getItem(\"AccessToken\"),\n            RefreshToken: localStorage.getItem(\"RefreshToken\")\n          },\n          LoginType: 0,\n          UidType: 0,\n          RequestId: socket.makeId(),\n          RequestType: 33,\n          Type: 0\n        }\n      } else if (localStorage.getItem(\"Email\")) {\n        console.log(\"По почте\")\n      }\n\n      socket.start(node.Domains[0])\n      socket.wsOnConnect = () => {\n        socket.send(login)\n        // if(socket.send){\n        // }\n      }\n    } else {\n      props.setAuth(\"NO_AUTH\")\n    }\n  }, [])\n\n  return (\n    <>\n      <Connect />\n      {\n        props.auth === \"CHECK_AUTH\" ? \n          <div className=\"preloader\">\n            <Spin size=\"large\" />\n          </div>\n        : props.auth === \"AUTH_SUCCESS\" ? \n            <MainContainer/>\n        : props.path === \"by-phone\" || props.path === \"by-email\" ? \n          <Verify/>\n        : props.path === \"registration\" ? \n          <Registration/> \n        : <Auth/>\n      }\n\n\n      {/* <Router>\n        <Route\n          path=\"/\"\n          render={\n            // eslint-disable-next-line no-nested-ternary\n            props.auth === \"CHECK_AUTH\"\n              ? () => (\n                  <div className=\"preloader\">\n                    <Spin size=\"large\" />\n                  </div>\n                )\n              : props.auth === \"AUTH_SUCCESS\"\n              ? () => (\n                  <>\n                    <Route path=\"/\" component={MainContainer} />\n                  </>\n                )\n              : () => <Redirect to=\"/auth\" />\n          }\n        />\n        <Route path=\"/auth/by-phone\" component={Verify} />\n        <Route path=\"/auth/by-email\" component={Verify} />\n        <Route exact path=\"/auth\" component={Auth} />\n        <Route exact path=\"/registration\" component={Registration} />\n      </Router> */}\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    users: state.users,\n    user: state.users.find(user => user.currentUser === true),\n    auth: state.auth,\n    path: state.path.currentPath\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dialogsReceived: dialogs => dispatch(dialogsReceived(dialogs)),\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    userReceived: user => dispatch(userReceived(user)),\n    messagesReceived: messages => dispatch(messagesReceived(messages)),\n    setAuth: auth => dispatch(setAuth(auth)),\n    setNodes: nodes => dispatch(setNodes(nodes)),\n    setActiveNode: node => dispatch(setActiveNode(node)),\n    setPath: path => dispatch(setPath(path)),\n    setAppFocus: data => dispatch(setAppFocus(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './css/style.css';\nimport './assets/fonts/fonts.css'\nimport 'antd/dist/antd.css';\nimport './css/style.scss';\nimport {Provider} from 'react-redux';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}\n"],"sourceRoot":""}