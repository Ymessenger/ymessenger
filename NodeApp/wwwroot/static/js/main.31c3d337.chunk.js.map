{"version":3,"sources":["assets/logo.PNG","reducers/node.js","reducers/path.js","reducers/ui.js","reducers/contacts.js","reducers/index.js","reducers/dialogs.js","reducers/chats.js","reducers/messages.js","reducers/users.js","reducers/forwardMessage.js","reducers/auth.js","reducers/search.js","actions/dialogs.js","actions/user.js","actions/ui.js","transport/Connect.js","actions/node.js","actions/path.js","components/Auth.js","components/Registration.js","actions/auth.js","components/Verify.js","selectors/index.js","selectors/Message.js","selectors/Dialog.js","selectors/User.js","components/SidebarItem.js","components/HeadSidebar.js","components/Search.js","actions/search.js","components/Sidebar.js","components/HeadDialog.js","components/Avatar.js","assets/tick_icon.svg","assets/double_tick_icon.svg","components/Message.js","assets/paperclip_icon.svg","assets/send_button_icon.svg","components/NewMessageField.js","components/Dialog.js","components/DialogContainer.js","components/ProfileModal.js","components/CreateChatModal.js","transport/Request.js","components/ContactsModal.js","components/ContactsGroupsModal.js","actions/contacts.js","components/SettingsModal.js","components/MainContainer.js","transport/Socket.js","App.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["module","exports","__webpack_require__","p","defaulState","activeNode","allNodes","defaultState","prevPath","currentPath","profile","search","showDrawer","appFocus","modals","createChatModal","contactsModal","contactsGroupsModal","settingsModal","users","usersIDs","groups","combineReducers","dialogs","state","arguments","length","undefined","action","type","newState","Object","toConsumableArray","activeDialog","find","dialog","active","forEach","ConversationId","ConversationType","messagesRecieved","payload","data","UnreadedCount","SecondUid","Id","fakeDialog","Title","NameFirst","NameSecond","Photo","fake","push","messages","conversationId","conversationType","PreviewText","Text","chats","chatsUsers","ChatId","Users","message","mess","GlobalId","sort","a","b","a_date","Date","SendingTime","b_date","Read","user","concat","contacts","objectSpread2","ContactUserId","userId","groupIndex","GroupsId","indexOf","groupId","splice","group","GroupId","forwardMessage","auth","node","nodes","path","ui","text","name","searchResult","dialogsReceived","messagesReceived","forwardingMessage","openDialog","userReceived","openProfile","toggleDrawer","toggleModal","wSocket","Connect","classCallCheck","this","domain","_this","webSocket","WebSocket","onopen","console","log","wsOnConnect","onclose","event","wasClean","onmessage","blobToJson","ErrorCode","onMessage","onMessageAuth","onerror","error","readyState","u","x","URL","createObjectURL","XMLHttpRequest","open","send","revokeObjectURL","JSONbig","parse","responseText","result","charactersLength","i","charAt","Math","floor","random","parseInt","JSON","stringify","setActiveNode","setPath","Auth","possibleConstructorReturn","getPrototypeOf","call","props","item","localStorage","setItem","socket","start","Domains","menu","react_default","createElement","es_menu","onClick","selectNode","bind","map","Item","key","Name","row","align","justify","style","height","col","className","es_button","connectNode","dropdown","overlay","getItem","icon","Component","connect","dispatch","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","surname","setSurname","_useState5","_useState6","phone","setPhone","_useState7","_useState8","email","setEmail","_useState9","_useState10","verifyCode","setVerifyCode","_useState11","_useState12","nameErr","setNameErr","_useState13","_useState14","emailErr","setEmailErr","_useState15","_useState16","contactsErr","setContactsErr","_useState17","_useState18","verifyCodeErr","setVerifyCodeErr","_useState19","_useState20","btnLoader","setbtnLoader","_useState21","_useState22","_useState23","_useState24","showRegButton","setShowRegButton","useEffect","ResponseType","FileAccessToken","Token","AccessToken","RefreshToken","User","window","location","replace","es_form","Fragment","validateStatus","help","input","placeholder","value","onChange","e","target","textAlign","regData","Phones","About","Country","City","Birthday","Language","NodeId","Online","Emails","Blacklist","Visible","Security","Tag","RegistrationDate","VCode","RequestId","makeId","RequestType","Type","loading","disabled","test","verifyData","VerificationType","Uid","IsRegistration","getVerifyCode","setAuth","Verify","verifyUid","verifyErr","verifyRequestSended","btnPreloader","redirect","_this2","setState","Message","navigator","appVersion","userAgent","preventDefault","LoginType","UidType","verifyType","DeviceName","getDevice","OSName","getOS","AppName","_this3","react_router","to","setPrevPath","onSubmit","sendverifyCode","autoFocus","inputMode","onChangeVerifCode","htmlType","sendVerificationQuery","onChangePhone","selectors","getFormatedMessages","tempMess","Attachments","SenderId","getFormatedDialogs","tempDialogs","AttachmentType","IsMuted","LastMessageId","LastMessageSenderId","LastMessageSenderName","LastMessageTime","getFormatedChats","chat","tempChat","Key","NodesId","Public","getFormatedChatsUsers","tempUser","Banned","Deleted","InviterId","Joined","UserId","UserInfo","UserRole","getFormatedUser","BlackList","Confirmed","Contact","ContactsPrivacy","Encryption","Groups","Keys","getUserById","id","getUserInitials","initials","ChannelName","defaultAva","split","substr","getActiveDialog","SidebarItem","newsContent","refs","messageText","newsText","innerText","slice","avatarStyle","width","backgroundSize","backgroundPosition","backgroundImage","backgroundRepeat","react_router_dom","ref","dialogId","src","logo","alt","Search","Input","searchStart","searchEnd","queryText","setQueryText","searchDialogs","toLowerCase","searchRequest","SearchQuery","Direction","onSearch","enterButton","localFoundDialogs","setLocalFoundDialogs","filter","components_HeadSidebar","components_Search","components_SidebarItem","showSearchResultUsers","showSearchResultChats","channels","showSearchResultChannels","JavascriptTimeAgo","locale","ru","closeDialog","setDialog","setDefaultAva","setUser","document","body","clientWidth","windowWidth","setWindowWidth","onresize","ReactTimeAgo","date","borderRadius","_extends","assign","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","points","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","tick_icon_SvgTickIcon","_ref","svgRef","y","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","double_tick_icon_extends","double_tick_icon_objectWithoutProperties","double_tick_icon_objectWithoutPropertiesLoose","double_tick_icon_ref2","d","double_tick_icon_ref3","double_tick_icon_ref4","double_tick_icon_ref5","double_tick_icon_ref6","double_tick_icon_ref7","double_tick_icon_ref8","double_tick_icon_ref9","double_tick_icon_ref10","double_tick_icon_ref11","double_tick_icon_ref12","double_tick_icon_ref13","double_tick_icon_ref14","double_tick_icon_ref15","double_tick_icon_ref16","double_tick_icon_ref17","double_tick_icon_SvgDoubleTickIcon","double_tick_icon_ForwardRef","visible","setVisible","messageTime","setMessageTime","isContextMenuVisible","setSsContextMenuVisible","setRedirect","timestamp","setTime","hour","getHours","minutes","getMinutes","setLinks","str","reg","match","k","conversation","Payload","currentUser","background","components_Avatar","FileId","forwardingUser","getForwardingUser","dangerouslySetInnerHTML","__html","fontStyle","href","download","Filename","modal","onCancel","footer","maskClosable","paperclip_icon_extends","paperclip_icon_objectWithoutProperties","paperclip_icon_objectWithoutPropertiesLoose","paperclip_icon_ref2","transform","paperclip_icon_SvgPaperclipIcon","paperclip_icon_ForwardRef","send_button_icon_extends","send_button_icon_objectWithoutProperties","send_button_icon_objectWithoutPropertiesLoose","send_button_icon_ref2","send_button_icon_ref3","send_button_icon_ref4","send_button_icon_ref5","send_button_icon_ref6","send_button_icon_ref7","send_button_icon_ref8","send_button_icon_ref9","send_button_icon_ref10","send_button_icon_ref11","send_button_icon_ref12","send_button_icon_ref13","send_button_icon_ref14","send_button_icon_ref15","send_button_icon_ref16","send_button_icon_ref17","send_button_icon_SvgSendButtonIcon","send_button_icon_ForwardRef","setMessageText","imgLoading","setImgLoading","imageUrl","setImageUrl","attachmentsType","setAttachmentsType","sendMessage","Messages","ReceiverId","ReplyTo","MessagesGlobalId","Hash","MessageId","upload","showUploadList","customRequest","file","fileAccessToken","axios","defaults","headers","formData","FormData","append","post","then","res","status","File","catch","err","handleUploadImage","beforeUpload","isJpgOrPng","info","onKeyDown","keyCode","requestsId","setMessages","messagesLoading","setMessagesLoading","height1","setHeight1","height2","setHeight2","mesViewport","useRef","MessagesId","current","onscroll","scrollTop","scrollHeight","messagesRequest","NavigationMessageId","ChannelId","setTimeout","scrollBottom","uniqueUsers","Set","n","requestUsers","UsersId","getUsers","onDragOver","classList","add","fileOver","onDragLeave","remove","fileLeave","onDrop","dataTransfer","files","attachmentType","fileDrop","components_Message","size","ChannelsId","components_NewMessageField","NavigationMessageTime","zIndex","components_HeadDialog","components_Dialog","setProfile","prevProfile","setPrevProfile","getChatInfo","ChatsId","undefinedUsers","handleCancelProfile","margin","FullNumber","foundUser","marginTop","chatName","setChatName","nameError","setNameError","chatPrivate","setChatPrivate","chatChannel","setChatChannel","setLoading","setUsersIds","showUsers","setShowUsers","title","ContactUser","ContactId","includes","foudnUserIndex","addContactToChat","listType","fontSize","color","divider","es_switch","checked","block","newChat","Chats","handleCreateChat","request","Request","getDialogs","getUserContacts","usersIds","requestdData","Privacy","contactsIDs","TabPane","Tabs","getUserGroups","showContacts","contact","handleOpenChat","tabs","defaultActiveKey","getGroupContacts","tab","Typography","removeContactFromGroup","removeGroup","groupOpen","setGroupOpen","creatingGroup","setCreatingGroup","handleSetChatName","openGroup","openedGroup","strong","newGroup","Group","createGroup","defaultValue","shape","removeUser","removeUserFromGroup","addUsersToGroup","updateGroup","removeContactGroup","lastName","setLastName","about","setAbout","privacySettings","setPrivacySettings","namePrivacy","setNamePrivacy","photoPrivacy","setPhotoPrivacy","onlinePrivacy","setOnlinePrivacy","phonePrivacy","setPhonePrivacy","emailPrivacy","setEmailPrivacy","uploadButton","addonBefore","SubscriberNumber","privacy","userData","editUser","handleUpdateUser","drawer","placement","closable","onClose","logout","Full","removeItem","components_Sidebar","components_DialogContainer","components_ProfileModal","components_CreateChatModal","components_ContactsModal","components_ContactsGroupsModal","components_SettingsModal","chatsReceived","chatsUsersReceived","readMessages","searchResultReceived","setContactUsersIDs","userGroupsReceived","setContacts","getSelf","Conversations","Code","getChatsUsers","NavigationUserId","ChatUsers","Channels","userIDs","Contacts","messagesRead","licens","setNodes","setAppFocus","position","onfocus","onblur","addEventListener","scrollTo","getNodesObj","response","Nodes","login","transport_Socket","spin","components_MainContainer","components_Verify","components_Registration","components_Auth","Boolean","hostname","initialState","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31c3d337.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.024bbe57.PNG\";","/* eslint-disable */\nconst defaulState = {\n  activeNode: null,\n  allNodes: null\n}\n\nexport function node(state = defaulState, action) {\n  if(action.type === 'SET_NODE') {\n    let newState = {...state}\n    newState.activeNode = action.node\n    return newState\n  } else if(action.type === 'SET_NODES') {\n    let newState = {...state}\n    newState.allNodes = action.nodes\n    return newState\n  }\n  return state\n}\n","/* eslint-disable */\nconst defaultState = {\n  prevPath: '',\n  currentPath: ''\n}\n\nexport function path(state = defaultState, action) {\n  if(action.type === 'SET_PATH') {\n    let newState = {...state}\n    newState.prevPath = newState.path\n    newState.currentPath = action.path\n    return newState\n  } else if(action.type === 'PREV_PATH') {\n    let newState = {...state}\n    newState.currentPath = newState.prevPath\n    return newState\n  }\n  return state\n}\n","/* eslint-disable */\nconst defaultState = {\n  profile: null,\n  search: false,\n  showDrawer: false,\n  appFocus: true,\n  modals: {\n    createChatModal: false,\n    contactsModal: false,\n    contactsGroupsModal: false,\n    settingsModal: false\n  }\n}\n\nexport function ui(state = defaultState, action) {\n  if(action.type === 'OPEN_PROFILE') {\n    let newState = {...state}\n    newState.profile = action.dialog\n    return newState\n  }\n  else if (action.type === 'SEARCH_START') {\n    let newState = {...state}\n    newState.search = action.text\n    return newState\n  }\n  else if (action.type === 'SEARCH_END') {\n    let newState = {...state}\n    newState.search = false\n    return newState\n  }\n  else if (action.type === 'TOGGLE_DRAWER') {\n    let newState = {...state}\n    if (action.name === \"close\") {\n      newState.showDrawer = false\n    } else {\n      newState.showDrawer = !newState.showDrawer\n    }\n    return newState\n  }\n  else if (action.type === 'TOGGLE_MODAL') {\n    let newState = {...state}\n    if (action.name === \"close\") {\n      for (var name in newState.modals) {\n        newState.modals[name] = false\n      }\n    } else {\n      newState.modals[action.name] = !newState.modals[action.name]\n    }\n    return newState\n  }\n  else if (action.type === 'SET_APP_FOCUS') {\n    let newState = {...state}\n    newState.appFocus = action.data\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\nconst defaultState = {\n  users: [],\n  usersIDs: [],\n  groups: []\n}\n\nexport function contacts(state = defaultState, action) {\n  if(action.type === 'SET_CONTACT_USERS_IDS') {\n    let newState = {...state}\n    newState.usersIDs = action.usersIDs\n    return newState\n  }\n  if(action.type === 'SET_CONTACTS') {\n    let newState = {...state}\n    newState.users = action.contacts\n    return newState\n  }\n  else if (action.type === \"USER_GROUPS_RECEIVED\") {\n    let newState = {...state}\n    newState.groups = action.groups\n    return newState\n  }\n  else if (action.type === \"REMOVE_CONTACT_FROM_GROUP\") {\n    let newState = {...state}\n    newState.users.forEach(user => {\n      if (user.ContactUserId === action.payload.userId) {\n        let groupIndex = user.GroupsId.indexOf(action.payload.groupId)\n        user.GroupsId.splice(groupIndex, 1)\n      }\n    })\n    return newState\n  }\n  else if (action.type === \"REMOVE_GROUP\") {\n    let newState = {...state}\n    newState.groups.forEach(group => {\n      if (group.GroupId === action.groupId) {\n        let groupIndex = newState.groups.indexOf(group)\n        newState.groups.splice(groupIndex, 1)\n      }\n    })\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","import { combineReducers } from \"redux\"\nimport { dialogs } from \"./dialogs\"\nimport { chats } from \"./chats\"\nimport { messages } from \"./messages\"\nimport { users } from \"./users\"\nimport { forwardMessage } from \"./forwardMessage\"\nimport { auth } from \"./auth\"\nimport { node } from \"./node\"\nimport { path } from \"./path\"\nimport { ui } from \"./ui\"\nimport { searchResult } from \"./search\"\nimport { contacts } from \"./contacts\"\n\nexport default combineReducers({\n  dialogs,\n  chats,\n  messages,\n  users,\n  contacts,\n  forwardMessage,\n  auth,\n  node,\n  path,\n  ui,\n  searchResult\n})\n","/* eslint-disable */\nexport function dialogs(state = [], action) {\n   if (action.type === 'DIALOGS_RECEIVED') {\n      let newState = [...state]\n      let activeDialog = newState.find(dialog => dialog.active)\n      newState = action.dialogs\n      if (activeDialog) {\n         newState.forEach(dialog => {\n            if (dialog.ConversationId === activeDialog.ConversationId && dialog.ConversationType === activeDialog.ConversationType) {\n               dialog.active = true\n               dialog.messagesRecieved = activeDialog.messagesRecieved\n            }\n         })\n      }\n      return newState\n   }\n   else if(action.type === 'OPEN_DIALOG') {\n      let newState = [...state]\n      // В action.payload.data может содержаться и сам диалог и объект юзера диалога с которым еще нет\n      // Если диалога с юзером нет, то создаем фэйковый диалог\n      // И после отправи сообщения диалог будет создан и просто запрашиваем его на сервере\n      if (action.payload.type === 'dialog') {\n         newState.forEach(function(dialog){\n            dialog.active = false\n   \n            if (dialog.ConversationId === action.payload.data.ConversationId && dialog.ConversationType === action.payload.data.ConversationType) {\n               dialog.active = true\n               dialog.UnreadedCount = 0\n               dialog.type = action.payload.type\n            }\n         })\n      } else if (action.payload.type === 'user') {\n         let dialogWithUser = newState.find(dialog => dialog.SecondUid === action.payload.data.Id)\n         if (dialogWithUser) {\n            newState.forEach(dialog => {\n               dialog.active = false\n\n               if (dialog.SecondUid === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = 'dialog'\n               }\n            })\n         } else {\n            let fakeDialog = {}\n         \n            fakeDialog.ConversationId = action.payload.data.Id,\n            fakeDialog.Title = action.payload.data.NameFirst + ' ' + action.payload.data.NameSecond,\n            fakeDialog.Photo = action.payload.data.Photo,\n            fakeDialog.ConversationType = 1,\n            fakeDialog.SecondUid = action.payload.data.Id,\n            fakeDialog.fake = true\n   \n            newState.push(fakeDialog)\n   \n            newState.forEach(function(dialog){\n               dialog.active = false\n      \n               if (dialog.ConversationId === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = action.payload.type\n               }\n            })\n         }\n      } else if (action.payload.type === 'channel') {\n         newState.push(action.payload.data)\n\n         newState.forEach(function(dialog){\n            dialog.active = false\n   \n            if (dialog.ConversationId === action.payload.data.Id) {\n               dialog.active = true\n               dialog.UnreadedCount = 0\n               dialog.type = action.payload.type,\n               dialog.fake = true\n            }\n         })\n      } else if (action.payload.type === 'chat') {\n         let chat = newState.find(dialog => dialog.ConversationId === action.payload.data.Id)\n         if (chat) {\n            newState.forEach(dialog => {\n               dialog.active = false\n\n               if (dialog.ConversationId === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = 'chat'\n               }\n            })\n         } else {\n            let fakeDialog = {}\n         \n            fakeDialog.ConversationId = action.payload.data.Id,\n            fakeDialog.Title = action.payload.data.NameFirst + ' ' + action.payload.data.NameSecond,\n            fakeDialog.Photo = action.payload.data.Photo,\n            fakeDialog.ConversationType = 1,\n            fakeDialog.SecondUid = action.payload.data.Id,\n            fakeDialog.fake = true\n   \n            newState.push(fakeDialog)\n   \n            newState.forEach(function(dialog){\n               dialog.active = false\n      \n               if (dialog.ConversationId === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = action.payload.type\n               }\n            })\n         }\n      }\n\n      return newState\n   }\n   else if(action.type === 'CLOSE_DIALOG') {\n      let newState = [...state]\n\n      newState.forEach(dialog => {\n         if (dialog.active) {\n            dialog.active = false\n         }\n      })\n\n      return newState\n   }\n   else if(action.type === 'MESSAGES_RECEIVED'){\n      let newState = [...state]\n\n      if (action.messages.length) {\n         let conversationId = action.messages[0].ConversationId\n         let conversationType = action.messages[0].conversationType\n         newState.forEach(dialog => {\n            if (dialog.ConversationId === conversationId && dialog.ConversationType === conversationType) {\n               // устанавливаем флаг по которому при открытии диалога проверяем запрашивались ли для него сообщения\n               dialog.messagesRecieved = true\n               // превью диалога отображается в сайдбаре\n               dialog.PreviewText = action.messages[0].Text\n               // если диалог не открыт, то накручиваем счетчик непрочитаных\n               if(!dialog.active) {\n                  dialog.UnreadedCount += 1\n               }\n               // поднимаем диалог на первое место в сайдбаре\n               // let dialogIndex = newState.indexOf(dialog)\n               // newState.splice(dialogIndex, 1)\n               // newState.unshift(dialog)\n            }\n         })\n      }\n\n      return newState\n   }\n   else {\n      return state\n   }\n}\n","/* eslint-disable */\n// В chats хрнаится объект только одного чата, информацию о котором просматривается в данный момент\nexport function chats(state = [], action) {\nif (action.type === 'CHATS_RECEIVED') {\n    let newState = [...state];\n    newState = action.chats;\n    return newState;\n  }\n  else if (action.type === 'CHATS_USERS_RECEIVED') {\n    let newState = [...state];\n    if (newState[0].Id === action.chatsUsers[0].ChatId) {\n      newState[0].Users = action.chatsUsers;\n    }\n    return newState;\n  }\n  else {\n    return state;\n  }\n}\n","/* eslint-disable  */\n\nfunction sortMessages(messages) {\n  return messages.sort(function(a, b) {\n    let a_date = new Date(a.SendingTime)\n    let b_date = new Date(b.SendingTime)\n    if (a_date < b_date) {\n      return -1\n    } if (a_date > b_date) {\n      return 1\n    } else {\n      return 0\n    }\n  })\n}\n\nexport function messages(state = [], action) {\n  if (action.type === \"MESSAGES_RECEIVED\") {\n    let newState = [...state]\n    action.messages.forEach(message => {\n      let existence = newState.find(mess => mess.GlobalId === message.GlobalId)\n      if (!existence) {\n        newState.push(message)\n      }\n    })\n\n    return sortMessages(newState)\n  }\n  else if(action.type === \"READ_MESSAGES\") {\n    let newState = [...state]\n    \n    newState.forEach(message => {\n      if (message.ConversationId === action.data.ConversationId && message.ConversationType === action.data.ConversationType) {\n        message.Read = true\n      }\n    })\n\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\nexport function users(state = [], action) {\n  if(action.type === 'USER_RECEIVED') {\n    let newState = state;\n    \n    if(action.users.length > 0) {\n      let foundUser = newState.find(user => user.Id === action.users[0].Id);\n\n      if (!foundUser) {\n        newState = [...newState, ...action.users];\n      }\n    }\n    \n    return newState;\n  } else {\n    return state;\n  }\n}\n","/* eslint-disable */\nexport function forwardMessage(state = false, action) {\n  if (action.type === \"FORWARD_MESSAGE\") {\n    let newState = state\n\n    newState = action.message\n\n    return newState\n  } else {\n    return state\n  }\n}\n","/* eslint-disable */\nexport function auth(state = \"CHECK_AUTH\", action) {\n  if(action.type === 'SET_AUTH') {\n    let newState = state\n    newState = action.auth\n    return newState\n  }\n  return state\n}\n","/* eslint-disable */\nexport function searchResult(state = null, action) {\n  if(action.type === 'SEARCH_RESULT_RECEIVED') {\n    let newState = {...state}\n    newState = action.searchResult\n    return newState\n  }\n  else if(action.type === 'SEARCH_END') {\n    let newState = {...state}\n    newState = null\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","export function dialogsReceived(dialogs) {\n  return {\n    type: \"DIALOGS_RECEIVED\",\n    dialogs\n  }\n}\n\nexport function chatsReceived(chats) {\n  return {\n    type: \"CHATS_RECEIVED\",\n    chats\n  }\n}\n\nexport function messagesReceived(messages) {\n  return {\n    type: \"MESSAGES_RECEIVED\",\n    messages\n  }\n}\n\nexport function readMessages(data) {\n  return {\n    type: \"READ_MESSAGES\",\n    data\n  }\n}\n\nexport function forwardingMessage(message) {\n  return {\n    type: \"FORWARD_MESSAGE\",\n    message\n  }\n}\n\nexport function openDialog(payload) {\n  return {\n    type: \"OPEN_DIALOG\",\n    payload\n  }\n}\n\nexport function closeDialog() {\n  return {\n    type: \"CLOSE_DIALOG\"\n  }\n}\n","export function userReceived(users) {\n  return {\n    type: \"USER_RECEIVED\",\n    users\n  }\n}\n\nexport function chatsUsersReceived(chatsUsers) {\n  return {\n    type: \"CHATS_USERS_RECEIVED\",\n    chatsUsers\n  }\n}\n","/* eslint-disable */\nexport function openProfile(dialog) {\n  return {\n    type: \"OPEN_PROFILE\",\n    dialog\n  }\n}\n\nexport function toggleDrawer(name) {\n  return {\n    type: \"TOGGLE_DRAWER\",\n    name\n  }\n}\n\nexport function toggleModal(name) {\n  return {\n    type: \"TOGGLE_MODAL\",\n    name: name\n  }\n}\n\nexport function setAppFocus(data) {\n  return {\n    type: \"SET_APP_FOCUS\",\n    data\n  }\n}\n","/* eslint-disable */\nimport JSONbig from \"json-bigint\"\n\nclass Connect {\n  constructor() {\n    \n  }\n\n  start(domain){\n    this.webSocket = new WebSocket(`wss://${domain}:5000`)\n\n    this.webSocket.onopen = () => {\n      console.log(\"Соединение установлено\")\n      this.wsOnConnect()\n    }\n\n    this.webSocket.onclose = event => {\n      if (event.wasClean) {\n        console.log(\"Соединение закрыто\")\n      } else {\n        console.log(\"Обрыв соединения\")\n      }\n      console.log(\"Код: \", event)\n    }\n\n    this.webSocket.onmessage = event => {\n      const message = this.blobToJson(event.data)\n\n      if (message.ErrorCode && message.ErrorCode !== 0) {\n        console.log('%c REQUEST ERR ',  'background: #ff4545; color: #bada55; padding: 3px', message)\n      } else {\n        this.onMessage(message)\n        this.onMessageAuth(message)\n        console.log(\n          \"%c RESPONSE \",\n          \"background: #00ff00; color: #000; padding: 3px\",\n          this.blobToJson(event.data)\n        )\n      }\n    }\n\n    this.webSocket.onerror = error => {\n      console.log('%c ERROR CONNECT ',  'background: red; color: #bada55; padding: 3px', error);\n    }\n  }\n\n  getStatus(){\n    return this.webSocket.readyState\n  }\n\n  blobToJson(data) {\n    var u, x\n    u = URL.createObjectURL(data)\n    x = new XMLHttpRequest()\n    x.open(\"GET\", u, false)\n    x.send()\n    URL.revokeObjectURL(u)\n\n    return JSONbig.parse(x.responseText)\n  }\n\n  makeId() {\n    var result = \"\"\n    var characters = \"0123456789\"\n    var charactersLength = characters.length\n    for (var i = 0; i < 18; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength))\n    }\n\n    return parseInt(result)\n  }\n\n  send(data) {\n    console.log(\n      \"%c REQUEST \",\n      \"background: #222; color: #bada55; padding: 3px\",\n      data\n    )\n    this.webSocket.send(JSON.stringify(data))\n  }\n\n  onMessage() {}\n\n  onMessageAuth() {}\n\n  wsOnConnect() {}\n}\n\nconst wSocket = new Connect()\n\nexport default wSocket\n","/* eslint-disable */\nexport function setActiveNode(node) {\n  return {\n    type: \"SET_NODE\",\n    node\n  }\n}\n\nexport function setNodes(nodes) {\n  return {\n    type: \"SET_NODES\",\n    nodes\n  }\n}","export function setPath(path) {\n  return {\n    type: \"SET_PATH\",\n    path: path\n  }\n}\n\nexport function setPrevPath() {\n  return {\n    type: \"PREV_PATH\"\n  }\n}","import React, { Component } from \"react\"\nimport { Row, Col, Button, Menu, Dropdown, Icon } from \"antd\"\n// import { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport socket from \"../transport/Connect\"\nimport { setActiveNode } from \"../actions/node\"\nimport { setPath } from \"../actions/path\"\n\nclass Auth extends Component {\n  constructor() {\n    super()\n    // this.state = {\n    //   nodes: [],\n    //   activeNode: null\n    // }\n  }\n\n  componentDidMount() {\n    // this.setState({\n    //   nodes: JSON.parse(localStorage.getItem(\"nodes\")),\n    //   activeNode: JSON.parse(localStorage.getItem(\"node\"))\n    // })\n  }\n\n  selectNode(node) {\n    // this.setState({\n    //   activeNode: node.item.props.data\n    // })\n    this.props.setActiveNode(node.item.props.data)\n    localStorage.setItem(\"node\", JSON.stringify(node.item.props.data))\n  }\n\n  connectNode(path) {\n    if (this.props.node.activeNode) {\n      socket.start(this.props.node.activeNode.Domains[0])\n    } else {\n      socket.start(this.props.node.allNodes[0].Domains[0])\n      this.props.setActiveNode(this.props.node.allNodes[0])\n      localStorage.setItem(\"node\", JSON.stringify(this.props.node.allNodes[0]))\n    }\n    this.props.setPath(path)\n  }\n\n  render() {\n    const menu = (\n      <Menu onClick={this.selectNode.bind(this)}>\n        {\n          this.props.node.allNodes ?\n            this.props.node.allNodes.map((node, i) => {\n              return (\n                <Menu.Item key={i} data={node}>\n                  {node.Name}\n                </Menu.Item>\n              )\n            })\n          : null\n        }\n      </Menu>\n    )\n    return (\n      <Row\n        type=\"flex\"\n        align=\"middle\"\n        justify=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Col>\n          <div className=\"auth__type\">\n            <h1>Вход</h1>\n            <h2>Выберите способ входа</h2>\n            <Button type=\"secondary\" onClick={this.connectNode.bind(this, 'by-phone')}>По номеру телефона</Button>\n            <br />\n            <Button type=\"secondary\" onClick={this.connectNode.bind(this, 'by-email')}>По электронной почте</Button>\n            <br />\n            <Button type=\"secondary\">Через приложение</Button>\n            <br />\n            <br />\n            <Button type=\"link\" onClick={this.connectNode.bind(this, 'registration')}>Регистрация</Button>\n            <br />\n            <div className=\"auth__type_server\">\n              <span>Сервер: </span>\n              <Dropdown overlay={menu}>\n                <span className=\"ant-dropdown-link\">\n                  {localStorage.getItem(\"node\")\n                    ? JSON.parse(localStorage.getItem(\"node\")).Name\n                    : \"Автоматически\"}\n                  <Icon type=\"down\" />\n                </span>\n              </Dropdown>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    node: state.node\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveNode: node => dispatch(setActiveNode(node)),\n    setPath: path => dispatch(setPath(path))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { Row, Col, Button, Form, Input, Dropdown, Menu, Icon } from \"antd\"\nimport { connect } from \"react-redux\"\nimport socket from \"../transport/Connect\"\n\nfunction Registration(props) {\n  const [name, setName] = useState(\"\")\n  const [surname, setSurname] = useState(\"\")\n  const [phone, setPhone] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [verifyCode, setVerifyCode] = useState(\"\")\n  const [nameErr, setNameErr] = useState(false)\n  const [emailErr, setEmailErr] = useState(false)\n  const [contactsErr, setContactsErr] = useState(false)\n  const [verifyCodeErr, setVerifyCodeErr] = useState(false)\n  const [btnLoader, setbtnLoader] = useState(false)\n  const [activeNode, setActiveNode] = useState(null)\n  const [showRegButton, setShowRegButton] = useState(false)\n\n  useEffect(() => {\n    socket.onMessage = data => {\n      if (data.ErrorCode !== 0) {\n        // console.log(data)\n      } else if (data.ResponseType === 6) {\n        localStorage.setItem(\"FileAccessToken\", data.FileAccessToken)\n        localStorage.setItem(\"AccessToken\", data.Token.AccessToken)\n        localStorage.setItem(\"RefreshToken\", data.Token.RefreshToken)\n        localStorage.setItem(\"User\", JSON.stringify(data.User))\n\n        window.location.replace(\"/\")\n      }\n    }\n\n    setActiveNode(JSON.parse(localStorage.getItem(\"node\")))\n  }, [])\n\n  const handleRegistration = () => {\n    if (!verifyCode) {\n      setVerifyCodeErr(\"Это поле обязательно для заполнения\")\n    } else {\n      setbtnLoader(true)\n\n      const regData = {\n        User: {\n          Id: 0,\n          Phones: phone ? [phone] : null,\n          NameFirst: name,\n          NameSecond: surname,\n          About: \"\",\n          Photo: \"\",\n          Country: \"\",\n          City: \"\",\n          Birthday: \"\",\n          Language: null,\n          NodeId: activeNode.Id,\n          Online: null,\n          Emails: email ? [email] : null,\n          Blacklist: null,\n          Visible: null,\n          Security: null,\n          Tag: 0,\n          RegistrationDate: null\n        },\n        VCode: parseInt(verifyCode),\n        RequestId: socket.makeId(),\n        RequestType: 37,\n        Type: 0\n      }\n\n      socket.send(regData)\n    }\n  }\n\n  const handleSetName = e => {\n    setName(e.target.value)\n    setNameErr(false)\n  }\n\n  const handleSetSurname = e => {\n    setSurname(e.target.value)\n  }\n\n  const handleSetPhone = e => {\n    setPhone(e.target.value)\n    setContactsErr(false)\n  }\n\n  const handleSetEmail = e => {\n    const validateEmail = email => {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n\n    setEmail(e.target.value)\n    setContactsErr(false)\n\n    if (!validateEmail(e.target.value)) {\n      setEmailErr(\"Некорректный email адрес\")\n    } else {\n      setEmailErr(false)\n    }\n\n    if (e.target.value.length === 0) {\n      setEmailErr(false)\n    }\n  }\n\n  const handleSetVerifyCode = e => {\n    setVerifyCode(e.target.value)\n    setVerifyCodeErr(false)\n  }\n\n  const selectNode = data => {\n    if (data.item.props.data) {\n      setActiveNode(data.item.props.data)\n      localStorage.setItem(\"node\", JSON.stringify(data.item.props.data))\n    }\n  }\n\n  const menu = (\n    <Menu onClick={(node) => selectNode(node)}>\n      {props.nodes.map((node, i) => {\n        return (\n          <Menu.Item key={i} data={node}>\n            {node.Name}\n          </Menu.Item>\n        )\n      })}\n      {\n        // this.state.activeNode ? <Menu.Item key='auto' data={null}>Автоматически</Menu.Item> : null\n      }\n    </Menu>\n  )\n\n  const getVerifyCode = () => {\n    if (name.length === 0) {\n      setNameErr(\"Это поле обязательно для заполнения\")\n    } else if (phone.length === 0 && email.length === 0) {\n      setContactsErr(\"Одно из этих полей обязательно для заполнения\")\n    } else {\n      const verifyData = {\n        VerificationType: email ? 1 : phone ? 0 : 0,\n        Uid: phone ? phone : email,\n        IsRegistration: true,\n        RequestId: socket.makeId(),\n        RequestType: 42,\n        Type: 0\n      }\n\n      setShowRegButton(true)\n\n      socket.send(verifyData)\n    }\n  }\n\n  return (\n    <Row\n      type=\"flex\"\n      align=\"middle\"\n      justify=\"center\"\n      style={{ height: \"100vh\" }}\n    >\n      <Col>\n        <div className=\"auth__type\">\n          <h1>Регистрация</h1>\n          <div>\n            <Form className=\"login-form\">\n              {\n                showRegButton ? \n                  <>\n                    <div className=\"verify-text\">{`Мы отправили вам код подтверждения на ваш ${phone ? 'телефон' : 'email'}, пожалуйста введите его в поле ниже и завершите регистрацию`}</div>\n                    <Form.Item\n                      validateStatus={verifyCodeErr ? \"error\" : \"\"}\n                      help={verifyCodeErr || \"\"}\n                    >\n                      <Input placeholder=\"Код\" value={verifyCode} onChange={handleSetVerifyCode} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            onClick={handleRegistration}\n                            loading={btnLoader}\n                          >\n                            Зарегистрироваться\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </>\n                :\n                  <>\n                    <Form.Item\n                      validateStatus={nameErr ? \"error\" : \"\"}\n                      help={nameErr || \"\"}\n                    >\n                      <Input placeholder=\"Имя\" onChange={handleSetName} />\n                    </Form.Item>\n                    <Form.Item validateStatus=\"\">\n                      <Input placeholder=\"Фамилия\" onChange={handleSetSurname} />\n                    </Form.Item>\n                    <Form.Item\n                      validateStatus={contactsErr ? \"error\" : \"\"}\n                      help={contactsErr || \"\"}\n                    >\n                      <Input placeholder=\"Номер телефона\" disabled={email.length ? true : false} onChange={handleSetPhone} />\n                    </Form.Item>\n                    <div className=\"verify-text\"><span>или</span></div>\n                    <Form.Item\n                      validateStatus={contactsErr || emailErr ? \"error\" : \"\"}\n                      help={contactsErr || emailErr || \"\"}\n                    >\n                      <Input placeholder=\"Email\" disabled={phone.length ? true : false} onChange={handleSetEmail} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            onClick={() => getVerifyCode()}\n                            disabled={name && phone || email ? false : true}\n                          >\n                            Получить код\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </>\n              }\n            </Form>\n            <div className=\"auth__type_server\">\n              <span>Сервер: </span>\n              <Dropdown overlay={menu}>\n                <span className=\"ant-dropdown-link\">\n                  {activeNode\n                    ? activeNode.Name\n                    : \"Автоматически\"}\n                  <Icon type=\"down\" />\n                </span>\n              </Dropdown>\n            </div>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    nodes: state.node.allNodes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration)","export function setAuth(auth) {\n  return {\n    type: \"SET_AUTH\",\n    auth\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\"\nimport { Row, Col, Button, Form, Input, Icon } from \"antd\"\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { setAuth } from \"../actions/auth\"\nimport { setPrevPath } from \"../actions/path\"\nimport socket from \"../transport/Connect\"\n\nclass Verify extends Component {\n  constructor() {\n    super()\n    this.state = {\n      verifyUid: null,\n      verifyErr: null,\n      verifyRequestSended: false,\n      verifyCode: null,\n      verifyCodeErr: null,\n      btnPreloader: false,\n      redirect: false\n    }\n  }\n\n  componentDidMount() {\n    socket.onMessageAuth = data => {\n      this.setState({\n        btnPreloader: false\n      })\n\n      if (data.ErrorCode !== 0) {\n        this.setState({\n          verifyErr: data.Message\n        })\n      } else if (data.ResponseType === 10) {\n        this.setState({\n          verifyRequestSended: true\n        })\n      } else if (data.ResponseType === 6) {\n        localStorage.setItem(\"FileAccessToken\", data.FileAccessToken)\n        localStorage.setItem(\"AccessToken\", data.Token.AccessToken)\n        localStorage.setItem(\"RefreshToken\", data.Token.RefreshToken)\n        localStorage.setItem(\"User\", JSON.stringify(data.User))\n\n        this.props.setAuth(\"AUTH_SUCCESS\")\n\n        this.setState({\n          redirect: true\n        })\n      }\n    }\n  }\n\n  onChangePhone(e) {\n    this.setState({\n      verifyUid: e.target.value,\n      verifyErr: null\n    })\n  }\n\n  onChangeVerifCode(e) {\n    this.setState({\n      verifyCode: e.target.value,\n      verifyCodeErr: null\n    })\n  }\n\n  getOS() {\n    if (navigator.appVersion.indexOf('Windows') >= 0) return 'Windows'\n    else if (navigator.appVersion.indexOf('Android') >= 0) return 'Android'\n    else if (navigator.appVersion.indexOf('Mac') >= 0) return 'MacOS'\n    else return \"unknown\"\n  }\n\n  getDevice() {\n    if (navigator.userAgent.indexOf(\"Android\") >= 0) return \"Phone\"\n    else if (navigator.userAgent.indexOf(\"webOS\") >= 0) return \"webOS\"\n    else if (navigator.userAgent.indexOf(\"iPhone\") >= 0) return \"iPhone\"\n    else if (navigator.userAgent.indexOf(\"iPad\") >= 0) return \"iPad\"\n    else if (navigator.userAgent.indexOf(\"iPod\") >= 0) return \"iPod\"\n    else return \"PC\"\n  }\n\n  sendverifyCode(e) {\n    e.preventDefault()\n\n    this.setState({\n      btnPreloader: true\n    })\n\n    const data = {\n      Uid: this.state.verifyUid,\n      VCode: this.state.verifyCode,\n      LoginType: 1,\n      UidType: this.props.verifyType === 'by-email' ? 2 : this.props.verifyType === 'by-phone' ? 0 : 0,\n      DeviceName: this.getDevice(),\n      OSName: this.getOS(),\n      AppName: \"Y messenger - WEB\",\n      RequestId: socket.makeId(),\n      RequestType: 33,\n      Type: 0\n    }\n\n    socket.send(data)\n  }\n\n  sendVerificationQuery(e) {\n    e.preventDefault()\n\n    this.setState({\n      btnPreloader: true\n    })\n\n    const data = {\n      VerificationType: this.props.verifyType === 'by-email' ? 1 : this.props.verifyType === 'by-phone' ? 0 : 0,\n      Uid: this.state.verifyUid,\n      RequestId: socket.makeId(),\n      RequestType: 42,\n      Type: 0\n    }\n\n    socket.send(data)\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />\n    } else {\n      return (\n        <Row\n          type=\"flex\"\n          align=\"middle\"\n          justify=\"center\"\n          style={{ height: \"100vh\" }}\n        >\n          <Col>\n            <div className=\"auth__type\">\n              <div className=\"modal_back\" onClick={() => this.props.setPrevPath()}><Icon type=\"arrow-left\" /></div>\n              <h1>Вход</h1>\n              {!this.state.verifyRequestSended ? (\n                <div>\n                  <h2>\n                    {this.props.verifyType === 'by-email' ? 'Введите ваш email' : this.props.verifyType === 'by-phone' ? 'Введите номер телефона' : ''}\n                  </h2>\n                  <Form\n                    onSubmit={this.sendVerificationQuery.bind(this)}\n                    className=\"login-form\"\n                  >\n                    <Form.Item\n                      validateStatus={this.state.verifyErr ? \"error\" : \"\"}\n                      help={this.state.verifyErr ? this.state.verifyErr : \"\"}\n                    >\n                      <Input\n                        autoFocus\n                        inputMode={this.props.verifyType === 'by-email' ? 'email' : this.props.verifyType === 'by-phone' ? 'tel' : ''}\n                        placeholder={this.props.verifyType === 'by-email' ? 'Ваш email' : this.props.verifyType === 'by-phone' ? 'Ваш номер телефона' : ''}\n                        onChange={this.onChangePhone.bind(this)}\n                      />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabled={!this.state.verifyUid}\n                            loading={!!this.state.btnPreloader}\n                          >\n                            Получить {this.props.verifyType === 'by-email' ? 'письмо' : this.props.verifyType === 'by-phone' ? 'SMS' : ''} с кодом\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </Form>\n                </div>\n              ) : (\n                <div>\n                  <h2>Код подтверждения из {this.props.verifyType === 'by-email' ? 'письма' : this.props.verifyType === 'by-phone' ? 'SMS' : ''}</h2>\n                  <p>\n                    Мы отправили {this.props.verifyType === 'by-email' ? 'письмо' : this.props.verifyType === 'by-phone' ? 'SMS' : ''} \n                    на {this.props.verifyType === 'by-email' ? 'email' : this.props.verifyType === 'by-phone' ? 'номер' : ''} {this.state.verifyUid}. Введите\n                    полученый код в поле ниже\n                  </p>\n                  <Form\n                    onSubmit={this.sendverifyCode.bind(this)}\n                    className=\"login-form\"\n                  >\n                    <Form.Item\n                      validateStatus={this.state.verifyCodeErr ? \"error\" : \"\"}\n                      help={this.state.verifyCodeErr ? this.state.verifyCodeErr : \"\"}\n                    >\n                      <Input\n                        autoFocus\n                        inputMode='tel'\n                        placeholder={`Код из ${this.props.verifyType === 'by-email' ? 'письма' : this.props.verifyType === 'by-phone' ? 'SMS' : ''}, 4 цифры`}\n                        onChange={this.onChangeVerifCode.bind(this)}\n                      />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabled={!this.state.verifyCode}\n                            loading={!!this.state.btnPreloader}\n                          >\n                            Войти\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </Form>\n                </div>\n              )}\n            </div>\n          </Col>\n        </Row>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    verifyType: state.path.currentPath\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuth: auth => dispatch(setAuth(auth)),\n    setPrevPath: () => dispatch(setPrevPath())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Verify)\n","import { getFormatedMessages } from \"./Message\"\nimport {\n  getFormatedDialogs,\n  getFormatedChats,\n  getActiveDialog\n} from \"./Dialog\"\nimport {\n  getFormatedUser,\n  getFormatedChatsUsers,\n  getUserById,\n  getUserInitials\n} from \"./User\"\n\nexport default {\n  getFormatedMessages,\n  getFormatedDialogs,\n  getFormatedChats,\n  getFormatedChatsUsers,\n  getFormatedUser,\n  getUserById,\n  getUserInitials,\n  getActiveDialog\n}\n","// eslint-disable-next-line\nexport function getFormatedMessages(messages) {\n  const mess = []\n  messages.forEach(message => {\n    const tempMess = {\n      Attachments: message.Attachments,\n      ConversationId: message.ConversationId,\n      ConversationType: message.ConversationType,\n      GlobalId: message.GlobalId,\n      Read: message.Read,\n      SenderId: message.SenderId,\n      SendingTime: message.SendingTime,\n      Text: message.Text\n    }\n    mess.push(tempMess)\n  })\n\n  return mess\n}\n","// eslint-disable-next-line\nexport function getFormatedDialogs(data) {\n  const dialogs = []\n  data.forEach(dialog => {\n    const tempDialogs = {\n      AttachmentType: dialog.AttachmentType,\n      ConversationId: dialog.ConversationId,\n      ConversationType: dialog.ConversationType,\n      IsMuted: dialog.IsMuted,\n      LastMessageId: dialog.LastMessageId,\n      LastMessageSenderId: dialog.LastMessageSenderId,\n      LastMessageSenderName: dialog.LastMessageSenderName,\n      LastMessageTime: dialog.LastMessageTime,\n      Photo: dialog.Photo,\n      PreviewText: dialog.PreviewText,\n      Read: dialog.Read,\n      SecondUid: dialog.SecondUid,\n      Title: dialog.Title,\n      UnreadedCount: dialog.UnreadedCount\n    }\n    dialogs.push(tempDialogs)\n  })\n\n  return dialogs\n}\n\nexport function getFormatedChats(data) {\n  const chats = []\n  data.forEach(chat => {\n    const tempChat = {\n      About: chat.About,\n      Id: chat.Id,\n      Key: chat.Key,\n      Name: chat.Name,\n      NodesId: chat.NodesId,\n      Photo: chat.Photo,\n      Public: chat.Public,\n      Security: chat.Security,\n      Tag: chat.Tag,\n      Type: chat.Type,\n      Users: chat.Users,\n      Visible: chat.Visible\n    }\n    chats.push(tempChat)\n  })\n\n  return chats\n}\n\nexport function getActiveDialog(dialogs) {\n  const dialog = dialogs.find(dialog => dialog.active)\n\n  return dialog\n}\n","// eslint-disable-next-line\nexport function getFormatedUser(data) {\n  const users = []\n  data.forEach(user => {\n    const tempUser = {\n      About: user.About,\n      Birthday: user.Birthday,\n      BlackList: user.BlackList,\n      City: user.City,\n      Confirmed: user.Confirmed,\n      Contact: user.Contact,\n      ContactsPrivacy: user.ContactsPrivacy,\n      Country: user.Country,\n      Emails: user.Emails,\n      Encryption: user.Encryption,\n      Groups: user.Groups,\n      Id: user.Id,\n      Keys: user.Keys,\n      Language: user.Language,\n      NameFirst: user.NameFirst,\n      NameSecond: user.NameSecond,\n      NodeId: user.NodeId,\n      Online: user.Online,\n      Phones: user.Phones,\n      Photo: user.Photo,\n      RegistrationDate: user.RegistrationDate,\n      Security: user.Security,\n      Tag: user.Tag,\n      Visible: user.Visible\n    }\n    users.push(tempUser)\n  })\n\n  return users\n}\n\nexport function getFormatedChatsUsers(data) {\n  const users = []\n  data.forEach(user => {\n    const tempUser = {\n      Banned: user.Banned,\n      ChatId: user.ChatId,\n      Deleted: user.Deleted,\n      InviterId: user.InviterId,\n      IsMuted: user.IsMuted,\n      Joined: user.Joined,\n      UserId: user.UserId,\n      UserInfo: user.UserInfo,\n      UserRole: user.UserRole\n    }\n    users.push(tempUser)\n  })\n\n  return users\n}\n\nexport function getUserById(id, users) {\n  const foundUser = users.find(user => user.Id === id)\n  return foundUser\n}\n\nexport function getUserInitials(dialog) {\n  if (!dialog.Photo) {\n    let initials = \"\"\n\n    if (dialog.Title || dialog.ChannelName) {\n      let defaultAva = dialog.Title || dialog.ChannelName\n      defaultAva = defaultAva.split(\" \", 2)\n\n      if (defaultAva[0]) {\n        initials = defaultAva[0][0]\n      }\n      if (defaultAva[1]) {\n        initials += defaultAva[1][0]\n      }\n    } else if (dialog.NameFirst) {\n      initials = dialog.NameFirst[0]\n      if (dialog.NameSecond) {\n        initials = initials + dialog.NameSecond[0]\n      }\n    } else {\n      const secondUid = dialog.SecondUid + ''\n      initials = secondUid.substr(0, 2)\n    }\n\n    return initials\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { openDialog } from \"../actions/dialogs\"\nimport selectors from \"../selectors\"\n\nclass SidebarItem extends Component {\n  constructor() {\n    super()\n    this.state = {\n      defaultAva: \"\"\n    }\n  }\n\n  componentDidMount() {\n    // обрезаем строку с последним сообщением (не css потому что 2 строки)\n    const size = 60\n    const newsContent = this.refs.messageText\n    const newsText = newsContent.innerText\n\n    if (newsText.length > size) {\n      newsContent.innerText = newsText.slice(0, size) + \" ...\"\n    }\n\n    // добавляем инициалы в стэйт если нет аватарки\n    if (!this.props.dialog.Photo) {\n      this.setState({\n        defaultAva: selectors.getUserInitials(this.props.dialog)\n      })\n    }\n  }\n\n  openDialog() {\n    const payload = {}\n    payload.type = this.props.type\n    payload.data = this.props.dialog\n    this.props.openDialog(payload)\n  }\n\n  render() {\n    const avatarStyle = {\n      width: \"100%\",\n      height: \"100%\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center center\",\n      backgroundImage: `url(https://${this.props.node}:5000/api/Files/${this.props.dialog.Photo})`,\n      backgroundRepeat: \"no-repeat\"\n    }\n\n    // const defaultAvaBg = {\n    //   background: `hsl(${this.props.dialog.SecondUid}, 90%, 90%)`\n    // }\n\n    return (\n      <NavLink to={\"/\"} onClick={() => this.openDialog()}>\n        <div className=\"sidebar__item\">\n          <div className=\"sidebar__ava\">\n            {this.props.dialog.UnreadedCount > 0 ? (\n              <div className=\"sidebar__badge\">\n                {this.props.dialog.UnreadedCount}\n              </div>\n            ) : null}\n            <div className=\"sidebar__photo\">\n              {\n                this.props.dialog.Photo ?\n                  this.props.dialog.Photo.length > 0 ? \n                    <div style={avatarStyle} />\n                  : null\n                : \n                  <div className=\"sidebar__photo-default avatar-default\">\n                    {this.state.defaultAva}\n                  </div>\n              }\n            </div>\n          </div>\n          <div>\n            <div className=\"sidebar__name\">\n              <span>{this.props.dialog.Title || this.props.dialog.NameFirst + this.props.dialog.NameSecond || this.props.dialog.ChannelName || this.props.dialog.Name || 'Имя скрыто'}</span>\n            </div>\n            <div className=\"sidebar__message\" ref=\"messageText\">\n              {\n                this.props.dialog.PreviewText ? this.props.dialog.PreviewText :\n                this.props.dialog.AttachmentType ===  1 ? 'Файл' :\n                this.props.dialog.AttachmentType ===  2 ? 'Изображение' :\n                this.props.dialog.About ? this.props.dialog.About : null\n              }\n            </div>\n          </div>\n        </div>\n      </NavLink>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarItem)\n","/* eslint-disable */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport logo from \"../assets/logo.PNG\"\nimport { toggleDrawer } from \"../actions/ui\"\nimport { Icon } from 'antd';\n\nfunction HeadSidebar(props) {\n  return (\n    <div className=\"head-sidebar\">\n      <Icon type=\"menu\" className='menu-btn' onClick={() => props.toggleDrawer()} />\n      <div className=\"head-sidebar__logo\">\n        <img src={logo} alt=\"Y Messenger\" />\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleDrawer: () => dispatch(toggleDrawer())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadSidebar)","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Input } from \"antd\"\nimport { searchStart, searchEnd } from \"../actions/search\"\nimport socket from \"../transport/Connect\"\n\nconst { Search } = Input\n\nfunction SearchComponent(props) {\n  const [queryText, setQueryText] = useState(\"\")\n  const searchDialogs = value => {\n    // в функцию может прилетать и текст и евент\n    if (typeof value === \"object\") {\n      setQueryText(value.target.value)\n    } else if (typeof value === \"string\") {\n      setQueryText(value)\n    }\n\n    if (queryText.length) {\n      props.searchStart(queryText.toLowerCase())\n    } else if (!queryText.length) {\n      props.searchEnd()\n    }\n\n    const searchRequest = {\n      RequestType: 46,\n      SearchQuery: queryText,\n      RequestId: socket.makeId(),\n      Direction: true,\n      Type: 0\n    }\n\n    socket.send(searchRequest)\n  }\n\n  return (\n    <div className=\"search\">\n      <Search\n        placeholder=\"Поиск\"\n        value={queryText}\n        onSearch={searchDialogs}\n        onChange={searchDialogs}\n        enterButton\n      />\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.ui.search\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchStart: data => dispatch(searchStart(data)),\n    searchEnd: () => dispatch(searchEnd())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent)\n","export function searchResultReceived(searchResult) {\n  return {\n    type: \"SEARCH_RESULT_RECEIVED\",\n    searchResult\n  }\n}\n\nexport function searchStart(text) {\n  return {\n    type: \"SEARCH_START\",\n    text\n  }\n}\n\nexport function searchEnd() {\n  return {\n    type: \"SEARCH_END\"\n  }\n}\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport SidebarItem from \"./SidebarItem\"\nimport HeadSidebar from \"./HeadSidebar\"\nimport Search from \"./Search\"\nimport { openDialog } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\n\nfunction Sidebar(props) {\n  const [localFoundDialogs, setLocalFoundDialogs] = useState([])\n\n  useEffect(() => {\n    if (props.search) {\n      const searchDialogs = props.dialogs.filter(dialog => {\n        if (!dialog.fake) {\n          if (dialog.Title) {\n            return dialog.Title.toLowerCase().indexOf(props.search) >= 0\n          }\n        }\n      })\n      setLocalFoundDialogs(searchDialogs)\n    } else {\n      setLocalFoundDialogs(props.dialogs)\n    }\n  }, [props.search, props.dialogs])\n\n  const showSidebarItem = () => {\n    return localFoundDialogs.map(dialog => {\n      if(dialog && !dialog.fake){\n        return <SidebarItem dialog={dialog} key={socket.makeId()} type='dialog' />\n      }\n    })\n  }\n\n  const showSearchResultChannels = () => {\n    if (props.searchResult.channels) {\n      return props.searchResult.channels.map((dialog, i) => {\n        if(dialog){\n          if (i === 0) {\n            return (\n              <div key={socket.makeId()}>\n                <div className=\"sidebar__title\">Каналы:</div>\n                <SidebarItem dialog={dialog} type=\"channel\" />\n              </div>\n            )\n          } else {\n            return (\n              <SidebarItem dialog={dialog} type=\"channel\" key={socket.makeId()} />\n            )\n          }\n        }\n      })\n    }\n  }\n\n  const showSearchResultChats = () => {\n    if (props.searchResult.chats) {\n      return props.searchResult.chats.map((dialog, i) => {\n        if(dialog){\n          if (i === 0) {\n            return (\n              <div key={socket.makeId()}>\n                <div className=\"sidebar__title\">Чаты:</div>\n                <SidebarItem dialog={dialog} type=\"chat\" />\n              </div>\n            )\n          } else {\n            return (\n              <SidebarItem dialog={dialog} type=\"chat\" key={socket.makeId()} />\n            )\n          }\n        }\n      })\n    }\n  }\n\n  const showSearchResultUsers = () => {\n    if (props.searchResult.users) {\n      return props.searchResult.users.map((dialog, i) => {\n        if(dialog){\n          if (i === 0) {\n            return (\n              <div key={socket.makeId()}>\n                <div className=\"sidebar__title\">Пользователи:</div>\n                <SidebarItem dialog={dialog} type=\"user\" />\n              </div>\n            )\n          } else {\n            return (\n              <SidebarItem dialog={dialog} type=\"user\" key={socket.makeId()} />\n            )\n          }\n        }\n      })\n    }\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <HeadSidebar />\n      <Search />\n      <div className=\"sidebar-viewport\">\n        {showSidebarItem()}\n        {props.searchResult ? showSearchResultUsers() : null}\n        {props.searchResult ? showSearchResultChats() : null}\n        {props.searchResult ? showSearchResultChannels() : null}\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    search: state.ui.search,\n    searchResult: state.searchResult\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport ReactTimeAgo from \"react-time-ago\"\nimport JavascriptTimeAgo from \"javascript-time-ago\"\nimport ru from \"javascript-time-ago/locale/ru\"\nimport { Icon } from \"antd\"\nimport socket from \"../transport/Connect\"\nimport { openProfile } from \"../actions/ui\"\nimport { closeDialog } from \"../actions/dialogs\"\nimport selectors from \"../selectors\"\n\nJavascriptTimeAgo.locale(ru)\n\nfunction HeadDialog(props) {\n  const [dialog, setDialog] = useState(null)\n  const [defaultAva, setDefaultAva] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [windowWidth, setWindowWidth] = useState(document.body.clientWidth)\n\n  useEffect(() => {}, [windowWidth])\n\n  window.onresize = () => {\n    setWindowWidth(document.body.clientWidth)\n  }\n\n  useEffect(() => {\n    if (props.users && dialog) {\n      const user = props.users.find(user => user.Id === dialog.SecondUid)\n      setUser(user)\n    }\n  }, [props.users, dialog])\n\n  useEffect(() => {\n    props.dialogs.forEach(dialog => {\n      if (dialog.active) {\n        setDialog(dialog)\n      }\n    })\n  }, [props.dialogs])\n\n  useEffect(() => {\n    if (dialog) {\n      // добавляем инициалы в стэйт если нет аватарки\n      if (!dialog.Photo) {\n        setDefaultAva(selectors.getUserInitials(dialog))\n      }\n    }\n  }, [dialog])\n\n  const logout = () => {\n    const logout = {\n      Full: false,\n      AccessToken: localStorage.getItem(\"AccessToken\"),\n      RequestType: 34,\n      RequestId: socket.makeId(),\n      Type: 0\n    }\n\n    socket.send(logout)\n\n    localStorage.removeItem(\"AccessToken\")\n    localStorage.removeItem(\"FileAccessToken\")\n    localStorage.removeItem(\"RefreshToken\")\n    localStorage.removeItem(\"User\")\n\n    window.location.replace(\"/\")\n  }\n\n  const handleOpenProfile = () => {\n    props.openProfile(dialog)\n  }\n\n  return (\n    <div className=\"head-dialog\">\n      {windowWidth <= 675 && selectors.getActiveDialog(props.dialogs) ? (\n        <div className=\"head-dialog__back\" onClick={props.closeDialog} >\n          <Icon type=\"left\" />\n        </div>\n      ) : null}\n      <div className=\"head-dialog__user\" onClick={handleOpenProfile}>\n        <div className=\"head-dialog__ava\">\n          {dialog ? (\n            dialog.Photo ? (\n              <div\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center center\",\n                  backgroundImage: `url(https://${props.node}:5000/api/Files/${dialog.Photo})`,\n                  backgroundRepeat: \"no-repeat\"\n                }}\n              />\n            ) : (\n              <div className=\"head-dialog__photo-default avatar-default\">{defaultAva}</div>\n            )\n          ) : null}\n        </div>\n        <div>\n          <div className=\"head-dialog__name\">{dialog ? dialog.Title || dialog.ChannelName || 'Имя скрыто' : null}</div>\n          <div className=\"head-dialog__status\">\n            {user ?\n              user.Online ? \n                <ReactTimeAgo date={user.Online * 1000} locale=\"ru\" />\n              : null\n            : null}\n          </div>\n        </div>\n      </div>\n      {/* <div className='head__lock'>\n        <LockIcon />\n      </div> */}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    users: state.users,\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openProfile: data => dispatch(openProfile(data)),\n    closeDialog: () => dispatch(closeDialog())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadDialog)\n","/* eslint-disable */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport selectors from \"../selectors\"\n\nfunction Avatar(props) {\n  const avatarStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    backgroundImage: `url(https://${props.node}:5000/api/Files/${props.user.Photo})`,\n    backgroundRepeat: \"no-repeat\",\n    borderRadius: \"100%\"\n  }\n\n  return (\n    <div className=\"avatar\">\n      {\n        props.user.Photo ? \n          <div style={avatarStyle}></div>\n        :\n          <div className=\"avatar-default\">\n            {selectors.getUserInitials(props.user)}\n          </div>\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Avatar)\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"check\"\n}, React.createElement(\"polygon\", {\n  points: \"142.8,323.85 35.7,216.75 0,252.45 142.8,395.25 448.8,89.25 413.1,53.55  \"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgTickIcon = function SvgTickIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"448.8px\",\n    height: \"448.8px\",\n    viewBox: \"0 0 448.8 448.8\",\n    style: {\n      enableBackground: \"new 0 0 448.8 448.8\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTickIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/tick_icon.06277842.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"done-all\"\n}, React.createElement(\"path\", {\n  d: \"M448.8,161.925l-35.7-35.7l-160.65,160.65l35.7,35.7L448.8,161.925z M555.899,126.225l-267.75,270.3l-107.1-107.1 l-35.7,35.7l142.8,142.8l306-306L555.899,126.225z M0,325.125l142.8,142.8l35.7-35.7l-142.8-142.8L0,325.125z\"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgDoubleTickIcon = function SvgDoubleTickIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"594.149px\",\n    height: \"594.149px\",\n    viewBox: \"0 0 594.149 594.149\",\n    style: {\n      enableBackground: \"new 0 0 594.149 594.149\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDoubleTickIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/double_tick_icon.7319bcfe.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { Modal, Icon } from \"antd\"\nimport { connect } from \"react-redux\"\nimport { NavLink, Redirect } from \"react-router-dom\"\nimport selectors from \"../selectors\"\nimport { forwardingMessage, openDialog } from \"../actions/dialogs\"\nimport Avatar from \"./Avatar\"\nimport { ReactComponent as TickIcon } from \"../assets/tick_icon.svg\"\nimport { ReactComponent as DoubleTickIcon } from \"../assets/double_tick_icon.svg\"\n\nfunction Message(props) {\n  const [visible, setVisible] = useState(false)\n  const [messageTime, setMessageTime] = useState(\"\")\n  const [isContextMenuVisible, setSsContextMenuVisible] = useState(false)\n  const [redirect, setRedirect] = useState(false)\n  const user = selectors.getUserById(props.message.SenderId, props.users) || {}\n\n  useEffect(() => {\n    if (props.message) {\n      // формируем время сообщения\n      const timestamp = new Date(props.message.SendingTime * 1000)\n      const date = new Date()\n      date.setTime(timestamp)\n\n      let hour = `${date.getHours()}`\n      let minutes = `${date.getMinutes()}`\n\n      if (hour.length === 1) {\n        hour = `0${hour}`\n      }\n      if (minutes.length === 1) {\n        minutes = `0${minutes}`\n      }\n\n      setMessageTime(`${hour}:${minutes}`)\n    }\n  }, [props.message])\n\n  const setLinks = text => {\n    let str = text\n    let reg = false\n    if (str) {\n      reg = str.match(/(http|https|ftp|ftps)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(\\/\\S*)?/g)\n    }\n    let k = 0\n    // console.log(reg);\n\t\tfor (k in reg){\n      // console.log(reg[k]);\n\t\t\tstr = str.replace(reg[k], ' <a href=\"' + reg[k] + '\" target=\"_blank\"> ' + reg[k] + ' </a> ')\n    }\n\n    return str\n    \n    // let mes_block = this.refs.textMessage;\n    // if (mes_block) {\n    //   mes_block.innerHTML = str\n    // }\n  }\n\n  function getForwardingUser(userId) {\n    const forwardingUser = props.users.find(user => user.Id === userId)\n    if (forwardingUser) {\n      return ` ${forwardingUser.NameFirst} ${forwardingUser.NameSecond}`\n    }\n  }\n\n  function showMessage(message) {\n    if (message.Attachments) {\n      if (message.Attachments.length) {\n        // СООБЩЕНИЯ С ВЛОЖЕНИЯМИ\n        // сообщения с изображением\n        if (message.Attachments[0].Type === 2) {\n          return (\n            <div className=\"message__img\" onClick={() => setVisible(true)}>\n              <img\n                src={`https://${props.node}:5000/api/Files/` + message.Attachments[0].Payload.FileId}\n                alt=\"\"\n              />\n            </div>\n          )\n        } else if (message.Attachments[0].Type === 1) {\n          // сообщение с файлом\n          if (message.Attachments[0].Payload) {\n            return (\n              <div>\n                <Icon type=\"download\" className=\"download-icon\" />\n                <a href={`https://${props.node}:5000/api/Files/` + message.Attachments[0].Payload.FileId} download>\n                  {message.Attachments[0].Payload.Filename}\n                </a>\n                <span dangerouslySetInnerHTML={{__html: setLinks(message.Text)}}></span>\n              </div>\n            )\n          }\n        } else if (message.Attachments[0].Type === 5) {\n          // Пересланное сообщение\n          if (message.Attachments[0].Payload.length > 0) {\n            return (\n              <div className=\"forwarding_message\">\n                Пересланное сообщение от\n                <NavLink to=\"/\" onClick={() => openDialog()}>\n                  {getForwardingUser(message.Attachments[0].Payload[0].SenderId)}\n                </NavLink>\n                <div dangerouslySetInnerHTML={{__html: setLinks(message.Attachments[0].Payload[0].Text)}} className=\"forward-message-text\"></div>\n                {\n                  message.Text ?\n                    <div dangerouslySetInnerHTML={{__html: setLinks(message.Text)}}></div>\n                  : null\n                }\n              </div>\n            )\n          } else {\n            return (\n              <div className=\"forwarding_message\">\n                Пересланное сообщение от:\n                <div>Пересланное сообщение удалено</div>\n              </div>\n            )\n          }\n        } else {\n          // обычное сообщение с текстом\n          return <div style={{fontStyle: \"italic\"}}>*неподдерживаемый тип сообщения*</div>\n        }\n      } else {\n        // обычное сообщение с текстом\n        return message.Text ? (\n          <div dangerouslySetInnerHTML={{__html: setLinks(message.Text)}}></div>\n        ) : null\n      }\n    } else {\n      // обычное сообщение с текстом\n      return message.Text ? (\n        <div>{message.Text}</div>\n      ) : null\n    }\n  }\n\n  function showMessageMenu() {\n    setSsContextMenuVisible(!isContextMenuVisible)\n  }\n\n  const handleReplyToMessage = () => {\n    props.forwardingMessage(props.message)\n  }\n\n  const handleForwardMessage = () => {\n    props.forwardingMessage(props.message)\n    setRedirect(true)\n  }\n\n  const openDialog = () => {\n    const conversation = props.dialogs.find(dialog => dialog.ConversationId === props.message.Attachments[0].Payload[0].ConversationId && dialog.ConversationType === props.message.Attachments[0].Payload[0].ConversationType)\n    if (conversation) {\n      const payload = {}\n      payload.type = \"dialog\"\n      payload.data = conversation\n      props.openDialog(payload)\n    }\n  }\n\n  if (redirect) {\n    return <Redirect to=\"/\" />\n  }\n  if (user && props.message) {\n    return (\n      <div\n        className={\n          user.currentUser\n            ? \"message message-out\"\n            : \"message message-in\"\n        }\n        id={props.message.GlobalId}\n        onClick={showMessageMenu}\n        style={props.message && isContextMenuVisible ? { background: \"#ebf5ff\" } : null }\n      >\n        <div className=\"wrap-message-content\">\n          {!user.currentUser && props.message.ConversationType !== 3 ? <Avatar user={user} /> : null}\n          {\n            user.currentUser && props.message.Read ?\n              <DoubleTickIcon className='message__read' />\n            : user.currentUser && !props.message.Read ? \n              <TickIcon className='message__read' />\n            : null\n          }\n          <div className=\"message__content\">\n            {\n              !user.currentUser ?\n                <div className=\"message__name\">\n                  {user.NameFirst ? user.NameFirst + ' ' : null}\n                  {user.NameSecond ? user.NameSecond : null}\n                </div>\n              : null\n            }          \n            {showMessage(props.message)}\n          </div>\n          <div className=\"message__time\">{messageTime}</div>\n        </div>\n        {props.message.Attachments && props.message.Attachments[0] ? (\n          <Modal\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            footer={null}\n            maskClosable\n          >\n            <img\n              className=\"popup__img\"\n              src={`https://${props.node}:5000/api/Files/${props.message.Attachments[0].Payload.FileId}`}\n              alt=\"\"\n            />\n          </Modal>\n        ) : null}\n        {props.message && isContextMenuVisible ? (\n          <div className=\"message-menu\">\n            <ul>\n              <li onClick={handleReplyToMessage}>Ответить</li>\n              <li onClick={handleForwardMessage}>Переслать</li>\n            </ul>\n          </div>\n        ) : null}\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users,\n    dialogs: state.dialogs,\n    forwardMessage: state.forwardMessage,\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    forwardingMessage: message => dispatch(forwardingMessage(message)),\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Message)\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(-198)\",\n  id: \"g69\"\n}, React.createElement(\"g\", {\n  id: \"_x33__22_\"\n}, React.createElement(\"g\", {\n  id: \"g66\"\n}, React.createElement(\"path\", {\n  id: \"path64\",\n  d: \"m 544.5,99 v 495 c 0,82.021 -66.479,148.5 -148.5,148.5 -82.021,0 -148.5,-66.479 -148.5,-148.5 V 148.5 c 0,-54.673 44.327,-99 99,-99 54.673,0 99,44.327 99,99 V 594 c 0,27.349 -22.176,49.5 -49.5,49.5 -27.349,0 -49.5,-22.151 -49.5,-49.5 V 198 H 297 v 396 c 0,54.673 44.327,99 99,99 54.673,0 99,-44.327 99,-99 V 148.5 C 495,66.479 428.521,0 346.5,0 264.479,0 198,66.479 198,148.5 V 618.75 C 210.202,716.389 295.045,792 396,792 496.955,792 581.798,716.389 594,618.75 V 99 Z\"\n}))));\n\nvar SvgPaperclipIcon = function SvgPaperclipIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlSpace: \"preserve\",\n    viewBox: \"0 0 396 792\",\n    height: 0,\n    width: 0,\n    y: \"0px\",\n    x: \"0px\",\n    id: \"Capa_1\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPaperclipIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/paperclip_icon.b4a5561e.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g95\"\n}, React.createElement(\"g\", {\n  id: \"send\"\n}, React.createElement(\"polygon\", {\n  id: \"polygon92\",\n  points: \"0,38.25 0,216.75 382.5,267.75 0,318.75 0,497.25 535.5,267.75 \"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g97\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g99\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g101\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g103\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g105\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g107\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g109\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g111\"\n});\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g113\"\n});\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g115\"\n});\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g117\"\n});\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g119\"\n});\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g121\"\n});\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g123\"\n});\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g125\"\n});\n\nvar SvgSendButtonIcon = function SvgSendButtonIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlSpace: \"preserve\",\n    viewBox: \"0 0 535.5 459\",\n    height: 0,\n    width: 0,\n    y: \"0px\",\n    x: \"0px\",\n    id: \"Capa_1\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSendButtonIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/send_button_icon.56dc055f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { ReactComponent as Paperclip } from \"../assets/paperclip_icon.svg\"\nimport { ReactComponent as SendBtn } from \"../assets/send_button_icon.svg\"\nimport { forwardingMessage } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\nimport { Upload, Icon } from \"antd\"\nimport axios from 'axios'\n\nfunction NewMessageField(props) {\n  const [messageText, setMessageText] = useState(\"\")\n  const [imgLoading, setImgLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(null)\n  const [attachmentsType, setAttachmentsType] = useState(null)\n\n  useEffect(() => {\n    if (imageUrl) {\n      sendMessage()\n    }\n  }, [imageUrl])\n\n  const sendMessage = () => {\n    if (props.forwardMessage) {\n      // отправка пересылаемого сообщения или ответ на сообщение\n      const data = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: messageText,\n            Attachments: [\n              {\n                Type: 5,\n                Payload: {\n                  MessagesGlobalId: [props.forwardMessage.GlobalId],\n                  ConversationId: props.forwardMessage.ConversationId,\n                  ConversationType: props.forwardMessage.ConversationType\n                }\n              }\n            ]\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(data)\n    } else if (imageUrl) {\n      const data = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: messageText,\n            Attachments: [\n              {\n                Type: attachmentsType,\n                Hash: null,\n                MessageId: 0,\n                Payload: imageUrl,\n                NodesId: null\n              }\n            ],\n            GlobalId: null\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(data)\n    } else {\n      // отправка обычного сообщения без вложения\n      const data = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: messageText,\n            Attachments: null,\n            GlobalId: null\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      console.log(props)\n\n      socket.send(data)\n    }\n\n    setMessageText(\"\")\n\n    if(props.forwardMessage){\n      props.forwardingMessage(false)\n    }\n  }\n\n  const handleOnKeyDown = event => {\n    if (event.keyCode === 13) {\n      sendMessage()\n    }\n  }\n\n  const handleUploadImage = data => {\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', data.file)\n\n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            setImgLoading(false)\n            setImageUrl(res.data.File.FileId)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          console.log(err)\n        }\n    )\n  }\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\"\n    if (isJpgOrPng) {\n      setAttachmentsType(2)\n    } else {\n      setAttachmentsType(1)\n    }\n    return isJpgOrPng\n  }\n\n  const handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      setImgLoading(true)\n      return\n    }\n  }\n\n  return (\n    <div className=\"new-message\">\n      <Upload\n        showUploadList={false}\n        customRequest={file => handleUploadImage(file)}\n        beforeUpload={beforeUpload}\n        onChange={handleChange}\n      >\n        {\n          imgLoading ? \n            <Icon type=\"loading\" className=\"loading-icon\" />\n          :\n            <Paperclip className=\"new-message__attach\"/>\n        }\n      </Upload>\n      <input\n        type=\"text\"\n        className=\"new-message__inp\"\n        placeholder=\"Введите сообщение\"\n        value={messageText}\n        onChange={e => {\n          setMessageText(e.target.value)\n        }}\n        onKeyDown={handleOnKeyDown}\n      />\n      <SendBtn\n        onClick={() => {\n          sendMessage()\n        }}\n        className=\"new-message__send\"\n      />\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.users.find(user => user.currentUser === true),\n    dialogs: state.dialog,\n    forwardMessage: state.forwardMessage,\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    forwardingMessage: message => dispatch(forwardingMessage(message))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMessageField)\n","/* eslint-disable */\nimport React, { useState, useEffect, useRef } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button } from 'antd'\nimport Message from \"./Message\"\nimport NewMessageField from \"./NewMessageField\"\nimport { openDialog } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\nimport axios from 'axios'\nimport { ui } from \"../reducers/ui\"\n\nfunction Dialog(props) {\n  const [messages, setMessages] = useState([])\n  const [dialog, setDialog] = useState(null)\n  const [messagesLoading, setMessagesLoading] = useState(false)\n  const [height1, setHeight1] = useState(0)\n  const [height2, setHeight2] = useState(0)\n  const mesViewport = useRef(null)\n\n  // функция для получения отправитля в сообщениях и в пересланных сообщениях\n  const getUsers = mess => {\n    const users = []\n    mess.forEach(message => {\n      if (message.Attachments) {\n        if (message.Attachments.length) {\n          if (message.Attachments[0].Type === 5) {\n            if (message.Attachments[0].Payload.length > 0) {\n              const foundUser = props.users.find(\n                user => user.Id === message.Attachments[0].Payload[0].SenderId\n              )\n\n              if (!foundUser) {\n                if(message.Attachments[0].Payload[0].SenderId){\n                  users.push(message.Attachments[0].Payload[0].SenderId)\n                }\n              }\n            }\n          }\n        }\n      }\n      const foundUser = props.users.find(user => user.Id === message.SenderId)\n\n      if (!foundUser) {\n        if(message.SenderId){\n          users.push(message.SenderId)\n        }\n      }\n    })\n    const uniqueUsers = [...new Set(users.map(n => n))]\n\n    if (uniqueUsers.length) {\n      const requestUsers = {\n        UsersId: [...uniqueUsers],\n        RequestType: 28,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(requestUsers)\n    }\n  }\n\n  useEffect(() => {\n    if(props.dialog){\n      setDialog(props.dialog)\n\n      // отмечаем сообщения прочитанными\n      if (props.appFocus) {\n        if (props.dialog.LastMessageId) {\n          const data = {\n            MessagesId: [props.dialog.LastMessageId],\n            ConversationType: props.dialog.ConversationType,\n            ConversationId: props.dialog.ConversationId,\n            RequestId: socket.makeId(),\n            RequestType: 35,\n            Type: 0\n          }\n  \n          socket.send(data)\n        }\n      }\n\n      // подгрузка сообщений по скроллу\n      mesViewport.current.onscroll = () => {\n        if (mesViewport.current.scrollTop === 0) {\n          setHeight1(mesViewport.current.scrollHeight)\n          setMessagesLoading(true)\n\n          const messagesRequest = {\n            ConversationType: props.dialog.ConversationType,\n            ConversationId: props.dialog.ConversationId,\n            NavigationMessageId: messages[0].GlobalId,\n            MessagesId: null,\n            RequestType: 25,\n            RequestId: socket.makeId(),\n            Direction: true,\n            Type: 0\n          }\n\n          socket.send(messagesRequest)\n        }\n      }\n    }\n    // setHeight2(mesViewport.current.scrollHeight)\n  }, [messages, props.dialog])\n\n  useEffect(() => {\n    // console.log(height2)\n  }, [height1, height2])\n\n  useEffect(() => {\n    if (dialog) {\n      const mess = props.messages.filter(message => message.ConversationId === parseInt(dialog.ConversationId || dialog.ChannelId) && message.ConversationType === dialog.ConversationType)\n      setMessages(mess)\n\n      setHeight2(mesViewport.current.scrollHeight)\n      setTimeout(() => {\n        if (mesViewport.current && !messagesLoading) {\n          mesViewport.current.scrollTop = 450000\n        } else {\n          // console.log('скролим на середину')\n          // console.log(height1, height2)\n          mesViewport.current.scrollBottom = height1 - height2\n        }\n      }, 10)\n\n      getUsers(mess)\n    }\n    setHeight2(mesViewport.current.scrollHeight)\n  }, [dialog, props.messages])\n\n  const joinToChannel = () => {\n    const data = {\n      ChannelsId: [dialog.ChannelId],\n      UsersId: [props.user.Id],\n      RequestType: 48,\n      RequestId: socket.makeId(),\n      Type: 0\n    }\n\n    socket.send(data)\n  }\n\n  const fileOver = e => {\n    e.preventDefault()\n    mesViewport.current.classList.add('file-over')\n  }\n\n  const fileLeave = e => {\n    e.preventDefault()\n    mesViewport.current.classList.remove('file-over')\n  }\n\n  const fileDrop = (e) => {\n    e.preventDefault()\n    mesViewport.current.classList.remove('file-over')\n\n    const isJpgOrPng = e.dataTransfer.files[0].type === \"image/jpeg\" || e.dataTransfer.files[0].type === \"image/png\"\n    let attachmentType = null\n    if (isJpgOrPng) {\n      attachmentType = 2\n    } else {\n      attachmentType = 1\n    }\n\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', e.dataTransfer.files[0])\n\n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            // setImgLoading(false)\n            const data = {\n              Messages: [\n                {\n                  Id: 0,\n                  SendingTime: \"\",\n                  SenderId: props.user.Id,\n                  ReceiverId: dialog.SecondUid,\n                  ConversationId: dialog.ConversationId,\n                  ConversationType: dialog.ConversationType,\n                  Read: false,\n                  NodesId: null,\n                  ReplyTo: null,\n                  Text: \"\",\n                  Attachments: [\n                    {\n                      Type: attachmentType,\n                      Hash: null,\n                      MessageId: 0,\n                      Payload: res.data.File.FileId,\n                      NodesId: null\n                    }\n                  ],\n                  GlobalId: null\n                }\n              ],\n              RequestType: 39,\n              RequestId: socket.makeId(),\n              Type: 0\n            }\n      \n            socket.send(data)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          console.log(err)\n        }\n    )\n  }\n\n  return (\n    <div className=\"dialog\">\n      <div \n        className=\"dialog__messages-viewport\"\n        ref={mesViewport}\n        onDragOver={(e) => fileOver(e)}\n        onDragLeave={() => fileLeave(e)}\n        onDrop={(e) => fileDrop(e)}\n      >\n        <div className=\"dialog__messages\">\n          {dialog\n            ? messages.map(message => {\n                return <Message key={socket.makeId()} message={message} />\n              })\n            : null}\n        </div>\n      </div>\n      {props.forwardMessage ? (\n        <div className=\"reply-message\">\n          Ответ на:\n          {` ${props.forwardMessage.Text}`}\n        </div>\n      ) : null}\n      {\n        props.dialog ? \n          props.dialog.type === \"channel\" && props.dialog.fake ? \n            <Button type=\"primary\" size='large' onClick={joinToChannel}>Вступить</Button> \n          : props.dialog.ConversationType !== 3 ?\n            <NewMessageField {...props} dialog={dialog} />\n          : null\n        : null\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    messages: state.messages,\n    forwardMessage: state.forwardMessage,\n    users: state.users,\n    user: state.users.find(user => user.currentUser === true),\n    node: state.node.activeNode.Domains[0],\n    appFocus: state.ui.appFocus,\n    requestsId: state.ui.requestsId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dialog)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport socket from \"../transport/Connect\"\nimport HeadDialog from \"./HeadDialog\"\nimport Dialog from \"./Dialog\"\nimport selectors from \"../selectors\"\nimport { openDialog } from \"../actions/dialogs\"\n\nfunction DialogContainer(props) {\n  // const [messages, setMessages] = useState([]);\n  const [dialog, setDialog] = useState(null)\n\n  useEffect(() => {\n    props.dialogs.forEach(dialog => {\n      if (dialog.active) {\n        setDialog(dialog)\n      }\n    })\n  }, [props.dialogs])\n\n  useEffect(() => {\n    // if (props.messages) {\n    //    props.messages.map(message => {\n    //       if (message.ConversationId === dialogId) {\n    //          // console.log(messages);\n    //          let mess = messages;\n    //          mess.push(message);\n    //          // console.log(mess);\n    //          setMessages(messages.push(message));\n    //       }\n    //    });\n    // }\n  }, [props.messages])\n\n  useEffect(() => {\n    if (dialog) {\n      // console.log(dialog)\n      // console.log(dialog.messagesRecieved)\n\n      // если для этого диалога сообщения еще не запрашивались, то запрашиваем\n      if (!dialog.messagesRecieved) {\n        // запрос на получение сообщений\n        const data = {\n          ConversationType: dialog.type === \"channel\" ? 3 : dialog.ConversationType,\n          ConversationId: dialog.ConversationId ? dialog.ConversationId : dialog.ChannelId,\n          NavigationMessageTime: null,\n          MessageId: null,\n          RequestType: 25,\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n\n        socket.send(data)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dialog])\n\n  return (\n    <div className=\"dialog-container\" style={selectors.getActiveDialog(props.dialogs) ? {zIndex: 2} : null}>\n      <HeadDialog {...props} />\n      {selectors.getActiveDialog(props.dialogs) ? <Dialog dialog={dialog} {...props} /> : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    messages: state.messages\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogContainer)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { NavLink } from \"react-router-dom\"\nimport { Modal } from \"antd\"\nimport { openProfile } from \"../actions/ui\"\nimport { openDialog } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\nimport selectors from \"../selectors\"\n\nfunction ProfileModal(props) {\n  const [visible, setVisible] = useState(false)\n  const [profile, setProfile] = useState(null)\n  const [prevProfile, setPrevProfile] = useState(null)\n\n  useEffect(() => {\n    if(props.profile) {\n      if(props.profile.ConversationType === 1){\n        const user = selectors.getUserById(props.profile.SecondUid, props.users)\n        if (user) {\n          setProfile(user)\n          setVisible(true)\n        }\n      } else if (props.profile.NameFirst) {\n        setProfile(props.profile)\n        setVisible(true)\n      } else if (props.profile.Users) {\n        setProfile(props.profile)\n        setVisible(true)\n      } else if (props.profile.ConversationType === 2){\n        const getChatInfo = {\n          RequestType: 45,\n          ChatsId: [props.profile.ConversationId],\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n    \n        socket.send(getChatInfo)\n      }\n    }\n  }, [props.profile])\n\n  useEffect(() => {\n    if (props.chats.length) {\n      setProfile(props.chats[0])\n      setVisible(true)\n\n      // запрашиваем недостающих юзеров для отображения в профиле\n      const undefinedUsers = []\n      props.chats[0].Users.map(user => {\n        const foundUser = selectors.getUserById(user.UserId, props.users)\n        if(!foundUser){\n          undefinedUsers.push(user.UserId)\n        }\n      })\n      if(undefinedUsers.length){\n        const requestUsers = {\n          UsersId: [...undefinedUsers],\n          RequestType: 28,\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n\n        socket.send(requestUsers)\n      }\n    }\n  }, [props.chats])\n\n  const openProfile = data => {\n    setPrevProfile(profile)\n    props.openProfile(data)\n  }\n\n  const showUsers = () => {\n    return props.chats[0].Users.map(user => {\n      const foundUser = selectors.getUserById(user.UserId, props.users)\n      if(foundUser){\n        let name = null\n        if (foundUser.NameFirst) {\n          name = foundUser.NameFirst\n        }\n        if (foundUser.NameSecond) {\n          name = name + ' ' + foundUser.NameSecond\n        }\n        return (\n          <div key={foundUser.Id} className='profile__info_user' onClick={() => {openProfile(foundUser)}}>\n            {\n              foundUser.Photo ? \n                <div\n                  style={{\n                    width: \"50px\",\n                    height: \"50px\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center center\",\n                    backgroundImage: `url(https://${props.node}:5000/api/Files/${foundUser.Photo})`,\n                    backgroundRepeat: \"no-repeat\",\n                    borderRadius: 100,\n                    margin: '0 auto',\n                    marginTop: \"10px\"\n                  }}\n                ></div>\n              : \n              <div className='profile__info_ava'>{selectors.getUserInitials(foundUser)}</div> \n            }\n            {name ? name : 'Имя скрыто'}\n          </div>\n        )\n      }\n    })\n  }\n\n  const handleCancelProfile = () => {\n    setVisible(false)\n    props.openProfile(null)\n  }\n\n  const handleOpenDialog = () => {\n    let payload = {}\n    payload.data = props.profile\n    if (props.profile.type === \"dialog\") {\n      payload.type = \"dialog\"\n    } else {\n      payload.type = \"user\"\n    }\n    props.openDialog(payload)\n    handleCancelProfile()\n  }\n\n  const handleBackProfile = () => {\n    props.openProfile(prevProfile)\n    setPrevProfile(null)\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={handleCancelProfile}\n      footer={null}\n      maskClosable\n    >\n      {\n        profile ? \n          <div className='profile'>\n            {\n              prevProfile ? <div onClick={handleBackProfile}>Назад</div> : null\n            }\n            {\n              profile.Photo ? \n                <div\n                  className='profile__ava'\n                  style={{\n                    width: \"100px\",\n                    height: \"100px\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center center\",\n                    backgroundImage: `url(https://${props.node}:5000/api/Files/${profile.Photo})`,\n                    backgroundRepeat: \"no-repeat\",\n                    borderRadius: 100,\n                    margin: '0 auto'\n                  }}\n                ></div>\n              : null \n            }\n            {\n              profile.Name ?\n                <div className='profile__name'>{profile.Name}</div>\n              :\n                <div className='profile__name'>\n                  {profile.NameFirst ? profile.NameFirst  : null}\n                  {' '}\n                  {profile.NameSecond ? profile.NameSecond : null}\n                </div>\n            }\n            {\n              profile.Phones ? \n                profile.Phones.length > 0 ?\n                  <div className='profile__info'>\n                    <div className='profile__info_name'>Телефон</div>\n                    <div className='profile__info_value'>{profile.Phones[0].FullNumber}</div>\n                  </div>\n                : null\n              : null\n            }\n            {\n              profile.Emails ? \n                <div className='profile__info'>\n                  <div className='profile__info_name'>Email</div>\n                  <div className='profile__info_value'><a href={`mailto:${profile.Emails[0]}`}>{profile.Emails[0]}</a></div>\n                </div>\n              : null\n            }\n            {\n              profile.About ? \n                <div className='profile__info'>\n                  <div className='profile__info_name'>О себе</div>\n                  <div className='profile__info_value'>{profile.About}</div>\n                </div>\n              : null\n            }\n            {\n              profile.Users ? \n                <div className='profile__info'>\n                  <div className='profile__info_name'>Участники</div>\n                  <div className='profile__info_users'>{showUsers()}</div>\n                </div>\n              : null\n            }\n            {\n              props.profile ? \n                <NavLink\n                  to={\"/\"}\n                  onClick={handleOpenDialog}\n                >\n                  <div className='profile__open_chat'>Открыть чат</div>\n                </NavLink>\n              : null\n            }\n          </div>\n        : null\n      }\n      \n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.ui.profile,\n    users: state.users,\n    chats: state.chats,\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openProfile: user => dispatch(openProfile(user)),\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileModal)\n","/* eslint-disable */\nimport React, {useState} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Form, Input, Switch, Divider, Upload, Icon, message, Button } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport socket from \"../transport/Connect\"\nimport Avatar from \"../components/Avatar\"\nimport axios from 'axios'\n\nfunction CreateChatModal(props) {\n  const [chatName, setChatName] = useState(null)\n  const [nameError, setNameError] = useState(false)\n  const [chatPrivate, setChatPrivate] = useState(false)\n  const [chatChannel, setChatChannel] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(null)\n  const [usersIDs, setUsersIds] = useState([])\n  const [showUsers, setShowUsers] = useState(false)\n\n  const handleSetChatName = value => {\n    setChatName(value)\n    setNameError(false)\n    if (value.length < 1) {\n      setNameError(true)\n    }\n  }\n\n  const handleCreateChat = () => {\n    if (!chatName) {\n      setNameError(true)\n    } else {\n      const users = usersIDs.map(userId => {\n        return {userId}\n      })\n      const newChat = {\n        Chats: [\n          {\n            Id: 0,\n            Name: chatName,\n            Tag: 0,\n            Photo: imageUrl,\n            About: null,\n            NodesId: null,\n            Visible: null,\n            Public: null,\n            Security: null,\n            Type: 1,\n            Users: users\n          }\n        ],\n        RequestId: socket.makeId(),\n        RequestType: 36,\n        Type: 0\n       }\n      \n      socket.send(newChat)\n\n      props.toggleModal(\"createChatModal\")\n    }\n  }\n\n  const handleUploadImage = data => {\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', data.file)\n  \n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            setLoading(false)\n            setImageUrl(res.data.File.FileId)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          console.log(err)\n        }\n    )\n  }\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n      message.error('Поддерживается только загрузка JPG/PNG файлов!')\n    }\n    return isJpgOrPng\n  }\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true)\n      return\n    }\n  }\n\n  const addContactToChat = userId => {\n    let users = [...usersIDs]\n    if (usersIDs.includes(userId)) {\n      let foudnUserIndex = users.indexOf(userId)\n      users.splice(foudnUserIndex, 1)\n      setUsersIds(users)\n    } else {\n      users.push(userId)\n      setUsersIds(users)\n    }\n  }\n\n  const showContacts = () => {\n    return props.contacts.map(user => {\n      if(user){\n        let name = null\n        if (user.ContactUser.NameFirst) {\n          name = user.ContactUser.NameFirst\n        }\n        if (user.ContactUser.NameSecond) {\n          name = name + ' ' + user.ContactUser.NameSecond\n        }\n        return (\n          <div key={user.ContactId} className={usersIDs.includes(user.ContactUserId) ? 'contacts contacts-active' : 'contacts'} onClick={() => {addContactToChat(user.ContactUserId)}}>\n            <Avatar user={user.ContactUser} />\n            {name ? name : 'Имя скрыто'}\n          </div>\n        )\n      }\n    })\n  }\n\n  return (\n    <Modal\n      visible={props.createChatModal}\n      // visible={true}\n      onCancel={() => props.toggleModal(\"createChatModal\")}\n      title=\"Создание группового чата\"\n      className=\"create-chat-modal\"\n      footer={null}\n      maskClosable\n    >\n      {\n        !showUsers ?\n          <>\n            <Upload\n              listType=\"picture-card\"\n              className=\"avatar-uploader\"\n              showUploadList={false}\n              customRequest={file => handleUploadImage(file)}\n              beforeUpload={beforeUpload}\n              onChange={handleChange}\n            >\n              {\n                loading ? \n                <Icon type=\"loading\" className=\"loading-icon\" />\n              : imageUrl ?\n                  <img src={`https://${props.node}:5000/api/Files/${imageUrl}`} alt=\"avatar\" style={{ width: '100%' }} />\n                :\n                  <>\n                    <p className=\"ant-upload-drag-icon\">\n                      <Icon type=\"inbox\" style={{fontSize: \"40px\", color: \"#1890ff\", marginTop: \"15px\"}} />\n                    </p>\n                    <p className=\"ant-upload-text\">Загрузить <br/> аватар</p>\n                  </>\n              }\n            </Upload>\n            <Divider />\n            <Form.Item\n              validateStatus={nameError ? \"error\" : ''}\n              help={nameError ? \"Это поле обязательно для заполнения\" : false}\n            >\n              <Input \n                placeholder=\"Название чата\"\n                onChange={(e) => handleSetChatName(e.target.value)}\n              />\n            </Form.Item>\n            <Divider />\n            <div className='switch-label'>\n              <div>Приватный чат</div>\n              <Switch checked={chatPrivate} onChange={(value) => setChatPrivate(value)} />\n            </div>\n            <Divider />\n            <div className='switch-label'>\n              <div>Создать канал</div>\n              <Switch checked={chatChannel} onChange={(value) => setChatChannel(value)} />\n            </div>\n            <Divider />\n            <Button type=\"normal\" block icon=\"usergroup-add\" onClick={() => setShowUsers(!showUsers)}>Добавить пользователей</Button>    \n          </>\n        :\n          <>\n            <div className=\"modal_back\" onClick={() => setShowUsers(false)}><Icon type=\"arrow-left\" /></div>\n            {\n              showUsers ?\n                <div className=\"wrap_contacts\">\n                  {showContacts()}\n                </div>\n              : null\n            }  \n          </>\n      }\n      <Divider />\n      <Button type=\"primary\" block onClick={() => handleCreateChat()}>Создать</Button>\n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createChatModal: state.ui.modals.createChatModal,\n    node: state.node.activeNode.Domains[0],\n    contacts: state.contacts.users\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateChatModal)\n","import Connect from \"./Connect\"\n\n/* eslint-disable */\nclass Request {\n  constructor() {}\n\n  // запрос диалогов\n  getDialogs() {\n    const getDialogs = {\n      NavigationMessageTime: null,\n      RequestId: Connect.makeId(),\n      RequestType: 12,\n      Type: 0\n    }\n\n    Connect.send(getDialogs)\n  }\n\n  // запрос списка контактов\n  getUserContacts() {\n    const getUserContacts = {\n      RequestId: Connect.makeId(),\n      RequestType: 64,\n      Type: 0\n    }\n\n    Connect.send(getUserContacts)\n  }\n\n  // запрос юзеров\n  getUsers(usersIds) {\n    const getUsers = {\n      RequestId: Connect.makeId(),\n      RequestType: 28,\n      Type: 0,\n      UsersId: usersIds\n    }\n\n    Connect.send(getUsers)\n  }\n\n  // запрос юзеров\n  getUsers(usersIds) {\n    const getUsers = {\n      RequestId: Connect.makeId(),\n      RequestType: 28,\n      Type: 0,\n      UsersId: usersIds\n    }\n\n    Connect.send(getUsers)\n  }\n\n  // запрос группы контактов\n  getUserGroups() {\n    const data = {\n      RequestId: Connect.makeId(),\n      RequestType: 61,\n      Type: 0,\n    }\n\n    Connect.send(data)\n  }\n\n  // запрос конактов из группы\n  getGroupContacts(groupId) {\n    const data = {\n      RequestId: Connect.makeId(),\n      RequestType: 60,\n      Type: 0,\n      GroupId: groupId\n    }\n\n    Connect.send(data)\n  }\n\n  // обновить информацию о пользователе\n  editUser(data) {\n    const requestdData = {\n      User: {\n        NameFirst: data.NameFirst,\n        NameSecond: data.NameSecond,\n        About: data.About,\n        Photo: data.Photo,\n        Country: null,\n        Language: null,\n        Visible: null,\n        Privacy: data.Privacy,\n        Security: null,\n        Phones: null,\n        Emails: null\n      },\n      RequestId: Connect.makeId(),\n      RequestType: 10,\n      Type: 0\n    }\n\n    Connect.send(requestdData)\n  }\n\n  // создать чат\n  createChat(data) {\n    const requestdData = {\n      Chats: [\n        {\n          Id: 0,\n          Name: \"NEW CHAT\",\n          Tag: 0,\n          Photo: null,\n          About: \"about chat\",\n          NodesId: null,\n          Visible: null,\n          Public: null,\n          Security: null,\n          Type: 1,\n          Users: [\n            {\n              ChatId: 0,\n              UserId: 1,\n              Deleted: false,\n              Banned: false,\n              UserRole: 0,\n              UserInfo: null\n            },\n            {\n              ChatId: 0,\n              UserId: 2,\n              Deleted: false,\n              Banned: false,\n              UserRole: 0,\n              UserInfo: null\n            }\n          ]\n        }\n      ],\n      RequestId: 3387209483927527400,\n      RequestType: 36,\n      Type: 0\n    }\n\n    Connect.send(requestdData)\n  }\n}\n\nconst request = new Request()\n\nexport default request\n","import React, {useState, useEffect} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Tabs } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport Request from \"../transport/Request\"\nimport Avatar from \"./Avatar\"\nimport { openDialog } from \"../actions/dialogs\"\n\nfunction ContactsModal(props) {\n  // const [contacts, setContacts] = useState([])\n\n  const { TabPane } = Tabs\n\n  useEffect(() => {\n    Request.getUserContacts()\n    Request.getUserGroups()\n  }, [])\n\n  // useEffect(() => {\n  //   const contactsTmp = []\n  //   props.users.forEach(user => {\n  //     if (props.contactsIDs.find(id => user.Id === id)) {\n  //       contactsTmp.push(user)\n  //     }\n  //   })\n  //   setContacts(contactsTmp)\n  // }, [props.users, props.contactsIDs])\n\n  const handleOpenChat = user => {\n    let payload = {}\n    payload.data = user\n    payload.type = \"user\"\n    props.openDialog(payload)\n    props.toggleModal(\"close\")\n  }\n\n  const changeGroup = groupId => {\n    if (groupId === \"all\") {\n      Request.getUserContacts()\n    } else {\n      Request.getGroupContacts(groupId)\n    }\n  }\n\n  const showContacts = () => {\n    return props.contacts.map(contact => {\n      if (contact.ContactUser) {\n        return (\n          <div className=\"contact\" key={contact.ContactId} onClick={() => handleOpenChat(contact.ContactUser)}>\n            <Avatar user={contact.ContactUser} />\n            <div className=\"name\">\n              {`${contact.ContactUser.NameFirst} ${contact.ContactUser.NameSecond}`}\n            </div>\n          </div>\n        )\n      }\n    })\n  }\n\n  const showGroups = () => {\n    return props.groups.map(group => {\n      return (\n        <TabPane tab={group.Title} key={group.GroupId}>\n          {showContacts()}\n        </TabPane>\n      )\n    })\n  }\n\n  return (\n    <Modal\n      visible={props.contactsModal}\n      // visible={true}\n      onCancel={() => props.toggleModal(\"contactsModal\")}\n      title=\"Контакты\"\n      footer={null}\n      maskClosable\n      className=\"contacts\"\n    >\n      <Tabs defaultActiveKey=\"1\" onChange={changeGroup}>\n        <TabPane tab=\"Все\" key=\"all\">\n          {showContacts()}\n        </TabPane>\n        {showGroups()}\n      </Tabs>\n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contactsModal: state.ui.modals.contactsModal,\n    users: state.users,\n    contacts: state.contacts.users,\n    contactsIDs: state.contacts.usersIDs,\n    groups: state.contacts.groups\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name)),\n    openDialog: data => dispatch(openDialog(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsModal)\n","/* eslint-disable */\nimport React, {useState} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Button, Input, Divider, Form, Typography, Icon } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport { removeContactFromGroup, removeGroup } from \"../actions/contacts\"\nimport Avatar from \"../components/Avatar\"\nimport socket from \"../transport/Connect\"\n\nconst { Text } = Typography\n\nfunction ContactsGroupsModal(props) {\n  const [chatName, setChatName] = useState(null)\n  const [nameError, setNameError] = useState(false)\n  const [groupOpen, setGroupOpen] = useState(false)\n  const [creatingGroup, setCreatingGroup] = useState(false)\n  const [usersIDs, setUsersIds] = useState([])\n  const [showUsers, setShowUsers] = useState(false)\n\n  const handleSetChatName = value => {\n    setChatName(value)\n    setNameError(false)\n    if (value.length < 1) {\n      setNameError(true)\n    }\n  }\n\n  const removeContactGroup = (groupId) => {\n    const removeGroup = {\n      GroupsId: [groupId],\n      RequestId: socket.makeId(),\n      RequestType: 57,\n      Type: 0\n    }\n\n    socket.send(removeGroup)\n    props.removeGroup(groupId)\n  }\n\n  const showGroups = () => {\n    return props.groups.map(group => {\n      return (\n        <div className=\"contact\" key={group.GroupId}>\n          <div className=\"name\" onClick={() => openGroup(group.GroupId)}>{group.Title}</div>\n          <Button className=\"remove-user\" type=\"danger\" shape=\"circle\" icon=\"close\" onClick={() => removeContactGroup(group.GroupId)} />\n        </div>\n      )\n    })\n  }\n\n  const openGroup = groupId => {\n    const openedGroup = props.groups.find(group => group.GroupId === groupId)\n    if (openedGroup) {\n      setGroupOpen(openedGroup)\n    }\n  }\n\n  const handleSetCreatingGroup = () => {\n    if (!chatName) {\n      setNameError(true)\n    } else {\n      setCreatingGroup(\"step2\")\n    }\n  }\n\n  const updateGroup = () => {\n    const addUsersToGroup = {\n      UsersId: usersIDs,\n      GroupId: groupOpen.GroupId,\n      RequestId: socket.makeId(),\n      RequestType: 58,\n      Type: 0\n    }\n    \n    socket.send(addUsersToGroup)\n\n    props.toggleModal(\"contactsGroupsModal\")\n  }\n\n  const createGroup = () => {\n    const newGroup = {\n      Group: {\n        GroupId: groupOpen ? groupOpen.GroupId : null,\n        Title: chatName ? chatName : groupOpen.Title,\n        UsersId: usersIDs,\n      },\n      RequestId: socket.makeId(),\n      RequestType: 56,\n      Type: 0\n    }\n    \n    socket.send(newGroup)\n\n    props.toggleModal(\"contactsGroupsModal\")\n  }\n\n  const removeUserFromGroup = user => {\n    const removeUser = {\n      UsersId: [user.Id],\n      GroupId: groupOpen.GroupId,\n      RequestId: socket.makeId(),\n      RequestType: 59,\n      Type: 0\n    }\n    \n    socket.send(removeUser)\n\n    props.removeContactFromGroup({userId: user.Id, groupId: groupOpen.GroupId})\n  }\n\n  const showUsersInGroup = () => {\n    return props.contacts.users.map(user => {\n      if(user.GroupsId.includes(groupOpen.GroupId)){\n        let name = null\n        if (user.ContactUser.NameFirst) {\n          name = user.ContactUser.NameFirst\n        }\n        if (user.ContactUser.NameSecond) {\n          name = name + ' ' + user.ContactUser.NameSecond\n        }\n        return (\n          <div key={user.ContactId} className='contacts'>\n            <>\n            <Avatar user={user.ContactUser} />\n            {name ? name : 'Имя скрыто'}\n            </>\n            <Button className=\"remove-user\" type=\"danger\" shape=\"circle\" icon=\"user-delete\" onClick={() => removeUserFromGroup(user.ContactUser)} />\n          </div>\n        )\n      }\n    })\n  }\n\n  const addContactToChat = userId => {\n    let users = [...usersIDs]\n    if (usersIDs.includes(userId)) {\n      let foudnUserIndex = users.indexOf(userId)\n      users.splice(foudnUserIndex, 1)\n      setUsersIds(users)\n    } else {\n      users.push(userId)\n      setUsersIds(users)\n    }\n  }\n\n  const showContacts = () => {\n    let contacts = []\n    if (groupOpen) {\n      contacts = props.contacts.users.map(contact => {\n        if (!contact.GroupsId.includes(groupOpen.GroupId)) {\n          return contact\n        }\n      })\n    } else {\n      contacts = props.contacts.users\n    }\n    return contacts.map(user => {\n      if(user){\n        let name = null\n        if (user.ContactUser.NameFirst) {\n          name = user.ContactUser.NameFirst\n        }\n        if (user.ContactUser.NameSecond) {\n          name = name + ' ' + user.ContactUser.NameSecond\n        }\n        return (\n          <div key={user.ContactId} className={usersIDs.includes(user.ContactUserId) ? 'contacts contacts-active' : 'contacts'} onClick={() => {addContactToChat(user.ContactUserId)}}>\n            <Avatar user={user.ContactUser} />\n            {name ? name : 'Имя скрыто'}\n          </div>\n        )\n      }\n    })\n  }\n\n  const handleCloseModal = () => {\n    setChatName(null)\n    setNameError(false)\n    setGroupOpen(false)\n    setCreatingGroup(false)\n    setUsersIds([])\n    setShowUsers(false)\n    props.toggleModal(\"contactsGroupsModal\")\n  }\n\n  return (\n    <Modal\n      visible={props.contactsGroupsModal}\n      // visible={true}\n      onCancel={() => handleCloseModal()}\n      title=\"Группы контактов\"\n      footer={null}\n      maskClosable\n      className=\"contacts create-chat-modal\"\n    >\n      {\n        creatingGroup === \"step1\" ?\n          <div className=\"content\">\n            <div className=\"modal_back\" onClick={() => setCreatingGroup(false)}><Icon type=\"arrow-left\" /></div>\n            <Form.Item\n              validateStatus={nameError ? \"error\" : ''}\n              help={nameError ? \"Это поле обязательно для заполнения\" : false}\n            >\n              <Input\n                placeholder=\"Название группы\"\n                onChange={(e) => handleSetChatName(e.target.value)}\n              />\n            </Form.Item>\n            <Divider />\n            <Button type=\"primary\" block onClick={() => handleSetCreatingGroup()}>Далее</Button>\n          </div>\n        : creatingGroup === \"step2\" ?\n          <div className=\"content\">\n            <div className=\"modal_back\" onClick={() => setCreatingGroup(\"step1\")}><Icon type=\"arrow-left\" /></div>\n            <Text strong>Добавьте участников</Text>\n            <div className=\"wrap_contacts\">\n              {showContacts()}\n            </div>\n            <Divider />\n            <Button type=\"primary\" block onClick={() => createGroup()}>Создать группу</Button>\n          </div>\n        : groupOpen ?\n          <div className=\"content\">\n            {\n              showUsers ?\n                <>\n                  <div className=\"modal_back\" onClick={() => setShowUsers(false)}><Icon type=\"arrow-left\" /></div>\n                  <Text strong>Добавьте участников</Text>\n                  <div className=\"wrap_contacts\">\n                    {showContacts()}\n                  </div>\n                  <Divider />\n                </>\n              :\n                <>\n                  <div className=\"modal_back\" onClick={() => setGroupOpen(false)}><Icon type=\"arrow-left\" /></div>\n                  <Text strong>Название:</Text>\n                  <Input defaultValue={chatName ? chatName : groupOpen.Title} onChange={(e) => handleSetChatName(e.target.value)} />\n                  <Divider />\n                  <Text strong>Участники:</Text>\n                  <div className=\"wrap_contacts\">\n                    {showUsersInGroup()}\n                  </div>\n                  <Divider />\n                  <Button type=\"normal\" block icon=\"usergroup-add\" onClick={() => setShowUsers(!showUsers)}>Добавить пользователей</Button>\n                  <Divider />\n                </>\n            }\n            <Button type=\"primary\" block onClick={() => updateGroup()}>Сохранить</Button>\n          </div>\n        :\n          <>\n            {showGroups()}\n            <div className=\"content\">\n              <Button type=\"primary\" block onClick={() => setCreatingGroup(\"step1\")}>Добавить группу</Button>\n            </div>\n          </>\n      }\n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contactsGroupsModal: state.ui.modals.contactsGroupsModal,\n    users: state.users,\n    contacts: state.contacts,\n    contactsIDs: state.contacts.usersIDs,\n    groups: state.contacts.groups\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name)),\n    removeContactFromGroup: data => dispatch(removeContactFromGroup(data)),\n    removeGroup: data => dispatch(removeGroup(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsGroupsModal)","export function setContactUsersIDs(usersIDs) {\n  return {\n    type: \"SET_CONTACT_USERS_IDS\",\n    usersIDs\n  }\n}\n\nexport function setContacts(contacts) {\n  return {\n    type: \"SET_CONTACTS\",\n    contacts\n  }\n}\n\nexport function userGroupsReceived(groups) {\n  return {\n    type: \"USER_GROUPS_RECEIVED\",\n    groups\n  }\n}\n\nexport function removeContactFromGroup(payload) {\n  return {\n    type: \"REMOVE_CONTACT_FROM_GROUP\",\n    payload\n  }\n}\n\nexport function removeGroup(groupId) {\n  return {\n    type: \"REMOVE_GROUP\",\n    groupId\n  }\n}\n","/* eslint-disable */\nimport React, {useState, useEffect} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Button, Input, Divider, Upload, Icon, message, Switch } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport Request from \"../transport/Request\"\nimport Avatar from \"./Avatar\"\nimport axios from 'axios'\n\nfunction SettingsModal(props) {\n  const [loading, setLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(false)\n  const [name, setName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [about, setAbout] = useState('')\n  const [privacySettings, setPrivacySettings] = useState(false)\n  const [namePrivacy, setNamePrivacy] = useState(false)\n  const [photoPrivacy, setPhotoPrivacy] = useState(false)\n  const [onlinePrivacy, setOnlinePrivacy] = useState(false)\n  const [phonePrivacy, setPhonePrivacy] = useState(false)\n  const [emailPrivacy, setEmailPrivacy] = useState(false)\n\n  useEffect(() => {\n    if (props.user) {\n      setName(props.user.NameFirst)\n      setLastName(props.user.NameSecond)\n      setAbout(props.user.About)\n      setImageUrl(props.user.Photo)\n      setNamePrivacy(props.user.Visible[0][1])\n      setPhotoPrivacy(props.user.Visible[0][2])\n      setOnlinePrivacy(props.user.Visible[0][14])\n      setPhonePrivacy(props.user.Visible[0][15])\n      setEmailPrivacy(props.user.Visible[0][17])\n    }\n  }, [props.user])\n  \n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n      message.error('Поддерживается только загрузка JPG/PNG файлов!')\n    }\n    return isJpgOrPng\n  }\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true)\n      return\n    }\n  }\n\n  const uploadButton = (\n    <div>\n      <Icon type={loading ? 'loading' : 'plus'} />\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  )\n\n  const handleUploadImage = data => {\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', data.file)\n  \n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            setLoading(false)\n            setImageUrl(res.data.File.FileId)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          console.log(err)\n        }\n    )\n  }\n\n  const handleUpdateUser = () => {\n    let privacy = props.user.Visible[0]\n    privacy[1] = namePrivacy\n    privacy[2] = photoPrivacy\n    privacy[14] = onlinePrivacy\n    privacy[15] = phonePrivacy\n    privacy[17] = emailPrivacy\n\n    const userData = {\n      NameFirst: name,\n      NameSecond: lastName,\n      About: about,\n      Photo: imageUrl,\n      Privacy: privacy\n    }\n\n    Request.editUser(userData)\n  }\n\n  return (\n    <Modal\n      visible={props.settingsModal}\n      // visible={true}\n      onCancel={() => props.toggleModal(\"settingsModal\")}\n      title=\"Редактировать профиль\"\n      footer={null}\n      maskClosable\n      className=\"contacts\"\n    >\n      {\n        props.user ?\n          <div className=\"content settings\">\n            {!privacySettings ?\n              <>\n                <Upload\n                  listType=\"picture-card\"\n                  className=\"avatar-uploader\"\n                  showUploadList={false}\n                  customRequest={file => handleUploadImage(file)}\n                  beforeUpload={beforeUpload}\n                  onChange={handleChange}\n                >\n                  {\n                    loading ? \n                      <Icon type=\"loading\" className=\"loading-icon\" />\n                    : null\n                  }\n                  {\n                    imageUrl ?\n                      <img src={`https://${props.node}:5000/api/Files/${imageUrl}`} alt=\"avatar\" style={{ width: '100%' }} />\n                    : props.user.Photo ?\n                      <Avatar user={props.user} />\n                    : uploadButton\n                  }\n                </Upload>\n                <Divider />\n                <Input value={lastName} onChange={e => setLastName(e.target.value)} placeholder=\"Фамилия\" />\n                <Divider />\n                <Input value={name} onChange={e => setName(e.target.value)} placeholder=\"Имя\" />\n                <Divider />\n                <Input value={about} onChange={e => setAbout(e.target.value)} placeholder=\"О себе\" />\n                <Divider />\n                <Input addonBefore=\"+7\" defaultValue={props.user.Phones[0] ? props.user.Phones[0].SubscriberNumber : ''} placeholder=\"Телефон\" disabled />\n                <Divider />\n                <Input defaultValue={props.user.Emails[0]} placeholder=\"Email\" disabled />\n                <Divider />\n                <Button type=\"link\" onClick={() => {setPrivacySettings(true)}}>Настроки приватности</Button>\n              </>\n            :\n              <>\n                <div className=\"modal_back\" onClick={() => setPrivacySettings(false)}><Icon type=\"arrow-left\" /></div>\n                <div className='switch-label'>\n                  <div>Имя, тэг</div>\n                  <Switch checked={namePrivacy} onChange={(value) => setNamePrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Онлайн статус</div>\n                  <Switch checked={onlinePrivacy} onChange={(value) => setOnlinePrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Телефон</div>\n                  <Switch checked={phonePrivacy} onChange={(value) => setPhonePrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Email</div>\n                  <Switch checked={emailPrivacy} onChange={(value) => setEmailPrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Фото, о себе</div>\n                  <Switch checked={photoPrivacy} onChange={(value) => setPhotoPrivacy(value)} />\n                </div>\n              </>\n            }\n            <Divider />\n            <Button type=\"primary\" block onClick={() => handleUpdateUser()}>Сохранить</Button>\n          </div>\n        : null\n      }        \n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    settingsModal: state.ui.modals.settingsModal,\n    user: state.users.find(user => user.currentUser === true),\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsModal)","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport Sidebar from \"./Sidebar\"\nimport DialogContainer from \"./DialogContainer\"\nimport ProfileModal from \"./ProfileModal\"\nimport CreateChatModal from \"./CreateChatModal\"\nimport ContactsModal from \"./ContactsModal\"\nimport ContactsGroupsModal from \"./ContactsGroupsModal\"\nimport { toggleDrawer, toggleModal } from \"../actions/ui\"\nimport { Drawer } from 'antd';\nimport SettingsModal from \"./SettingsModal\"\nimport socket from \"../transport/Connect\"\n\nfunction MainContainer(props) {\n  const logout = () => {\n    const logout = {\n      Full: false,\n      AccessToken: localStorage.getItem(\"AccessToken\"),\n      RequestType: 34,\n      RequestId: socket.makeId(),\n      Type: 0\n    }\n\n    socket.send(logout)\n\n    localStorage.removeItem(\"AccessToken\")\n    localStorage.removeItem(\"FileAccessToken\")\n    localStorage.removeItem(\"RefreshToken\")\n    localStorage.removeItem(\"User\")\n\n    window.location.replace(\"/\")\n  }\n\n  return (\n    <Router>\n      <div className=\"page\">\n        <div className=\"page__content\">\n          <Drawer\n            visible={props.ui.showDrawer}\n            // visible={true}\n            placement='left'\n            closable={true}\n            onClose={() => props.toggleDrawer()}\n            width='366'\n          >\n            {\n              props.user ? (\n                <div className=\"drawer-user\">\n                  <div className=\"drawer-user__ava\">\n                    { props.user.Photo ? (\n                      <div\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          backgroundSize: \"cover\",\n                          backgroundPosition: \"center center\",\n                          backgroundImage: `url(https://${props.node}:5000/api/Files/${props.user.Photo})`,\n                          backgroundRepeat: \"no-repeat\"\n                        }}\n                      />\n                    ) : (\n                      <div className=\"drawer-user__photo-default avatar-default\">defaultAva</div>\n                    )}\n                  </div>\n                  <div className=\"drawer-user__name\">\n                    {props.user.NameFirst + ' ' + props.user.NameSecond}\n                  </div>\n                </div>\n              ) : null\n            }\n            <ul className=\"menu\">\n              <li onClick={() => props.toggleModal(\"createChatModal\")}>Создать групповой чат</li>\n              <li onClick={() => props.toggleModal(\"contactsModal\")}>Контакты</li>\n              <li onClick={() => props.toggleModal(\"contactsGroupsModal\")}>Группы контактов</li>\n              <li onClick={() => props.toggleModal(\"settingsModal\")}>Настройки</li>\n              <li onClick={logout}>Выход</li>\n            </ul>\n            <div className=\"app-version\">v0.1.7</div>\n          </Drawer>\n          <>\n            <Sidebar {...props} />\n            <DialogContainer />\n          </>\n          {/* {windowWidth > 675 ? (\n            <>\n              <Sidebar {...props} />\n              <DialogContainer />\n            </>\n          ) : (\n            !selectors.getActiveDialog(props.dialogs) ? <Sidebar {...props} /> : <DialogContainer />\n          )} */}\n        </div>\n      </div>\n      <ProfileModal />\n      <CreateChatModal />\n      <ContactsModal />\n      <ContactsGroupsModal />\n      <SettingsModal />\n    </Router>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    ui: state.ui,\n    user: state.users.find(user => user.currentUser === true),\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleDrawer: () => dispatch(toggleDrawer()),\n    toggleModal: name => dispatch(toggleModal(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer)\n","/* eslint-disable */\nimport {useEffect} from \"react\"\nimport { connect } from \"react-redux\"\nimport Connect from \"./Connect\"\nimport Request from \"./Request\"\nimport {\n  dialogsReceived,\n  chatsReceived,\n  messagesReceived,\n  openDialog,\n  readMessages,\n} from \"../actions/dialogs\"\nimport { toggleModal, toggleDrawer } from \"../actions/ui\"\nimport { searchResultReceived } from \"../actions/search\"\nimport {\n  setContactUsersIDs,\n  userGroupsReceived,\n  setContacts\n} from \"../actions/contacts\"\nimport selectors from \"../selectors\"\nimport { userReceived, chatsUsersReceived } from \"../actions/user\"\nimport { setAuth } from \"../actions/auth\"\n\nfunction Socket(props) {\n  useEffect(() => {\n    Connect.onMessage = data => {\n      // Ответ на запрос авторизации либо на запрос обновления токенов\n      if (data.ResponseType === 6) {\n        // запрашиваем информацию об авторизировашемся пользователе\n        const getSelf = {\n          RequestId: Connect.makeId(),\n          RequestType: 27,\n          Type: 0\n        }\n\n        Connect.send(getSelf)\n\n        localStorage.setItem(\"FileAccessToken\", data.FileAccessToken)\n        localStorage.setItem(\"AccessToken\", data.Token.AccessToken)\n        localStorage.setItem(\"RefreshToken\", data.Token.RefreshToken)\n\n        props.setAuth(\"AUTH_SUCCESS\")\n      }\n      // Ответ на запрос получения текущего пользователя\n      else if (data.ResponseType === 12) {\n        const user = selectors.getFormatedUser([data.User])\n        user[0].currentUser = true\n        props.userReceived(user)\n        props.toggleModal(\"close\")\n        props.toggleDrawer(\"close\")\n      }\n      // Ответ на запрос получения дилогов\n      else if (data.ResponseType === 15) {\n        props.dialogsReceived(selectors.getFormatedDialogs(data.Conversations))\n      }\n      // Ответ на запрос получения сообщений\n      else if (data.ResponseType === 9) {\n        props.messagesReceived(selectors.getFormatedMessages(data.Messages))\n        // Request.getDialogs()\n      }\n      // Новое сообщение\n      else if (data.Message) {\n        props.messagesReceived(selectors.getFormatedMessages([data.Message]))\n        Request.getDialogs()\n      }\n      // Прочтение исходящих сообщений\n      else if (data.Type === 2 && data.Code === 5) {\n        props.readMessages({conversationId: data.ConversationId, conversationType: data.ConversationType})\n      }\n      // Ответ на запрос юзеров\n      else if (data.ResponseType === 0) {\n        props.userReceived(selectors.getFormatedUser(data.Users))\n      }\n      // Ответ на запрос чатов\n      else if (data.ResponseType === 2) {\n        const chats = selectors.getFormatedChats(data.Chats)\n\n        // запрашиваем список пользователей для чатов\n        chats.forEach(chat => {\n          const getChatsUsers = {\n            ChatId: chat.Id,\n            NavigationUserId: null,\n            RequestId: Connect.makeId(),\n            RequestType: 17,\n            Type: 0\n          }\n\n          Connect.send(getChatsUsers)\n        })\n\n        props.chatsReceived(selectors.getFormatedChats(data.Chats))\n      }\n      // Ответ на запрос юзеров в чате\n      // У них структура отличается от обычных юзеров, здесь приходит информация относящаяся именно к этому чату\n      else if (data.ResponseType === 16) {\n        props.chatsUsersReceived(selectors.getFormatedChatsUsers(data.ChatUsers))\n      }\n      // Ответ на вступление в канал\n      else if (data.ResponseType === 21) {\n        Request.getDialogs()\n      }\n      // Ответ на событие поиска\n      else if (data.ResponseType === 23) {\n        const searchResult = {}\n        if (data.Users.length > 0) {\n          searchResult.users = data.Users\n        }\n        if (data.Chats.length > 0) {\n          searchResult.chats = data.Chats\n        }\n        if (data.Channels.length > 0) {\n          searchResult.channels = data.Channels\n        }\n        props.searchResultReceived(searchResult)\n      }\n      // Ответ на запрос списка контактов\n      else if (data.ResponseType === 27) {\n        let userIDs = data.Contacts.map(user => {\n          return user.ContactUserId\n        })\n\n        props.setContactUsersIDs(userIDs)\n        props.setContacts(data.Contacts)\n\n        if (userIDs.length > 0) {\n          Request.getUsers(userIDs)\n        }\n      }\n      // Ответ на запрос групп контактов\n      else if (data.ResponseType === 26) {\n        props.userGroupsReceived(data.Groups)\n      }\n      // Уведомление о прочтении сообщений\n      else if (data.Code === 5) {\n        props.messagesRead(data.ConversationId)\n      }\n    }\n  }, [])\n\n  return null\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dialogsReceived: dialogs => dispatch(dialogsReceived(dialogs)),\n    chatsReceived: chats => dispatch(chatsReceived(chats)),\n    chatsUsersReceived: chatsUsers => dispatch(chatsUsersReceived(chatsUsers)),\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    userReceived: user => dispatch(userReceived(user)),\n    messagesReceived: messages => dispatch(messagesReceived(messages)),\n    readMessages: data => dispatch(readMessages(data)),\n    setAuth: auth => dispatch(setAuth(auth)),\n    searchResultReceived: data => dispatch(searchResultReceived(data)),\n    setContactUsersIDs: usersIDs => dispatch(setContactUsersIDs(usersIDs)),\n    userGroupsReceived: groups => dispatch(userGroupsReceived(groups)),\n    setContacts: contacts => dispatch(setContacts(contacts)),\n    toggleModal: name => dispatch(toggleModal(name)),\n    toggleDrawer: name => dispatch(toggleDrawer(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Socket)\n","/* eslint-disable */\nimport React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Spin } from \"antd\"\nimport {\n  dialogsReceived,\n  messagesReceived,\n  openDialog\n} from \"./actions/dialogs\"\nimport { userReceived } from \"./actions/user\"\nimport { setAppFocus } from \"./actions/ui\"\nimport Auth from \"./components/Auth\"\nimport Registration from \"./components/Registration\"\nimport Verify from \"./components/Verify\"\nimport MainContainer from \"./components/MainContainer\"\nimport socket from \"./transport/Connect\"\nimport Connect from \"./transport/Socket\"\nimport { setAuth } from \"./actions/auth\"\nimport { setPath } from \"./actions/path\"\nimport { setNodes, setActiveNode } from \"./actions/node\"\nimport selectors from \"./selectors\"\n\nconst licens = new WebSocket(\"wss://testlic-1.ymess.org:5005\")\n\nfunction App(props) {\n  \n  useEffect(() => {\n    if (selectors.getActiveDialog(props.dialogs)) {\n      document.body.style.position = \"fixed\"\n    } else {\n      document.body.style.position = \"relative\"\n    }\n  }, [props.dialogs])\n\n  // Устанавливаем флаг для отмечания сообщения прочитанными если вкладка не активна\n  window.onfocus = () => {\n    props.setAppFocus(true)\n  }\n  window.onblur = () => {\n    props.setAppFocus(false)\n  }\n\n  window.addEventListener(\"load\",function() {\n    setTimeout(function(){\n      window.scrollTo(0, 1)\n    }, 0)\n  })\n\n  useEffect(() => {\n    if (props.auth === \"AUTH_SUCCESS\") {\n      // запрос диалогов\n      const getDialogs = {\n        NavigationMessageTime: null,\n        RequestId: socket.makeId(),\n        RequestType: 12,\n        Type: 0\n      }\n\n      socket.send(getDialogs)\n    }\n  }, [props.auth])\n\n  useEffect(() => {\n    licens.onopen = () => {\n      // console.log(\"Соединение с лицензиаром установлено\")\n      const getNodesObj = {\n        RequestId: socket.makeId(),\n        RequestType: 1,\n        Type: 6\n      }\n\n      licens.send(JSON.stringify(getNodesObj))\n    }\n\n    licens.onmessage = event => {\n      const response = socket.blobToJson(event.data)\n      if (response.ResponseType === 2) {\n        props.setNodes(response.Nodes)\n        // устанавливаем первую ноду по умолчанию если выбран режим \"автоматически\"\n        if (!localStorage.getItem(\"node\")) {\n          // localStorage.setItem(\"node\", JSON.stringify(response.Nodes[0]))\n          // props.setActiveNode(response.Nodes[0])\n        } else {\n          props.setActiveNode(JSON.parse(localStorage.getItem(\"node\")))\n        }\n      }\n    }\n\n    const node = JSON.parse(localStorage.getItem(\"node\"))\n    if (node) {\n      props.setActiveNode(node)\n    }\n\n    if (localStorage.getItem(\"AccessToken\")) {\n      let login\n      if (localStorage.getItem(\"User\")) {\n        login = {\n          Token: {\n            UserId: JSON.parse(localStorage.getItem(\"User\")).Id,\n            AccessToken: localStorage.getItem(\"AccessToken\"),\n            RefreshToken: localStorage.getItem(\"RefreshToken\")\n          },\n          LoginType: 0,\n          UidType: 1,\n          RequestId: socket.makeId(),\n          RequestType: 33,\n          Type: 0\n        }\n      } else if (localStorage.getItem(\"Phone\")) {\n        login = {\n          Uid: localStorage.getItem(\"Phone\"),\n          Token: {\n            AccessToken: localStorage.getItem(\"AccessToken\"),\n            RefreshToken: localStorage.getItem(\"RefreshToken\")\n          },\n          LoginType: 0,\n          UidType: 0,\n          RequestId: socket.makeId(),\n          RequestType: 33,\n          Type: 0\n        }\n      } else if (localStorage.getItem(\"Email\")) {\n        console.log(\"По почте\")\n      }\n\n      socket.start(node.Domains[0])\n      socket.wsOnConnect = () => {\n        socket.send(login)\n        // if(socket.send){\n        // }\n      }\n    } else {\n      props.setAuth(\"NO_AUTH\")\n    }\n  }, [])\n\n  return (\n    <>\n      <Connect />\n      {\n        props.auth === \"CHECK_AUTH\" ? \n          <div className=\"preloader\">\n            <Spin size=\"large\" />\n          </div>\n        : props.auth === \"AUTH_SUCCESS\" ? \n            <MainContainer/>\n        : props.path === \"by-phone\" || props.path === \"by-email\" ? \n          <Verify/>\n        : props.path === \"registration\" ? \n          <Registration/> \n        : <Auth/>\n      }\n\n\n      {/* <Router>\n        <Route\n          path=\"/\"\n          render={\n            // eslint-disable-next-line no-nested-ternary\n            props.auth === \"CHECK_AUTH\"\n              ? () => (\n                  <div className=\"preloader\">\n                    <Spin size=\"large\" />\n                  </div>\n                )\n              : props.auth === \"AUTH_SUCCESS\"\n              ? () => (\n                  <>\n                    <Route path=\"/\" component={MainContainer} />\n                  </>\n                )\n              : () => <Redirect to=\"/auth\" />\n          }\n        />\n        <Route path=\"/auth/by-phone\" component={Verify} />\n        <Route path=\"/auth/by-email\" component={Verify} />\n        <Route exact path=\"/auth\" component={Auth} />\n        <Route exact path=\"/registration\" component={Registration} />\n      </Router> */}\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    users: state.users,\n    auth: state.auth,\n    path: state.path.currentPath\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dialogsReceived: dialogs => dispatch(dialogsReceived(dialogs)),\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    userReceived: user => dispatch(userReceived(user)),\n    messagesReceived: messages => dispatch(messagesReceived(messages)),\n    setAuth: auth => dispatch(setAuth(auth)),\n    setNodes: nodes => dispatch(setNodes(nodes)),\n    setActiveNode: node => dispatch(setActiveNode(node)),\n    setPath: path => dispatch(setPath(path)),\n    setAppFocus: data => dispatch(setAppFocus(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './css/style.css';\nimport './assets/fonts/fonts.css'\nimport 'antd/dist/antd.css';\nimport './css/style.scss';\nimport {Provider} from 'react-redux';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}\n"],"sourceRoot":""}