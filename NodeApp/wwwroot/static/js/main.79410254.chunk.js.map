{"version":3,"sources":["assets/logo.PNG","reducers/node.js","reducers/path.js","reducers/ui.js","reducers/contacts.js","reducers/index.js","reducers/dialogs.js","reducers/chats.js","reducers/messages.js","reducers/users.js","reducers/forwardMessage.js","reducers/auth.js","reducers/callbacks.js","reducers/publicKeys.js","reducers/search.js","reducers/keys.js","reducers/keysForDecrypt.js","actions/dialogs.js","actions/user.js","actions/ui.js","transport/Connect.js","actions/node.js","actions/path.js","components/Auth.js","components/Registration.js","actions/auth.js","helpers/DevicesKeysExchange.js","helpers/index.js","helpers/Helpers.js","components/Verify.js","selectors/index.js","selectors/Message.js","selectors/Dialog.js","selectors/User.js","components/SidebarItem.js","components/HeadSidebar.js","components/Search.js","actions/search.js","components/Sidebar.js","components/HeadDialog.js","actions/callbacks.js","components/Avatar.js","actions/keys.js","assets/tick_icon.svg","assets/double_tick_icon.svg","components/Message.js","assets/paperclip_icon.svg","assets/send_button_icon.svg","components/NewMessageField.js","components/Dialog.js","components/DialogContainer.js","components/ProfileModal.js","components/CreateChatModal.js","transport/Request.js","components/ContactsModal.js","components/ContactsGroupsModal.js","actions/contacts.js","components/SettingsModal.js","components/MainContainer.js","transport/Socket.js","App.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["module","exports","__webpack_require__","p","defaulState","activeNode","allNodes","defaultState","prevPath","currentPath","profile","search","showDrawer","appFocus","isCrypto","modals","createChatModal","contactsModal","contactsGroupsModal","settingsModal","callbacks","users","usersIDs","groups","combineReducers","dialogs","state","arguments","length","undefined","action","type","newState","Object","toConsumableArray","activeDialog","find","dialog","active","forEach","ConversationId","ConversationType","messagesRecieved","payload","data","UnreadedCount","SecondUid","Id","fakeDialog","Title","NameFirst","NameSecond","Photo","fake","push","messages","conversationId","conversationType","PreviewText","Text","chats","chatsUsers","ChatId","Users","message","mess","GlobalId","sort","a","b","a_date","Date","SendingTime","b_date","Read","user","concat","contacts","objectSpread2","ContactUserId","userId","groupIndex","GroupsId","indexOf","groupId","splice","group","GroupId","forwardMessage","auth","node","nodes","path","ui","text","name","localStorage","removeItem","callbackData","id","callback","response","RequestId","publicKeys","publicKey","key","JSONbig","stringify","KeyId","searchResult","symmetricKey","symmetricKeysForDecrypt","symmetricKeyForDecrypt","dialogsReceived","messagesReceived","forwardingMessage","openDialog","userReceived","openProfile","toggleDrawer","toggleModal","wSocket","Connect","classCallCheck","this","reconnectInterval","needReconnect","domain","_this","webSocket","WebSocket","onopen","clearInterval","wsOnConnect","onclose","event","wasClean","readyState","setInterval","start","JSON","parse","getItem","Domains","onmessage","blobToJson","ErrorCode","onMessageReg","onMessage","onMessageAuth","onerror","error","close","u","x","URL","createObjectURL","XMLHttpRequest","open","send","revokeObjectURL","responseText","result","charactersLength","i","charAt","Math","floor","random","parseInt","setActiveNode","setPath","Auth","possibleConstructorReturn","getPrototypeOf","call","props","item","setItem","socket","menu","react_default","createElement","es_menu","onClick","selectNode","bind","map","Item","Name","row","align","justify","style","height","col","className","es_button","connectNode","dropdown","overlay","icon","Component","connect","dispatch","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","surname","setSurname","_useState5","_useState6","phone","setPhone","_useState7","_useState8","email","setEmail","_useState9","_useState10","verifyCode","setVerifyCode","_useState11","_useState12","nameErr","setNameErr","_useState13","_useState14","emailErr","setEmailErr","_useState15","_useState16","phoneErr","setPhoneErr","_useState17","_useState18","contactsErr","setContactsErr","_useState19","_useState20","verifyCodeErr","setVerifyCodeErr","_useState21","_useState22","btnLoader","setbtnLoader","_useState23","_useState24","_useState25","_useState26","showRegButton","setShowRegButton","useEffect","console","log","errMessage","Message","Phone","Email","warning","ResponseType","FileAccessToken","Token","AccessToken","RefreshToken","User","window","location","replace","es_form","Fragment","validateStatus","help","input","placeholder","value","onChange","e","target","textAlign","regData","Phones","FullNumber","About","Country","City","Birthday","Language","NodeId","Online","Emails","Blacklist","Visible","Security","Tag","RegistrationDate","VCode","makeId","RequestType","Type","loading","addonBefore","disabled","isNaN","test","requestId","verifyData","VerificationType","Uid","IsRegistration","getVerifyCode","setAuth","allEnctyptKeys","allSignKeys","formatedAllKeys","UserId","PublicKey","public","PrivateKey","private","Lifetime","GenerationTime","IsSign","formatedSignKey","helpers","bufferToBase64","buf","binstr","Array","prototype","ch","String","fromCharCode","join","btoa","base64ToBuffer","base64","atob","Uint8Array","charCodeAt","devicesKeysExchange","interlocutorPublicKey","encoder","TextEncoder","masterPassword","encode","masterPasswordId","BigInt","crypto","Crypto","mySignPrivateKey","symmetricKyeId","setPublicEncryptKeyToSend","setPrivateSignKeyToSend","getSymmetricKey","then","setSymmetricKey","encryptSecretMsg","encryptedData","encryptKeyMsg","encryptedSymmetricKey","clientResponse","EncryptedSymmetricKey","EncryptedData","catch","err","setKeysFromAnotherDevice","decoder","TextDecoder","myEncryptKey","setPublicSignKeyToRecive","setPrivateEncryptKeyToRecive","decryptKeyMsg","decryptSymmetricKey","decryptSecretMsg","EncryptedKeys","msg","keysFromAnotherDevice","decode","idAllMykeys","includes","allSignKeyPairs","newKey","allEncryptKeyPairs","Verify","verifyUid","verifyErr","verifyRequestSended","btnPreloader","redirect","_this2","setState","setKeyPair","keys","keysId","allKeyPairs","keysInBase64","setSignKeyPair","cryptoKeysId","getKeyPairShort","getKeyPairMidle","getKeyPairLong","signKeysId","verifyType","navigator","appVersion","userAgent","preventDefault","LoginType","UidType","DeviceName","getDevice","OSName","getOS","AppName","_this3","sendVerifyRequest","_this4","react_router","to","setPrevPath","onSubmit","sendverifyCode","autoFocus","inputMode","onChangeVerifCode","htmlType","onChangePhone","sendVerificationQuery","selectors","getFormatedMessages","tempMess","Attachments","SenderId","getFormatedDialogs","tempDialogs","AttachmentType","IsMuted","LastMessageId","LastMessageSenderId","LastMessageSenderName","LastMessageTime","getFormatedChats","chat","tempChat","Key","NodesId","Public","getFormatedChatsUsers","tempUser","Banned","Deleted","InviterId","Joined","UserInfo","UserRole","getFormatedUser","BlackList","Confirmed","Contact","ContactsPrivacy","Encryption","Groups","Keys","getUserById","getUserInitials","initials","ChannelName","defaultAva","split","substr","getActiveDialog","SidebarItem","newsContent","refs","messageText","newsText","innerText","slice","avatarStyle","width","backgroundSize","backgroundPosition","backgroundImage","backgroundRepeat","react_router_dom","ref","dialogId","src","logo","alt","Search","Input","searchStart","searchEnd","queryText","setQueryText","searchDialogs","toLowerCase","searchRequest","SearchQuery","Direction","onSearch","enterButton","localFoundDialogs","setLocalFoundDialogs","filter","components_HeadSidebar","components_Search","components_SidebarItem","showSearchResultUsers","showSearchResultChats","channels","showSearchResultChannels","JavascriptTimeAgo","locale","ru","closeDialog","toggleCryptoMode","setDialog","setDefaultAva","setUser","document","body","clientWidth","windowWidth","setWindowWidth","onresize","ReactTimeAgo","date","es_switch","setCallbackId","borderRadius","setSymmetricKeyForDecrypt","_extends","assign","source","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","points","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","tick_icon_SvgTickIcon","_ref","svgRef","y","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","double_tick_icon_extends","double_tick_icon_objectWithoutProperties","double_tick_icon_objectWithoutPropertiesLoose","double_tick_icon_ref2","d","double_tick_icon_ref3","double_tick_icon_ref4","double_tick_icon_ref5","double_tick_icon_ref6","double_tick_icon_ref7","double_tick_icon_ref8","double_tick_icon_ref9","double_tick_icon_ref10","double_tick_icon_ref11","double_tick_icon_ref12","double_tick_icon_ref13","double_tick_icon_ref14","double_tick_icon_ref15","double_tick_icon_ref16","double_tick_icon_ref17","double_tick_icon_SvgDoubleTickIcon","double_tick_icon_ForwardRef","currentUser","visible","setVisible","messageTime","setMessageTime","isContextMenuVisible","setSsContextMenuVisible","setRedirect","decryptedMessage","setDecryptedMessage","fileMsg","setFileMsg","timestamp","setTime","hour","getHours","minutes","getMinutes","setLinks","str","reg","match","k","conversation","Payload","background","components_Avatar","dangerouslySetInnerHTML","__html","FileId","forwardingUser","getForwardingUser","foundPublicSignKey","SignKeyId","privateKey","Data","idKey","failedDecryptMsg","signKeyForDecrypt","getMetaDataMsg","attach","fontStyle","href","download","Filename","showMessage","modal","onCancel","footer","maskClosable","paperclip_icon_extends","paperclip_icon_objectWithoutProperties","paperclip_icon_objectWithoutPropertiesLoose","paperclip_icon_ref2","transform","paperclip_icon_SvgPaperclipIcon","paperclip_icon_ForwardRef","send_button_icon_extends","send_button_icon_objectWithoutProperties","send_button_icon_objectWithoutPropertiesLoose","send_button_icon_ref2","send_button_icon_ref3","send_button_icon_ref4","send_button_icon_ref5","send_button_icon_ref6","send_button_icon_ref7","send_button_icon_ref8","send_button_icon_ref9","send_button_icon_ref10","send_button_icon_ref11","send_button_icon_ref12","send_button_icon_ref13","send_button_icon_ref14","send_button_icon_ref15","send_button_icon_ref16","send_button_icon_ref17","send_button_icon_SvgSendButtonIcon","send_button_icon_ForwardRef","setMessageText","imgLoading","setImgLoading","imageUrl","setImageUrl","attachmentsType","setAttachmentsType","sendMessage","Messages","ReceiverId","ReplyTo","MessagesGlobalId","Hash","MessageId","encryptMsg","encryptedMessage","SaveFlag","upload","showUploadList","customRequest","file","fileAccessToken","axios","defaults","headers","formData","FormData","append","post","res","status","File","handleUploadImage","beforeUpload","isJpgOrPng","info","onKeyDown","keyCode","requestsId","setMessages","messagesLoading","setMessagesLoading","height1","setHeight1","height2","setHeight2","callbackFunctions","setCallbackFunctions","interlocutorEncryptPublicKey","setInterlocutorEncryptPublicKey","mesViewport","useRef","keyTimelife","getTime","interEncryptPublicKey","keyId","symmKey","symmKeyEncrypted","keysPairs","signKeysPairs","addNewKeys","Version","MessagesId","current","onscroll","scrollTop","scrollHeight","messagesRequest","NavigationMessageId","ChannelId","setTimeout","scrollBottom","uniqueUsers","Set","n","requestUsers","UsersId","getUsers","callbackIds","getUserKeys","KeysId","NavigationTime","keyExchangeMessage","onDragOver","classList","add","fileOver","onDragLeave","remove","fileLeave","onDrop","dataTransfer","files","upladedFile","encryptImgMsg","attachmentType","fileDrop","components_Message","size","ChannelsId","components_NewMessageField","NavigationMessageTime","zIndex","components_HeadDialog","components_Dialog","setProfile","prevProfile","setPrevProfile","getChatInfo","ChatsId","undefinedUsers","handleCancelProfile","margin","foundUser","marginTop","chatName","setChatName","nameError","setNameError","chatPrivate","setChatPrivate","chatChannel","setChatChannel","setLoading","setUsersIds","showUsers","setShowUsers","title","ContactUser","ContactId","foudnUserIndex","addContactToChat","listType","fontSize","color","divider","checked","block","newChat","Chats","handleCreateChat","request","Request","getDialogs","getUserContacts","usersIds","requestdData","Privacy","contactsIDs","TabPane","Tabs","getUserGroups","showContacts","contact","handleOpenChat","tabs","defaultActiveKey","getGroupContacts","tab","Typography","removeContactFromGroup","removeGroup","groupOpen","setGroupOpen","creatingGroup","setCreatingGroup","handleSetChatName","openGroup","openedGroup","strong","newGroup","Group","createGroup","defaultValue","shape","removeUser","removeUserFromGroup","addUsersToGroup","updateGroup","removeContactGroup","lastName","setLastName","about","setAbout","privacySettings","setPrivacySettings","namePrivacy","setNamePrivacy","photoPrivacy","setPhotoPrivacy","onlinePrivacy","setOnlinePrivacy","phonePrivacy","setPhonePrivacy","emailPrivacy","setEmailPrivacy","uploadButton","SubscriberNumber","privacy","userData","editUser","handleUpdateUser","drawer","placement","closable","onClose","logout","Full","components_Sidebar","components_DialogContainer","components_ProfileModal","components_CreateChatModal","components_ContactsModal","components_ContactsGroupsModal","components_SettingsModal","chatsReceived","chatsUsersReceived","readMessages","searchResultReceived","setContactUsersIDs","userGroupsReceived","setContacts","setPublicKeys","setCallbackData","getSelf","Conversations","Code","getChatsUsers","NavigationUserId","ChatUsers","Channels","userIDs","Contacts","messagesRead","licens","setNodes","setAppFocus","position","addEventListener","scrollTo","getKeysFromAnotherDevice","getNodesObj","Nodes","login","transport_Socket","spin","components_MainContainer","components_Verify","components_Registration","components_Auth","Boolean","hostname","initialState","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79410254.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.024bbe57.PNG\";","/* eslint-disable */\nconst defaulState = {\n  activeNode: null,\n  allNodes: null\n}\n\nexport function node(state = defaulState, action) {\n  if(action.type === 'SET_NODE') {\n    let newState = {...state}\n    newState.activeNode = action.node\n    return newState\n  } else if(action.type === 'SET_NODES') {\n    let newState = {...state}\n    newState.allNodes = action.nodes\n    return newState\n  }\n  return state\n}\n","/* eslint-disable */\nconst defaultState = {\n  prevPath: '',\n  currentPath: ''\n}\n\nexport function path(state = defaultState, action) {\n  if(action.type === 'SET_PATH') {\n    let newState = {...state}\n    newState.prevPath = newState.path\n    newState.currentPath = action.path\n    return newState\n  } else if(action.type === 'PREV_PATH') {\n    let newState = {...state}\n    newState.currentPath = newState.prevPath\n    return newState\n  }\n  return state\n}\n","/* eslint-disable */\nconst defaultState = {\n  profile: null,\n  search: false,\n  showDrawer: false,\n  appFocus: true,\n  isCrypto: false,\n  modals: {\n    createChatModal: false,\n    contactsModal: false,\n    contactsGroupsModal: false,\n    settingsModal: false\n  },\n  callbacks: []\n}\n\nexport function ui(state = defaultState, action) {\n  if(action.type === 'OPEN_PROFILE') {\n    let newState = {...state}\n    newState.profile = action.dialog\n    return newState\n  }\n  else if (action.type === 'SEARCH_START') {\n    let newState = {...state}\n    newState.search = action.text\n    return newState\n  }\n  else if (action.type === 'SEARCH_END') {\n    let newState = {...state}\n    newState.search = false\n    return newState\n  }\n  else if (action.type === 'TOGGLE_DRAWER') {\n    let newState = {...state}\n    if (action.name === \"close\") {\n      newState.showDrawer = false\n    } else {\n      newState.showDrawer = !newState.showDrawer\n    }\n    return newState\n  }\n  else if (action.type === 'TOGGLE_MODAL') {\n    let newState = {...state}\n    if (action.name === \"close\") {\n      for (var name in newState.modals) {\n        newState.modals[name] = false\n      }\n    } else {\n      newState.modals[action.name] = !newState.modals[action.name]\n    }\n    return newState\n  }\n  else if (action.type === 'SET_APP_FOCUS') {\n    let newState = {...state}\n    newState.appFocus = action.data\n    return newState\n  }\n  else if (action.type === 'TOGGLE_CRYPTO_MODE') {\n    localStorage.removeItem(\"keysUpload\")\n    let newState = {...state}\n    newState.isCrypto = action.isCrypto\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\nconst defaultState = {\n  users: [],\n  usersIDs: [],\n  groups: []\n}\n\nexport function contacts(state = defaultState, action) {\n  if(action.type === 'SET_CONTACT_USERS_IDS') {\n    let newState = {...state}\n    newState.usersIDs = action.usersIDs\n    return newState\n  }\n  if(action.type === 'SET_CONTACTS') {\n    let newState = {...state}\n    newState.users = action.contacts\n    return newState\n  }\n  else if (action.type === \"USER_GROUPS_RECEIVED\") {\n    let newState = {...state}\n    newState.groups = action.groups\n    return newState\n  }\n  else if (action.type === \"REMOVE_CONTACT_FROM_GROUP\") {\n    let newState = {...state}\n    newState.users.forEach(user => {\n      if (user.ContactUserId === action.payload.userId) {\n        let groupIndex = user.GroupsId.indexOf(action.payload.groupId)\n        user.GroupsId.splice(groupIndex, 1)\n      }\n    })\n    return newState\n  }\n  else if (action.type === \"REMOVE_GROUP\") {\n    let newState = {...state}\n    newState.groups.forEach(group => {\n      if (group.GroupId === action.groupId) {\n        let groupIndex = newState.groups.indexOf(group)\n        newState.groups.splice(groupIndex, 1)\n      }\n    })\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","import { combineReducers } from \"redux\"\nimport { dialogs } from \"./dialogs\"\nimport { chats } from \"./chats\"\nimport { messages } from \"./messages\"\nimport { users } from \"./users\"\nimport { forwardMessage } from \"./forwardMessage\"\nimport { auth } from \"./auth\"\nimport { node } from \"./node\"\nimport { path } from \"./path\"\nimport { ui } from \"./ui\"\nimport { callbacks } from \"./callbacks\"\nimport { searchResult } from \"./search\"\nimport { contacts } from \"./contacts\"\nimport { symmetricKey } from \"./keys\"\nimport { symmetricKeysForDecrypt } from \"./keysForDecrypt\"\nimport { publicKeys } from \"./publicKeys\"\n\nexport default combineReducers({\n  dialogs,\n  chats,\n  messages,\n  users,\n  contacts,\n  forwardMessage,\n  auth,\n  node,\n  path,\n  ui,\n  callbacks,\n  publicKeys,\n  searchResult,\n  symmetricKey,\n  symmetricKeysForDecrypt\n})\n","/* eslint-disable */\nexport function dialogs(state = [], action) {\n   if (action.type === 'DIALOGS_RECEIVED') {\n      let newState = [...state]\n      let activeDialog = newState.find(dialog => dialog.active)\n      newState = action.dialogs\n      if (activeDialog) {\n         newState.forEach(dialog => {\n            if (dialog.ConversationId === activeDialog.ConversationId && dialog.ConversationType === activeDialog.ConversationType) {\n               dialog.active = true\n               dialog.messagesRecieved = activeDialog.messagesRecieved\n            }\n         })\n      }\n      return newState\n   }\n   else if(action.type === 'OPEN_DIALOG') {\n      let newState = [...state]\n      // The action.payload.data may contain both the dialog itself and the user object of the dialog with which there is no\n      // If there is no dialogue with the user, then create a fake dialogue\n      // And after sending the message a dialog will be created and just request it on the server\n      if (action.payload.type === 'dialog') {\n         newState.forEach(function(dialog){\n            dialog.active = false\n   \n            if (dialog.ConversationId === action.payload.data.ConversationId && dialog.ConversationType === action.payload.data.ConversationType) {\n               dialog.active = true\n               dialog.UnreadedCount = 0\n               dialog.type = action.payload.type\n            }\n         })\n      } else if (action.payload.type === 'user') {\n         let dialogWithUser = newState.find(dialog => dialog.SecondUid === action.payload.data.Id)\n         if (dialogWithUser) {\n            newState.forEach(dialog => {\n               dialog.active = false\n\n               if (dialog.SecondUid === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = 'dialog'\n               }\n            })\n         } else {\n            let fakeDialog = {}\n         \n            fakeDialog.ConversationId = action.payload.data.Id,\n            fakeDialog.Title = action.payload.data.NameFirst + ' ' + action.payload.data.NameSecond,\n            fakeDialog.Photo = action.payload.data.Photo,\n            fakeDialog.ConversationType = 1,\n            fakeDialog.SecondUid = action.payload.data.Id,\n            fakeDialog.fake = true\n   \n            newState.push(fakeDialog)\n   \n            newState.forEach(function(dialog){\n               dialog.active = false\n      \n               if (dialog.ConversationId === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = action.payload.type\n               }\n            })\n         }\n      } else if (action.payload.type === 'channel') {\n         newState.push(action.payload.data)\n\n         newState.forEach(function(dialog){\n            dialog.active = false\n   \n            if (dialog.ConversationId === action.payload.data.Id) {\n               dialog.active = true\n               dialog.UnreadedCount = 0\n               dialog.type = action.payload.type,\n               dialog.fake = true\n            }\n         })\n      } else if (action.payload.type === 'chat') {\n         let chat = newState.find(dialog => dialog.ConversationId === action.payload.data.Id)\n         if (chat) {\n            newState.forEach(dialog => {\n               dialog.active = false\n\n               if (dialog.ConversationId === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = 'chat'\n               }\n            })\n         } else {\n            let fakeDialog = {}\n         \n            fakeDialog.ConversationId = action.payload.data.Id,\n            fakeDialog.Title = action.payload.data.NameFirst + ' ' + action.payload.data.NameSecond,\n            fakeDialog.Photo = action.payload.data.Photo,\n            fakeDialog.ConversationType = 1,\n            fakeDialog.SecondUid = action.payload.data.Id,\n            fakeDialog.fake = true\n   \n            newState.push(fakeDialog)\n   \n            newState.forEach(function(dialog){\n               dialog.active = false\n      \n               if (dialog.ConversationId === action.payload.data.Id) {\n                  dialog.active = true\n                  dialog.UnreadedCount = 0\n                  dialog.type = action.payload.type\n               }\n            })\n         }\n      }\n\n      return newState\n   }\n   else if(action.type === 'CLOSE_DIALOG') {\n      let newState = [...state]\n\n      newState.forEach(dialog => {\n         if (dialog.active) {\n            dialog.active = false\n         }\n      })\n\n      return newState\n   }\n   else if(action.type === 'MESSAGES_RECEIVED'){\n      let newState = [...state]\n      if (action.messages.length) {\n         let conversationId = action.messages[0].ConversationId\n         let conversationType = action.messages[0].conversationType\n         newState.forEach(dialog => {\n            if (dialog.ConversationId === conversationId && dialog.ConversationType === conversationType) {\n               // set a flag by which when opening a dialog we check whether messages were requested for it\n               dialog.messagesRecieved = true\n               // dialogue preview is displayed in the sidebar\n               dialog.PreviewText = action.messages[0].Text\n               // if the dialogue is not open, then wrap the unread counter\n               if(!dialog.active) {\n                  dialog.UnreadedCount += 1\n               }\n               // raise the dialogue to the first place in the sidebar\n               // let dialogIndex = newState.indexOf(dialog)\n               // newState.splice(dialogIndex, 1)\n               // newState.unshift(dialog)\n            }\n         })\n      }\n\n      return newState\n   }\n   else {\n      return state\n   }\n}\n","/* eslint-disable */\n// Only one chat object is stored in chats, information about which is currently being viewed\nexport function chats(state = [], action) {\nif (action.type === 'CHATS_RECEIVED') {\n    let newState = [...state];\n    newState = action.chats;\n    return newState;\n  }\n  else if (action.type === 'CHATS_USERS_RECEIVED') {\n    let newState = [...state];\n    if (newState[0].Id === action.chatsUsers[0].ChatId) {\n      newState[0].Users = action.chatsUsers;\n    }\n    return newState;\n  }\n  else {\n    return state;\n  }\n}\n","/* eslint-disable  */\n\nfunction sortMessages(messages) {\n  return messages.sort(function(a, b) {\n    let a_date = new Date(a.SendingTime)\n    let b_date = new Date(b.SendingTime)\n    if (a_date < b_date) {\n      return -1\n    } if (a_date > b_date) {\n      return 1\n    } else {\n      return 0\n    }\n  })\n}\n\nexport function messages(state = [], action) {\n  if (action.type === \"MESSAGES_RECEIVED\") {\n    let newState = [...state]\n    action.messages.forEach(message => {\n      let existence = newState.find(mess => mess.GlobalId === message.GlobalId)\n      if (!existence) {\n        newState.push(message)\n      }\n    })\n\n    return sortMessages(newState)\n  }\n  else if(action.type === \"READ_MESSAGES\") {\n    let newState = [...state]\n    \n    newState.forEach(message => {\n      if (message.ConversationId === action.data.ConversationId && message.ConversationType === action.data.ConversationType) {\n        message.Read = true\n      }\n    })\n\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\nexport function users(state = [], action) {\n  if(action.type === 'USER_RECEIVED') {\n    let newState = state;\n    \n    if(action.users.length > 0) {\n      let foundUser = newState.find(user => user.Id === action.users[0].Id);\n\n      if (!foundUser) {\n        newState = [...newState, ...action.users];\n      }\n    }\n    \n    return newState;\n  } else {\n    return state;\n  }\n}\n","/* eslint-disable */\nexport function forwardMessage(state = false, action) {\n  if (action.type === \"FORWARD_MESSAGE\") {\n    let newState = state\n\n    newState = action.message\n\n    return newState\n  } else {\n    return state\n  }\n}\n","/* eslint-disable */\nexport function auth(state = \"CHECK_AUTH\", action) {\n  if(action.type === 'SET_AUTH') {\n    let newState = state\n    newState = action.auth\n    return newState\n  }\n  return state\n}\n","/* eslint-disable */\nexport function callbacks(state = [], action) {\n  if (action.type === 'SET_CALLBACK_ID') {\n    let newState = [...state]\n    let callbackData = {\n      id: action.id,\n      data: null\n    }\n    newState.push(callbackData)\n    return newState\n  }\n  else if (action.type === 'SET_CALLBACK_DATA') {\n    let newState = [...state]\n    newState.forEach(callback => {\n      if (callback.id === action.response.RequestId) {\n        callback.data = action.response\n      }\n    })\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\nimport JSONbig from \"json-bigint\"\n// const defaultState = {\n//   symmetricKey: null,\n//   keysPair: null\n// }\n\nexport function publicKeys(state = [], action) {\n  if(action.type === 'SET_PUBLIC_KEYS') {\n    let newState = [...state]\n\n    action.publicKeys.forEach(publicKey => {\n      let foundPublicKey = newState.find(key => JSONbig.stringify(key.KeyId) === JSONbig.stringify(publicKey.KeyId))\n      if (!foundPublicKey) {\n        newState.push(publicKey)\n      }\n    })\n\n    return newState\n  } else {\n    return state\n  }\n}\n","/* eslint-disable */\nexport function searchResult(state = null, action) {\n  if(action.type === 'SEARCH_RESULT_RECEIVED') {\n    let newState = {...state}\n    newState = action.searchResult\n    return newState\n  }\n  else if(action.type === 'SEARCH_END') {\n    let newState = {...state}\n    newState = null\n    return newState\n  }\n  else {\n    return state\n  }\n}\n","/* eslint-disable */\n// const defaultState = {\n//   symmetricKey: null,\n//   keysPair: null\n// }\n\nexport function symmetricKey(state = null, action) {\n  if(action.type === 'SET_SYMMETRIC_KEY') {\n    let newState = state\n    newState = action.symmetricKey\n    return newState\n  } else {\n    return state\n  }\n}\n","/* eslint-disable */\n// const defaultState = {\n//   symmetricKey: null,\n//   keysPair: null\n// }\n\nexport function symmetricKeysForDecrypt(state = [], action) {\n  if(action.type === 'SET_SYMMETRIC_KEY_FOR_DECRYPT') {\n    let newState = [...state]\n    let keyAdded = newState.find(key => key.KeyId === action.symmetricKeyForDecrypt.KeyId)\n    if (!keyAdded) {\n      newState.push(action.symmetricKeyForDecrypt)\n    }\n\n    return newState\n  } else {\n    return state\n  }\n}\n","export function dialogsReceived(dialogs) {\n  return {\n    type: \"DIALOGS_RECEIVED\",\n    dialogs\n  }\n}\n\nexport function chatsReceived(chats) {\n  return {\n    type: \"CHATS_RECEIVED\",\n    chats\n  }\n}\n\nexport function messagesReceived(messages) {\n  return {\n    type: \"MESSAGES_RECEIVED\",\n    messages\n  }\n}\n\nexport function readMessages(data) {\n  return {\n    type: \"READ_MESSAGES\",\n    data\n  }\n}\n\nexport function forwardingMessage(message) {\n  return {\n    type: \"FORWARD_MESSAGE\",\n    message\n  }\n}\n\nexport function openDialog(payload) {\n  return {\n    type: \"OPEN_DIALOG\",\n    payload\n  }\n}\n\nexport function closeDialog() {\n  return {\n    type: \"CLOSE_DIALOG\"\n  }\n}\n","export function userReceived(users) {\n  return {\n    type: \"USER_RECEIVED\",\n    users\n  }\n}\n\nexport function chatsUsersReceived(chatsUsers) {\n  return {\n    type: \"CHATS_USERS_RECEIVED\",\n    chatsUsers\n  }\n}\n","/* eslint-disable */\nexport function openProfile(dialog) {\n  return {\n    type: \"OPEN_PROFILE\",\n    dialog\n  }\n}\n\nexport function toggleDrawer(name) {\n  return {\n    type: \"TOGGLE_DRAWER\",\n    name\n  }\n}\n\nexport function toggleModal(name) {\n  return {\n    type: \"TOGGLE_MODAL\",\n    name: name\n  }\n}\n\nexport function setAppFocus(data) {\n  return {\n    type: \"SET_APP_FOCUS\",\n    data\n  }\n}\n\nexport function toggleCryptoMode(isCrypto) {\n  return {\n    type: \"TOGGLE_CRYPTO_MODE\",\n    isCrypto\n  }\n}\n","/* eslint-disable */\nimport JSONbig from \"json-bigint\"\n\nclass Connect {\n  constructor() {\n    this.reconnectInterval\n    this.needReconnect = true\n  }\n\n  start(domain){\n    this.webSocket = new WebSocket(`wss://${domain}:5000`)\n    // this.webSocket = new WebSocket(`wss://testnode1-1.ymess.org:5000`)\n\n    this.webSocket.onopen = () => {\n      // console.log(\"Соединение установлено\")\n      this.needReconnect = true\n      clearInterval(this.reconnectInterval)\n      this.wsOnConnect()\n    }\n\n    this.webSocket.onclose = event => {\n      if (event.wasClean) {\n        // console.log(\"Соединение закрыто\")\n      } else {\n        // reconnect\n        // console.log(\"Обрыв соединения\")\n        if(this.webSocket.readyState === 3 && this.needReconnect) {\n          this.reconnectInterval = setInterval(() => {\n            this.start(JSON.parse(localStorage.getItem('node')).Domains[0])\n          }, 3000)\n        }\n      }\n      // console.log(\"Код: \", event)\n    }\n\n    this.webSocket.onmessage = event => {\n      const message = this.blobToJson(event.data)\n\n      if (message.ErrorCode && message.ErrorCode !== 0) {\n        // console.log('%c REQUEST ERR ',  'background: #ff4545; color: #bada55; padding: 3px', message)\n        this.onMessageReg(message)\n      } else {\n        this.onMessage(message)\n        this.onMessageAuth(message)\n        this.onMessageReg(message)\n        // console.log(\n        //   \"%c RESPONSE \",\n        //   \"background: #00ff00; color: #000; padding: 3px\",\n        //   this.blobToJson(event.data)\n        // )\n      }\n    }\n\n    this.webSocket.onerror = error => {\n      // console.log('%c ERROR CONNECT ',  'background: red; color: #bada55; padding: 3px', error);\n    }\n  }\n\n  close(){\n    this.needReconnect = false\n    this.webSocket.close(1000, 'changeNode')\n  }\n\n  getStatus(){\n    return this.webSocket.readyState\n  }\n\n  blobToJson(data) {\n    var u, x\n    u = URL.createObjectURL(data)\n    x = new XMLHttpRequest()\n    x.open(\"GET\", u, false)\n    x.send()\n    URL.revokeObjectURL(u)\n\n    return JSONbig.parse(x.responseText)\n  }\n\n  makeId() {\n    var result = \"\"\n    var characters = \"0123456789\"\n    var charactersLength = characters.length\n    for (var i = 0; i < 14; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength))\n    }\n\n    return parseInt(result)\n  }\n\n  send(data) {\n    // console.log(\n    //   \"%c REQUEST \",\n    //   \"background: #222; color: #bada55; padding: 3px\",\n    //   data\n    // )\n    this.webSocket.send(JSON.stringify(data))\n  }\n\n  onMessage() {}\n\n  onMessageAuth() {}\n\n  onMessageReg(){}\n\n  wsOnConnect() {}\n}\n\nconst wSocket = new Connect()\n\nexport default wSocket\n","/* eslint-disable */\nexport function setActiveNode(node) {\n  return {\n    type: \"SET_NODE\",\n    node\n  }\n}\n\nexport function setNodes(nodes) {\n  return {\n    type: \"SET_NODES\",\n    nodes\n  }\n}","export function setPath(path) {\n  return {\n    type: \"SET_PATH\",\n    path: path\n  }\n}\n\nexport function setPrevPath() {\n  return {\n    type: \"PREV_PATH\"\n  }\n}","/* eslint-disable */\nimport React, { Component } from \"react\"\nimport { Row, Col, Button, Menu, Dropdown, Icon } from \"antd\"\n// import { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport socket from \"../transport/Connect\"\nimport { setActiveNode } from \"../actions/node\"\nimport { setPath } from \"../actions/path\"\n\nclass Auth extends Component {\n  constructor() {\n    super()\n    // this.state = {\n    //   nodes: [],\n    //   activeNode: null\n    // }\n  }\n\n  componentDidMount() {\n    // this.setState({\n    //   nodes: JSON.parse(localStorage.getItem(\"nodes\")),\n    //   activeNode: JSON.parse(localStorage.getItem(\"node\"))\n    // })\n  }\n\n  selectNode(node) {\n    // this.setState({\n    //   activeNode: node.item.props.data\n    // })\n    this.props.setActiveNode(node.item.props.data)\n    localStorage.setItem(\"node\", JSON.stringify(node.item.props.data))\n  }\n\n  connectNode(path) {\n    if (this.props.node.activeNode) {\n      socket.start(this.props.node.activeNode.Domains[0])\n    } else {\n      if(this.props.node.allNodes) {\n        socket.start(this.props.node.allNodes[0].Domains[0])\n        this.props.setActiveNode(this.props.node.allNodes[0])\n        localStorage.setItem(\"node\", JSON.stringify(this.props.node.allNodes[0]))\n      }\n    }\n    this.props.setPath(path)\n  }\n\n  render() {\n    const menu = (\n      <Menu onClick={this.selectNode.bind(this)}>\n        {\n          this.props.node.allNodes ?\n            this.props.node.allNodes.map((node, i) => {\n              return (\n                <Menu.Item key={i} data={node}>\n                  {node.Name}\n                </Menu.Item>\n              )\n            })\n          : null\n        }\n      </Menu>\n    )\n    return (\n      <Row\n        type=\"flex\"\n        align=\"middle\"\n        justify=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Col>\n          <div className=\"auth__type\">\n            <h1>Вход</h1>\n            <h2>Выберите способ входа</h2>\n            <Button type=\"secondary\" onClick={this.connectNode.bind(this, 'by-phone')}>По номеру телефона</Button>\n            <br />\n            <Button type=\"secondary\" onClick={this.connectNode.bind(this, 'by-email')}>По электронной почте</Button>\n            <br />\n            <Button type=\"secondary\">Через приложение</Button>\n            <br />\n            <br />\n            <Button type=\"link\" onClick={this.connectNode.bind(this, 'registration')}>Регистрация</Button>\n            <br />\n            <div className=\"auth__type_server\">\n              <span>Сервер: </span>\n              <Dropdown overlay={menu}>\n                <span className=\"ant-dropdown-link\">\n                  {localStorage.getItem(\"node\")\n                    ? JSON.parse(localStorage.getItem(\"node\")).Name\n                    : \"Автоматически\"}\n                  <Icon type=\"down\" />\n                </span>\n              </Dropdown>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    node: state.node\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveNode: node => dispatch(setActiveNode(node)),\n    setPath: path => dispatch(setPath(path))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { Row, Col, Button, Form, Input, Dropdown, Menu, Icon, message } from \"antd\"\nimport { connect } from \"react-redux\"\nimport socket from \"../transport/Connect\"\n\nfunction Registration(props) {\n  const [name, setName] = useState(\"\")\n  const [surname, setSurname] = useState(\"\")\n  const [phone, setPhone] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [verifyCode, setVerifyCode] = useState(\"\")\n  const [nameErr, setNameErr] = useState(false)\n  const [emailErr, setEmailErr] = useState(false)\n  const [phoneErr, setPhoneErr] = useState(false)\n  const [contactsErr, setContactsErr] = useState(false)\n  const [verifyCodeErr, setVerifyCodeErr] = useState(false)\n  const [btnLoader, setbtnLoader] = useState(false)\n  const [activeNode, setActiveNode] = useState(null)\n  const [showRegButton, setShowRegButton] = useState(false)\n\n  useEffect(() => {\n    socket.onMessageReg = data => {\n      console.log(data)\n      if (data.ErrorCode !== 0) {\n        if(data.ErrorCode === 18){\n          let errMessage = JSON.parse(data.Message)\n          if(errMessage.Phone) {\n            setPhoneErr(errMessage.Phone)\n          } else if(errMessage.Email) {\n            setEmailErr(errMessage.Email)\n          }\n        } else {\n          message.warning(data.Message)\n        }\n      } else if (data.ResponseType === 6) {\n        localStorage.setItem(\"FileAccessToken\", data.FileAccessToken)\n        localStorage.setItem(\"AccessToken\", data.Token.AccessToken)\n        localStorage.setItem(\"RefreshToken\", data.Token.RefreshToken)\n        localStorage.setItem(\"User\", JSON.stringify(data.User))\n\n        window.location.replace(\"/\")\n      } else if (data.ResponseType === 10) {\n          setShowRegButton(true)\n      }\n    }\n\n    setActiveNode(JSON.parse(localStorage.getItem(\"node\")))\n  }, [])\n\n  const handleRegistration = () => {\n    if (!verifyCode) {\n      setVerifyCodeErr(\"Это поле обязательно для заполнения\")\n    } else {\n      setbtnLoader(true)\n\n      const regData = {\n        User: {\n          Id: 0,\n          Phones: phone ? [{FullNumber: `+7${phone}`}] : null,\n          NameFirst: name,\n          NameSecond: surname,\n          About: \"\",\n          Photo: \"\",\n          Country: \"\",\n          City: \"\",\n          Birthday: \"\",\n          Language: null,\n          NodeId: activeNode.Id,\n          Online: null,\n          Emails: email ? [email] : null,\n          Blacklist: null,\n          Visible: null,\n          Security: null,\n          Tag: 0,\n          RegistrationDate: null\n        },\n        VCode: parseInt(verifyCode),\n        RequestId: socket.makeId(),\n        RequestType: 37,\n        Type: 0\n      }\n\n      socket.send(regData)\n    }\n  }\n\n  const handleSetName = e => {\n    setName(e.target.value)\n    setNameErr(false)\n  }\n\n  const handleSetSurname = e => {\n    setSurname(e.target.value)\n  }\n\n  const handleSetPhone = e => {\n    const { value } = e.target\n    const reg = /^-?\\d*(\\.\\d*)?$/\n    if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\n      setPhone(e.target.value)\n      setPhoneErr(false)\n    } else {\n      setPhoneErr('Это поле может содержать только цифры')\n    }\n\n    setContactsErr(false)\n  }\n\n  const handleSetEmail = e => {\n    const validateEmail = email => {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n\n    setEmail(e.target.value)\n    setContactsErr(false)\n\n    if (!validateEmail(e.target.value)) {\n      setEmailErr(\"Некорректный email адрес\")\n    } else {\n      setEmailErr(false)\n    }\n\n    if (e.target.value.length === 0) {\n      setEmailErr(false)\n    }\n  }\n\n  const handleSetVerifyCode = e => {\n    setVerifyCode(e.target.value)\n    setVerifyCodeErr(false)\n  }\n\n  const connectNode = (node) => {\n    if (node) {\n      socket.close()\n      socket.start(node.Domains[0])\n    }\n  }\n\n  const selectNode = data => {\n    if (data.item.props.data) {\n      connectNode(data.item.props.data)\n      setActiveNode(data.item.props.data)\n      localStorage.setItem(\"node\", JSON.stringify(data.item.props.data))\n    }\n  }\n\n  const menu = (\n    <Menu onClick={(node) => selectNode(node)}>\n      {props.nodes.map((node, i) => {\n        return (\n          <Menu.Item key={i} data={node}>\n            {node.Name}\n          </Menu.Item>\n        )\n      })}\n      {\n        // this.state.activeNode ? <Menu.Item key='auto' data={null}>Автоматически</Menu.Item> : null\n      }\n    </Menu>\n  )\n\n  const getVerifyCode = () => {\n    if (name.length === 0) {\n      setNameErr(\"Это поле обязательно для заполнения\")\n    } else if (phone.length === 0 && email.length === 0) {\n      setContactsErr(\"Одно из этих полей обязательно для заполнения\")\n    } else if (phone.length > 0 && phone.length != 10) {\n      setPhoneErr('Номер должен состоять из 10 цифр')\n    } else {\n      const requestId = socket.makeId()\n      const verifyData = {\n        VerificationType: email ? 1 : phone ? 0 : 0,\n        Uid: phone ? `+7${phone}` : email,\n        IsRegistration: true,\n        RequestId: requestId,\n        RequestType: 42,\n        Type: 0\n      }\n      \n      setPhoneErr(false)\n      socket.send(verifyData)\n    }\n  }\n\n  return (\n    <Row\n      type=\"flex\"\n      align=\"middle\"\n      justify=\"center\"\n      style={{ height: \"100vh\" }}\n    >\n      <Col>\n        <div className=\"auth__type\">\n          <h1>Регистрация</h1>\n          <div>\n            <Form className=\"login-form\">\n              {\n                showRegButton ? \n                  <>\n                    <div className=\"verify-text\">{`Мы отправили вам код подтверждения на ваш ${phone ? 'телефон' : 'email'}, пожалуйста введите его в поле ниже и завершите регистрацию`}</div>\n                    <Form.Item\n                      validateStatus={verifyCodeErr ? \"error\" : \"\"}\n                      help={verifyCodeErr || \"\"}\n                    >\n                      <Input placeholder=\"Код\" value={verifyCode} onChange={handleSetVerifyCode} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            onClick={handleRegistration}\n                            loading={btnLoader}\n                          >\n                            Зарегистрироваться\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </>\n                :\n                  <>\n                    <Form.Item\n                      validateStatus={nameErr ? \"error\" : \"\"}\n                      help={nameErr || \"\"}\n                    >\n                      <Input placeholder=\"Имя\" onChange={handleSetName} />\n                    </Form.Item>\n                    <Form.Item validateStatus=\"\">\n                      <Input placeholder=\"Фамилия\" onChange={handleSetSurname} />\n                    </Form.Item>\n                    <Form.Item\n                      validateStatus={contactsErr || phoneErr ? \"error\" : \"\"}\n                      help={contactsErr || phoneErr || \"\"}\n                    >\n                      <Input addonBefore=\"+7\" placeholder=\"Номер телефона\" value={phone} disabled={email.length ? true : false} onChange={handleSetPhone} />\n                    </Form.Item>\n                    <div className=\"verify-text\"><span>или</span></div>\n                    <Form.Item\n                      validateStatus={contactsErr || emailErr ? \"error\" : \"\"}\n                      help={contactsErr || emailErr || \"\"}\n                    >\n                      <Input placeholder=\"Email\" disabled={phone.length ? true : false} onChange={handleSetEmail} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            onClick={() => getVerifyCode()}\n                            disabled={name && phone || email ? false : true}\n                          >\n                            Получить код\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </>\n              }\n            </Form>\n            <div className=\"auth__type_server\">\n              <span>Сервер: </span>\n              <Dropdown overlay={menu}>\n                <span className=\"ant-dropdown-link\">\n                  {activeNode\n                    ? activeNode.Name\n                    : \"Автоматически\"}\n                  <Icon type=\"down\" />\n                </span>\n              </Dropdown>\n            </div>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    nodes: state.node.allNodes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration)","export function setAuth(auth) {\n  return {\n    type: \"SET_AUTH\",\n    auth\n  }\n}\n","/* eslint-disable */\n// import React from \"react\"\n// import { connect } from \"react-redux\"\n// import selectors from \"../selectors\"\nimport Crypto from \"y_crypto\"\nimport socket from \"../transport/Connect\"\nimport helpers from \"../helpers\"\n\n// we form an array with all the keys (and encryption and signatures)\nlet allEnctyptKeys = JSON.parse(localStorage.getItem(\"keysPair\"))\nlet allSignKeys = JSON.parse(localStorage.getItem(\"signKeysPair\"))\nlet formatedAllKeys = null\nif(allEnctyptKeys && localStorage.getItem(\"User\")) {\n  formatedAllKeys = allEnctyptKeys.map(key => {\n    let formatedEnctyptKey = {\n      KeyId: key.id,\n      UserId: JSON.parse(localStorage.getItem(\"User\")).Id,\n      PublicKey: key.public,\n      PrivateKey: key.private,\n      Lifetime: 99999,\n      GenerationTime: 0,\n      IsSign: false\n    }\n    return formatedEnctyptKey\n  })\n}\n\nif(allSignKeys && localStorage.getItem(\"User\")) {\n  allSignKeys.forEach(key => {\n    let formatedSignKey = {\n      KeyId: key.id,\n      UserId: JSON.parse(localStorage.getItem(\"User\")).Id,\n      PublicKey: key.public,\n      PrivateKey: key.private,\n      Lifetime: 99999,\n      GenerationTime: 0,\n      IsSign: true\n    }\n  \n    formatedAllKeys.push(formatedSignKey)\n  })\n}\n\nexport function devicesKeysExchange(interlocutorPublicKey, requestId) {\n  // encrypt and send keys\n  const encoder = new TextEncoder()\n  const masterPassword = encoder.encode('qwerty')\n  let masterPasswordId = BigInt(1)\n  const crypto = new Crypto(masterPassword, masterPasswordId)\n\n  let mySignPrivateKey = JSON.parse(localStorage.getItem(\"signKeysPair\"))[JSON.parse(localStorage.getItem(\"signKeysPair\")).length-1]\n  let symmetricKyeId = socket.makeId()\n  crypto.setPublicEncryptKeyToSend(helpers.base64ToBuffer(interlocutorPublicKey))\n  crypto.setPrivateSignKeyToSend(helpers.base64ToBuffer(mySignPrivateKey.private))\n  crypto.getSymmetricKey(1, symmetricKyeId, 99999, ).then(symmetricKey => {\n    crypto.setSymmetricKey(symmetricKey)\n\n    // encrypt an array of all keys\n    crypto.encryptSecretMsg(1, 1, 99999, encoder.encode(JSON.stringify(formatedAllKeys))).then(encryptedData => {\n      // console.log(encryptedData)\n\n      // we encrypt the symmetric key itself on which the array of all keys is encrypted\n      crypto.encryptKeyMsg(1, 99999, symmetricKey).then(encryptedSymmetricKey => {\n        // console.log(encryptedSymmetricKey)\n\n        let clientResponse = {\n          ResponseType: 1,\n          Type: 9,\n          EncryptedSymmetricKey: helpers.bufferToBase64(encryptedSymmetricKey),\n          EncryptedData: helpers.bufferToBase64(encryptedData),\n          PublicKey: mySignPrivateKey.public,\n          RequestId: requestId\n        }\n\n        socket.send(clientResponse)\n      }).catch(err => {\n        // console.log(err)\n      })\n    }).catch(err => {\n      // console.log(err)\n    })\n  }).catch(err => {\n    // console.log(err)\n  })\n}\n\nexport function setKeysFromAnotherDevice(data){\n  const encoder = new TextEncoder()\n  const decoder = new TextDecoder()\n  const masterPassword = encoder.encode('qwerty')\n  let masterPasswordId = BigInt(1)\n  const crypto = new Crypto(masterPassword, masterPasswordId)\n\n  let myEncryptKey = JSON.parse(localStorage.getItem(\"keysPair\"))[JSON.parse(localStorage.getItem(\"keysPair\")).length-1]\n\n  crypto.setPublicSignKeyToRecive(helpers.base64ToBuffer(data.PublicKey))\n  crypto.setPrivateEncryptKeyToRecive(helpers.base64ToBuffer(myEncryptKey.private))\n\n  crypto.decryptKeyMsg(helpers.base64ToBuffer(data.EncryptedSymmetricKey)).then(decryptSymmetricKey => {\n    // console.log('симметричный расшифрован - ', decryptSymmetricKey)\n    if(decryptSymmetricKey) {\n      crypto.setSymmetricKey(decryptSymmetricKey.key)\n      // console.log(helpers.base64ToBuffer(data.EncryptedKeys))\n      crypto.decryptSecretMsg(helpers.base64ToBuffer(data.EncryptedKeys)).then(result => {\n        // console.log('Ключи с другого устройства расшифрованы', decoder.decode(result.msg))\n        if(result.msg) {\n          let keysFromAnotherDevice = JSON.parse(decoder.decode(result.msg))\n          // console.log('allMyKeys', formatedAllKeys)\n          // console.log('keysFromAnotherDevice', keysFromAnotherDevice)\n\n          let idAllMykeys = []\n          if(formatedAllKeys){\n            idAllMykeys = formatedAllKeys.map(key => {\n              return key.KeyId\n            })\n          }\n\n          keysFromAnotherDevice.forEach(key => {\n            if(!idAllMykeys.includes(key.KeyId)){\n              if(key.IsSign) {\n                let allSignKeyPairs = JSON.parse(localStorage.getItem(\"signKeysPair\")) || []\n                let newKey = {}\n                newKey.id = key.KeyId\n                newKey.public = key.PublicKey\n                newKey.private = key.PrivateKey\n                allSignKeyPairs.push(newKey)\n            \n                localStorage.setItem(\"signKeysPair\", JSON.stringify(allSignKeyPairs))\n              } \n              else {\n                let allEncryptKeyPairs = JSON.parse(localStorage.getItem(\"keysPair\")) || []\n                let newKey = {}\n                newKey.id = key.KeyId\n                newKey.public = key.PublicKey\n                newKey.private = key.PrivateKey\n                allEncryptKeyPairs.push(newKey)\n            \n                localStorage.setItem(\"keysPair\", JSON.stringify(allEncryptKeyPairs))\n              }\n            }\n          })\n        }\n      }).catch(err => {\n        // console.log(err)\n      })\n    }\n  }).catch(err => {\n    // console.log(err)\n  })\n}","import {bufferToBase64, base64ToBuffer} from \"./Helpers\"\nimport {devicesKeysExchange, setKeysFromAnotherDevice} from \"./DevicesKeysExchange\"\n\nexport default {\n  bufferToBase64,\n  base64ToBuffer,\n  devicesKeysExchange,\n  setKeysFromAnotherDevice\n}\n","export function bufferToBase64(buf) {\n  const binstr = Array.prototype.map.call(buf, function (ch) {\n      return String.fromCharCode(ch)\n  }).join('')\n  return btoa(binstr)\n}\n\nexport function base64ToBuffer(base64) {\n  let binstr = atob(base64)\n  let buf = new Uint8Array(binstr.length)\n  Array.prototype.forEach.call(binstr, function (ch, i) {\n    buf[i] = ch.charCodeAt(0)\n  })\n  return buf\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\"\nimport { Row, Col, Button, Form, Input, Icon } from \"antd\"\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { setAuth } from \"../actions/auth\"\nimport { setPrevPath } from \"../actions/path\"\nimport socket from \"../transport/Connect\"\nimport Crypto from \"y_crypto\"\nimport helpers from \"../helpers\"\n\nclass Verify extends Component {\n  constructor() {\n    super()\n    this.state = {\n      verifyUid: null,\n      verifyErr: null,\n      verifyRequestSended: false,\n      verifyCode: null,\n      verifyCodeErr: null,\n      btnPreloader: false,\n      redirect: false\n    }\n  }\n\n  componentDidMount() {\n    socket.onMessageAuth = data => {\n      this.setState({\n        btnPreloader: false\n      })\n\n      if (data.ErrorCode !== 0) {\n        this.setState({\n          verifyErr: data.Message\n        })\n      } else if (data.ResponseType === 10) {\n        this.setState({\n          verifyRequestSended: true\n        })\n      } else if (data.ResponseType === 6) {\n        localStorage.setItem(\"FileAccessToken\", data.FileAccessToken)\n        localStorage.setItem(\"AccessToken\", data.Token.AccessToken)\n        localStorage.setItem(\"RefreshToken\", data.Token.RefreshToken)\n        localStorage.setItem(\"User\", JSON.stringify(data.User))\n\n        this.props.setAuth(\"AUTH_SUCCESS\")\n\n        this.setState({\n          redirect: true\n        })\n      }\n    }\n\n    // encryption\n    const encoder = new TextEncoder()\n    const masterPassword = encoder.encode('qwerty')\n    let masterPasswordId = BigInt(1)\n    const crypto = new Crypto(masterPassword, masterPasswordId)\n\n    const setKeyPair = (keys, keysId) => {\n      let allKeyPairs = JSON.parse(localStorage.getItem(\"keysPair\")) || []\n      let keysInBase64 = keys\n      keysInBase64.id = keysId\n      keysInBase64.public = helpers.bufferToBase64(keys.public)\n      keysInBase64.private = helpers.bufferToBase64(keys.private)\n      allKeyPairs.push(keysInBase64)\n  \n      localStorage.setItem(\"keysPair\", JSON.stringify(allKeyPairs))\n    }\n\n    const setSignKeyPair = (keys, keysId) => {\n      let allKeyPairs = JSON.parse(localStorage.getItem(\"signKeysPair\")) || []\n      let keysInBase64 = keys\n      keysInBase64.id = keysId\n      keysInBase64.public = helpers.bufferToBase64(keys.public)\n      keysInBase64.private = helpers.bufferToBase64(keys.private)\n      allKeyPairs.push(keysInBase64)\n  \n      localStorage.setItem(\"signKeysPair\", JSON.stringify(allKeyPairs))\n    }\n\n    let cryptoKeysId = socket.makeId()\n\n    // create encryption keys\n    crypto.getKeyPairShort(1, cryptoKeysId, 99999, true).then(data => {\n      setKeyPair(data, cryptoKeysId)\n      cryptoKeysId = socket.makeId()\n      crypto.getKeyPairMidle(1, cryptoKeysId, 99999, true).then(data => {\n        setKeyPair(data, cryptoKeysId)\n        cryptoKeysId = socket.makeId()\n        crypto.getKeyPairLong(1, cryptoKeysId, 99999, true).then(data => {\n          setKeyPair(data, cryptoKeysId)\n        }).catch(err => {console.log()})\n      }).catch(err => {console.log()})\n    }).catch(err => {console.log()})\n\n    let signKeysId = socket.makeId()\n\n    // create signature keys\n    crypto.getKeyPairShort(1, signKeysId, 99999, false).then(data => {\n      setSignKeyPair(data, signKeysId)\n      signKeysId = socket.makeId()\n      crypto.getKeyPairMidle(1, signKeysId, 99999, false).then(data => {\n        setSignKeyPair(data, signKeysId)\n        signKeysId = socket.makeId()\n        crypto.getKeyPairLong(1, signKeysId, 99999, false).then(data => {\n          setSignKeyPair(data, signKeysId)\n        }).catch(err => {console.log()})\n      }).catch(err => {console.log()})\n    }).catch(err => {console.log()})\n\n  }\n\n  onChangePhone(e) {\n    if(this.props.verifyType === 'by-email') {\n      this.setState({\n        verifyUid: e.target.value,\n        verifyErr: null\n      })\n    } else if (this.props.verifyType === 'by-phone') {\n      const reg = /^-?\\d*(\\.\\d*)?$/\n      if ((!isNaN(e.target.value) && reg.test(e.target.value)) || e.target.value === '' || e.target.value === '-') {\n        this.setState({\n          verifyUid: e.target.value,\n          verifyErr: null\n        })\n      }\n    } \n  }\n\n  onChangeVerifCode(e) {\n    this.setState({\n      verifyCode: e.target.value,\n      verifyCodeErr: null\n    })\n  }\n\n  getOS() {\n    if (navigator.appVersion.indexOf('Windows') >= 0) return 'Windows'\n    else if (navigator.appVersion.indexOf('Android') >= 0) return 'Android'\n    else if (navigator.appVersion.indexOf('Mac') >= 0) return 'MacOS'\n    else return \"unknown\"\n  }\n\n  getDevice() {\n    if (navigator.userAgent.indexOf(\"Android\") >= 0) return \"Phone\"\n    else if (navigator.userAgent.indexOf(\"webOS\") >= 0) return \"webOS\"\n    else if (navigator.userAgent.indexOf(\"iPhone\") >= 0) return \"iPhone\"\n    else if (navigator.userAgent.indexOf(\"iPad\") >= 0) return \"iPad\"\n    else if (navigator.userAgent.indexOf(\"iPod\") >= 0) return \"iPod\"\n    else return \"PC\"\n  }\n\n  sendverifyCode(e) {\n    e.preventDefault()\n\n    this.setState({\n      btnPreloader: true\n    })\n\n    const data = {\n      Uid: this.props.verifyType === 'by-email' ? this.state.verifyUid : `+7${this.state.verifyUid}`,\n      VCode: this.state.verifyCode,\n      LoginType: 1,\n      UidType: this.props.verifyType === 'by-email' ? 2 : this.props.verifyType === 'by-phone' ? 0 : 0,\n      DeviceName: this.getDevice(),\n      OSName: this.getOS(),\n      AppName: \"Y messenger - WEB\",\n      RequestId: socket.makeId(),\n      RequestType: 33,\n      Type: 0\n    }\n\n    socket.send(data)\n  }\n\n  sendVerificationQuery(e) {\n    e.preventDefault()\n\n    const sendVerifyRequest = () => {\n      this.setState({\n        btnPreloader: true\n      })\n  \n      const data = {\n        VerificationType: this.props.verifyType === 'by-email' ? 1 : this.props.verifyType === 'by-phone' ? 0 : 0,\n        Uid: this.props.verifyType === 'by-email' ? this.state.verifyUid : `+7${this.state.verifyUid}`,\n        RequestId: socket.makeId(),\n        RequestType: 42,\n        Type: 0\n      }\n\n      socket.send(data)\n    }\n\n    if(this.props.verifyType === 'by-email') {\n      const validateEmail = email => {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n      }\n  \n      if (!validateEmail(this.state.verifyUid)) {\n        this.setState({\n          verifyErr: 'Некорректный email адрес'\n        })\n      } else {\n        sendVerifyRequest()\n        this.setState({\n          verifyErr: null\n        })\n      }\n    } else if (this.props.verifyType === 'by-phone') {\n      if (this.state.verifyUid.length > 0 && this.state.verifyUid.length != 10) {\n        this.setState({\n          verifyErr: 'Номер должен состоять из 10 цифр'\n        })\n      } else {\n        sendVerifyRequest()\n      }\n    }\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />\n    } else {\n      return (\n        <Row\n          type=\"flex\"\n          align=\"middle\"\n          justify=\"center\"\n          style={{ height: \"100vh\" }}\n        >\n          <Col>\n            <div className=\"auth__type\">\n              <div className=\"modal_back\" onClick={() => this.props.setPrevPath()}><Icon type=\"arrow-left\" /></div>\n              <h1>Вход</h1>\n              {!this.state.verifyRequestSended ? (\n                <div>\n                  <h2>\n                    {this.props.verifyType === 'by-email' ? 'Введите ваш email' : this.props.verifyType === 'by-phone' ? 'Введите номер телефона' : ''}\n                  </h2>\n                  <Form className=\"login-form\">\n                    <Form.Item\n                      validateStatus={this.state.verifyErr ? \"error\" : \"\"}\n                      help={this.state.verifyErr ? this.state.verifyErr : \"\"}\n                    >\n                      <Input\n                        autoFocus\n                        addonBefore={this.props.verifyType === 'by-phone' ? '+7' : false}\n                        inputMode={this.props.verifyType === 'by-email' ? 'email' : this.props.verifyType === 'by-phone' ? 'tel' : ''}\n                        placeholder={this.props.verifyType === 'by-email' ? 'Ваш email' : this.props.verifyType === 'by-phone' ? 'Ваш номер телефона' : ''}\n                        onChange={this.onChangePhone.bind(this)}\n                        value={this.state.verifyUid}\n                      />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            onClick={this.sendVerificationQuery.bind(this)}\n                            disabled={!this.state.verifyUid}\n                            loading={!!this.state.btnPreloader}\n                          >\n                            Получить {this.props.verifyType === 'by-email' ? 'письмо' : this.props.verifyType === 'by-phone' ? 'SMS' : ''} с кодом\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </Form>\n                </div>\n              ) : (\n                <div>\n                  <h2>Код подтверждения из {this.props.verifyType === 'by-email' ? 'письма' : this.props.verifyType === 'by-phone' ? 'SMS' : ''}</h2>\n                  <p>\n                    Мы отправили {this.props.verifyType === 'by-email' ? 'письмо' : this.props.verifyType === 'by-phone' ? ' SMS' : ''} \n                    на {this.props.verifyType === 'by-email' ? `email ${this.state.verifyUid}` : this.props.verifyType === 'by-phone' ? `номер +7${this.state.verifyUid}` : ''}. Введите\n                    полученый код в поле ниже\n                  </p>\n                  <Form\n                    onSubmit={this.sendverifyCode.bind(this)}\n                    className=\"login-form\"\n                  >\n                    <Form.Item\n                      validateStatus={this.state.verifyCodeErr ? \"error\" : \"\"}\n                      help={this.state.verifyCodeErr ? this.state.verifyCodeErr : \"\"}\n                    >\n                      <Input\n                        autoFocus\n                        inputMode='tel'\n                        placeholder={`Код из ${this.props.verifyType === 'by-email' ? 'письма' : this.props.verifyType === 'by-phone' ? 'SMS' : ''}, 4 цифры`}\n                        onChange={this.onChangeVerifCode.bind(this)}\n                      />\n                    </Form.Item>\n                    <Form.Item>\n                      <Row>\n                        <Col style={{ textAlign: \"center\" }}>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabled={!this.state.verifyCode}\n                            loading={!!this.state.btnPreloader}\n                          >\n                            Войти\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </Form>\n                </div>\n              )}\n            </div>\n          </Col>\n        </Row>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    verifyType: state.path.currentPath\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuth: auth => dispatch(setAuth(auth)),\n    setPrevPath: () => dispatch(setPrevPath())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Verify)\n","import { getFormatedMessages } from \"./Message\"\nimport {\n  getFormatedDialogs,\n  getFormatedChats,\n  getActiveDialog\n} from \"./Dialog\"\nimport {\n  getFormatedUser,\n  getFormatedChatsUsers,\n  getUserById,\n  getUserInitials\n} from \"./User\"\n\nexport default {\n  getFormatedMessages,\n  getFormatedDialogs,\n  getFormatedChats,\n  getFormatedChatsUsers,\n  getFormatedUser,\n  getUserById,\n  getUserInitials,\n  getActiveDialog\n}\n","// eslint-disable-next-line\nexport function getFormatedMessages(messages) {\n  const mess = []\n  messages.forEach(message => {\n    const tempMess = {\n      Attachments: message.Attachments,\n      ConversationId: message.ConversationId,\n      ConversationType: message.ConversationType,\n      GlobalId: message.GlobalId,\n      Read: message.Read,\n      SenderId: message.SenderId,\n      SendingTime: message.SendingTime,\n      Text: message.Text\n    }\n    mess.push(tempMess)\n  })\n\n  return mess\n}\n","// eslint-disable-next-line\nexport function getFormatedDialogs(data) {\n  const dialogs = []\n  data.forEach(dialog => {\n    const tempDialogs = {\n      AttachmentType: dialog.AttachmentType,\n      ConversationId: dialog.ConversationId,\n      ConversationType: dialog.ConversationType,\n      IsMuted: dialog.IsMuted,\n      LastMessageId: dialog.LastMessageId,\n      LastMessageSenderId: dialog.LastMessageSenderId,\n      LastMessageSenderName: dialog.LastMessageSenderName,\n      LastMessageTime: dialog.LastMessageTime,\n      Photo: dialog.Photo,\n      PreviewText: dialog.PreviewText,\n      Read: dialog.Read,\n      SecondUid: dialog.SecondUid,\n      Title: dialog.Title,\n      UnreadedCount: dialog.UnreadedCount\n    }\n    dialogs.push(tempDialogs)\n  })\n\n  return dialogs\n}\n\nexport function getFormatedChats(data) {\n  const chats = []\n  data.forEach(chat => {\n    const tempChat = {\n      About: chat.About,\n      Id: chat.Id,\n      Key: chat.Key,\n      Name: chat.Name,\n      NodesId: chat.NodesId,\n      Photo: chat.Photo,\n      Public: chat.Public,\n      Security: chat.Security,\n      Tag: chat.Tag,\n      Type: chat.Type,\n      Users: chat.Users,\n      Visible: chat.Visible\n    }\n    chats.push(tempChat)\n  })\n\n  return chats\n}\n\nexport function getActiveDialog(dialogs) {\n  const dialog = dialogs.find(dialog => dialog.active)\n\n  return dialog\n}\n","// eslint-disable-next-line\nexport function getFormatedUser(data) {\n  const users = []\n  data.forEach(user => {\n    const tempUser = {\n      About: user.About,\n      Birthday: user.Birthday,\n      BlackList: user.BlackList,\n      City: user.City,\n      Confirmed: user.Confirmed,\n      Contact: user.Contact,\n      ContactsPrivacy: user.ContactsPrivacy,\n      Country: user.Country,\n      Emails: user.Emails,\n      Encryption: user.Encryption,\n      Groups: user.Groups,\n      Id: user.Id,\n      Keys: user.Keys,\n      Language: user.Language,\n      NameFirst: user.NameFirst,\n      NameSecond: user.NameSecond,\n      NodeId: user.NodeId,\n      Online: user.Online,\n      Phones: user.Phones,\n      Photo: user.Photo,\n      RegistrationDate: user.RegistrationDate,\n      Security: user.Security,\n      Tag: user.Tag,\n      Visible: user.Visible\n    }\n    users.push(tempUser)\n  })\n\n  return users\n}\n\nexport function getFormatedChatsUsers(data) {\n  const users = []\n  data.forEach(user => {\n    const tempUser = {\n      Banned: user.Banned,\n      ChatId: user.ChatId,\n      Deleted: user.Deleted,\n      InviterId: user.InviterId,\n      IsMuted: user.IsMuted,\n      Joined: user.Joined,\n      UserId: user.UserId,\n      UserInfo: user.UserInfo,\n      UserRole: user.UserRole\n    }\n    users.push(tempUser)\n  })\n\n  return users\n}\n\nexport function getUserById(id, users) {\n  const foundUser = users.find(user => user.Id === id)\n  return foundUser\n}\n\nexport function getUserInitials(dialog) {\n  if (!dialog.Photo) {\n    let initials = \"\"\n\n    if (dialog.Title || dialog.ChannelName) {\n      let defaultAva = dialog.Title || dialog.ChannelName\n      defaultAva = defaultAva.split(\" \", 2)\n\n      if (defaultAva[0]) {\n        initials = defaultAva[0][0]\n      }\n      if (defaultAva[1]) {\n        initials += defaultAva[1][0]\n      }\n    } else if (dialog.NameFirst) {\n      initials = dialog.NameFirst[0]\n      if (dialog.NameSecond) {\n        initials = initials + dialog.NameSecond[0]\n      }\n    } else {\n      const secondUid = dialog.SecondUid + ''\n      initials = secondUid.substr(0, 2)\n    }\n\n    return initials\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { openDialog } from \"../actions/dialogs\"\nimport selectors from \"../selectors\"\n\nclass SidebarItem extends Component {\n  constructor() {\n    super()\n    this.state = {\n      defaultAva: \"\"\n    }\n  }\n\n  componentDidMount() {\n    // cut the line with the last message (not css because 2 lines)\n    const size = 60\n    const newsContent = this.refs.messageText\n    const newsText = newsContent.innerText\n\n    if (newsText.length > size) {\n      newsContent.innerText = newsText.slice(0, size) + \" ...\"\n    }\n\n    // set initials to the state if there is no avatar\n    if (!this.props.dialog.Photo) {\n      this.setState({\n        defaultAva: selectors.getUserInitials(this.props.dialog)\n      })\n    }\n  }\n\n  openDialog() {\n    const payload = {}\n    payload.type = this.props.type\n    payload.data = this.props.dialog\n    this.props.openDialog(payload)\n  }\n\n  render() {\n    const avatarStyle = {\n      width: \"100%\",\n      height: \"100%\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center center\",\n      backgroundImage: `url(https://${this.props.node}:5000/api/Files/${this.props.dialog.Photo})`,\n      backgroundRepeat: \"no-repeat\"\n    }\n\n    // const defaultAvaBg = {\n    //   background: `hsl(${this.props.dialog.SecondUid}, 90%, 90%)`\n    // }\n\n    return (\n      <NavLink to={\"/\"} onClick={() => this.openDialog()}>\n        <div className=\"sidebar__item\">\n          <div className=\"sidebar__ava\">\n            {this.props.dialog.UnreadedCount > 0 ? (\n              <div className=\"sidebar__badge\">\n                {this.props.dialog.UnreadedCount}\n              </div>\n            ) : null}\n            <div className=\"sidebar__photo\">\n              {\n                this.props.dialog.Photo ?\n                  this.props.dialog.Photo.length > 0 ? \n                    <div style={avatarStyle} />\n                  : null\n                : \n                  <div className=\"sidebar__photo-default avatar-default\">\n                    {this.state.defaultAva}\n                  </div>\n              }\n            </div>\n          </div>\n          <div>\n            <div className=\"sidebar__name\">\n              <span>{this.props.dialog.Title || this.props.dialog.NameFirst + this.props.dialog.NameSecond || this.props.dialog.ChannelName || this.props.dialog.Name || 'Имя скрыто'}</span>\n            </div>\n            <div className=\"sidebar__message\" ref=\"messageText\">\n              {\n                this.props.dialog.PreviewText ? this.props.dialog.PreviewText :\n                this.props.dialog.AttachmentType ===  1 ? 'Файл' :\n                this.props.dialog.AttachmentType ===  2 ? 'Изображение' :\n                this.props.dialog.About ? this.props.dialog.About : null\n              }\n            </div>\n          </div>\n        </div>\n      </NavLink>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarItem)\n","/* eslint-disable */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport logo from \"../assets/logo.PNG\"\nimport { toggleDrawer } from \"../actions/ui\"\nimport { Icon } from 'antd';\n\nfunction HeadSidebar(props) {\n  return (\n    <div className=\"head-sidebar\">\n      <Icon type=\"menu\" className='menu-btn' onClick={() => props.toggleDrawer()} />\n      <div className=\"head-sidebar__logo\">\n        <img src={logo} alt=\"Y Messenger\" />\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleDrawer: () => dispatch(toggleDrawer())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadSidebar)","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Input } from \"antd\"\nimport { searchStart, searchEnd } from \"../actions/search\"\nimport socket from \"../transport/Connect\"\n\nconst { Search } = Input\n\nfunction SearchComponent(props) {\n  const [queryText, setQueryText] = useState(\"\")\n  const searchDialogs = value => {\n    // both text and event can come into function\n    if (typeof value === \"object\") {\n      setQueryText(value.target.value)\n    } else if (typeof value === \"string\") {\n      setQueryText(value)\n    }\n\n    if (queryText.length) {\n      props.searchStart(queryText.toLowerCase())\n    } else if (!queryText.length) {\n      props.searchEnd()\n    }\n\n    const searchRequest = {\n      RequestType: 46,\n      SearchQuery: queryText,\n      RequestId: socket.makeId(),\n      Direction: true,\n      Type: 0\n    }\n\n    socket.send(searchRequest)\n  }\n\n  return (\n    <div className=\"search\">\n      <Search\n        placeholder=\"Поиск\"\n        value={queryText}\n        onSearch={searchDialogs}\n        onChange={searchDialogs}\n        enterButton\n      />\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.ui.search\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchStart: data => dispatch(searchStart(data)),\n    searchEnd: () => dispatch(searchEnd())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent)\n","export function searchResultReceived(searchResult) {\n  return {\n    type: \"SEARCH_RESULT_RECEIVED\",\n    searchResult\n  }\n}\n\nexport function searchStart(text) {\n  return {\n    type: \"SEARCH_START\",\n    text\n  }\n}\n\nexport function searchEnd() {\n  return {\n    type: \"SEARCH_END\"\n  }\n}\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport SidebarItem from \"./SidebarItem\"\nimport HeadSidebar from \"./HeadSidebar\"\nimport Search from \"./Search\"\nimport { openDialog } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\n\nfunction Sidebar(props) {\n  const [localFoundDialogs, setLocalFoundDialogs] = useState([])\n\n  useEffect(() => {\n    if (props.search) {\n      const searchDialogs = props.dialogs.filter(dialog => {\n        if (!dialog.fake) {\n          if (dialog.Title) {\n            return dialog.Title.toLowerCase().indexOf(props.search) >= 0\n          }\n        }\n      })\n      setLocalFoundDialogs(searchDialogs)\n    } else {\n      setLocalFoundDialogs(props.dialogs)\n    }\n  }, [props.search, props.dialogs])\n\n  const showSidebarItem = () => {\n    return localFoundDialogs.map(dialog => {\n      if(dialog && !dialog.fake){\n        return <SidebarItem dialog={dialog} key={socket.makeId()} type='dialog' />\n      }\n    })\n  }\n\n  const showSearchResultChannels = () => {\n    if (props.searchResult.channels) {\n      return props.searchResult.channels.map((dialog, i) => {\n        if(dialog){\n          if (i === 0) {\n            return (\n              <div key={socket.makeId()}>\n                <div className=\"sidebar__title\">Каналы:</div>\n                <SidebarItem dialog={dialog} type=\"channel\" />\n              </div>\n            )\n          } else {\n            return (\n              <SidebarItem dialog={dialog} type=\"channel\" key={socket.makeId()} />\n            )\n          }\n        }\n      })\n    }\n  }\n\n  const showSearchResultChats = () => {\n    if (props.searchResult.chats) {\n      return props.searchResult.chats.map((dialog, i) => {\n        if(dialog){\n          if (i === 0) {\n            return (\n              <div key={socket.makeId()}>\n                <div className=\"sidebar__title\">Чаты:</div>\n                <SidebarItem dialog={dialog} type=\"chat\" />\n              </div>\n            )\n          } else {\n            return (\n              <SidebarItem dialog={dialog} type=\"chat\" key={socket.makeId()} />\n            )\n          }\n        }\n      })\n    }\n  }\n\n  const showSearchResultUsers = () => {\n    if (props.searchResult.users) {\n      return props.searchResult.users.map((dialog, i) => {\n        if(dialog){\n          if (i === 0) {\n            return (\n              <div key={socket.makeId()}>\n                <div className=\"sidebar__title\">Пользователи:</div>\n                <SidebarItem dialog={dialog} type=\"user\" />\n              </div>\n            )\n          } else {\n            return (\n              <SidebarItem dialog={dialog} type=\"user\" key={socket.makeId()} />\n            )\n          }\n        }\n      })\n    }\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <HeadSidebar />\n      <Search />\n      <div className=\"sidebar-viewport\">\n        {showSidebarItem()}\n        {props.searchResult ? showSearchResultUsers() : null}\n        {props.searchResult ? showSearchResultChats() : null}\n        {props.searchResult ? showSearchResultChannels() : null}\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    search: state.ui.search,\n    searchResult: state.searchResult\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport ReactTimeAgo from \"react-time-ago\"\nimport JavascriptTimeAgo from \"javascript-time-ago\"\nimport ru from \"javascript-time-ago/locale/ru\"\nimport { Icon, Switch } from \"antd\"\nimport socket from \"../transport/Connect\"\nimport { openProfile, toggleCryptoMode } from \"../actions/ui\"\nimport { closeDialog } from \"../actions/dialogs\"\nimport selectors from \"../selectors\"\n\nJavascriptTimeAgo.locale(ru)\n\nfunction HeadDialog(props) {\n  const [dialog, setDialog] = useState(null)\n  const [defaultAva, setDefaultAva] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [windowWidth, setWindowWidth] = useState(document.body.clientWidth)\n\n  useEffect(() => {}, [windowWidth])\n\n  window.onresize = () => {\n    setWindowWidth(document.body.clientWidth)\n  }\n\n  useEffect(() => {\n    if (props.users && dialog) {\n      const user = props.users.find(user => user.Id === dialog.SecondUid)\n      setUser(user)\n    }\n  }, [props.users, dialog])\n\n  useEffect(() => {\n    props.dialogs.forEach(dialog => {\n      if (dialog.active) {\n        setDialog(dialog)\n      }\n    })\n  }, [props.dialogs])\n\n  useEffect(() => {\n    if (dialog) {\n      // set initials to the state if there is no avatar\n      if (!dialog.Photo) {\n        setDefaultAva(selectors.getUserInitials(dialog))\n      }\n    }\n  }, [dialog])\n\n  const logout = () => {\n    const logout = {\n      Full: false,\n      AccessToken: localStorage.getItem(\"AccessToken\"),\n      RequestType: 34,\n      RequestId: socket.makeId(),\n      Type: 0\n    }\n\n    socket.send(logout)\n\n    localStorage.removeItem(\"AccessToken\")\n    localStorage.removeItem(\"FileAccessToken\")\n    localStorage.removeItem(\"RefreshToken\")\n    localStorage.removeItem(\"User\")\n\n    window.location.replace(\"/\")\n  }\n\n  const handleOpenProfile = () => {\n    props.openProfile(dialog)\n  }\n\n  return (\n    <div className=\"head-dialog\">\n      {windowWidth <= 675 && selectors.getActiveDialog(props.dialogs) ? (\n        <div className=\"head-dialog__back\" onClick={props.closeDialog} >\n          <Icon type=\"left\" />\n        </div>\n      ) : null}\n      <div className=\"head-dialog__user\" onClick={handleOpenProfile}>\n        <div className=\"head-dialog__ava\">\n          {dialog ? (\n            dialog.Photo ? (\n              <div\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center center\",\n                  backgroundImage: `url(https://${props.node}:5000/api/Files/${dialog.Photo})`,\n                  backgroundRepeat: \"no-repeat\"\n                }}\n              />\n            ) : (\n              <div className=\"head-dialog__photo-default avatar-default\">{defaultAva}</div>\n            )\n          ) : null}\n        </div>\n        <div>\n          <div className=\"head-dialog__name\">{dialog ? dialog.Title || dialog.ChannelName || 'Имя скрыто' : null}</div>\n          <div className=\"head-dialog__status\">\n            {user ?\n              user.Online ? \n                <ReactTimeAgo date={user.Online * 1000} locale=\"ru\" />\n              : null\n            : null}\n          </div>\n        </div>\n      </div>\n      {\n        dialog ? \n          dialog.ConversationType === 1 ?\n            <div className='switch-label'>\n              <div>Секретный чат</div>\n              <Switch onChange={value => props.toggleCryptoMode(value)} />\n            </div>\n          : null\n        : null\n      }\n      {/* <div className='head__lock'>\n        <LockIcon />\n      </div> */}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    users: state.users,\n    node: state.node.activeNode.Domains[0],\n    isCrypto: state.ui.isCrypto\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openProfile: data => dispatch(openProfile(data)),\n    closeDialog: () => dispatch(closeDialog()),\n    toggleCryptoMode: (isCrypto) => dispatch(toggleCryptoMode(isCrypto))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadDialog)\n","export function setCallbackId(id) {\n  return {\n    type: \"SET_CALLBACK_ID\",\n    id\n  }\n}\n\nexport function setCallbackData(response) {\n  return {\n    type: \"SET_CALLBACK_DATA\",\n    response\n  }\n}\n","/* eslint-disable */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport selectors from \"../selectors\"\n\nfunction Avatar(props) {\n  const avatarStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    backgroundImage: `url(https://${props.node}:5000/api/Files/${props.user.Photo})`,\n    backgroundRepeat: \"no-repeat\",\n    borderRadius: \"100%\"\n  }\n\n  return (\n    <div className=\"avatar\">\n      {\n        props.user.Photo ? \n          <div style={avatarStyle}></div>\n        :\n          <div className=\"avatar-default\">\n            {selectors.getUserInitials(props.user)}\n          </div>\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Avatar)\n","export function setSymmetricKey(symmetricKey) {\n  return {\n    type: \"SET_SYMMETRIC_KEY\",\n    symmetricKey\n  }\n}\n\nexport function setSymmetricKeyForDecrypt(symmetricKeyForDecrypt) {\n  return {\n    type: \"SET_SYMMETRIC_KEY_FOR_DECRYPT\",\n    symmetricKeyForDecrypt\n  }\n}\n\nexport function setPublicKeys(publicKeys) {\n  return {\n    type: \"SET_PUBLIC_KEYS\",\n    publicKeys\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"check\"\n}, React.createElement(\"polygon\", {\n  points: \"142.8,323.85 35.7,216.75 0,252.45 142.8,395.25 448.8,89.25 413.1,53.55  \"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgTickIcon = function SvgTickIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"448.8px\",\n    height: \"448.8px\",\n    viewBox: \"0 0 448.8 448.8\",\n    style: {\n      enableBackground: \"new 0 0 448.8 448.8\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTickIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/tick_icon.06277842.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"done-all\"\n}, React.createElement(\"path\", {\n  d: \"M448.8,161.925l-35.7-35.7l-160.65,160.65l35.7,35.7L448.8,161.925z M555.899,126.225l-267.75,270.3l-107.1-107.1 l-35.7,35.7l142.8,142.8l306-306L555.899,126.225z M0,325.125l142.8,142.8l35.7-35.7l-142.8-142.8L0,325.125z\"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgDoubleTickIcon = function SvgDoubleTickIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"594.149px\",\n    height: \"594.149px\",\n    viewBox: \"0 0 594.149 594.149\",\n    style: {\n      enableBackground: \"new 0 0 594.149 594.149\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDoubleTickIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/double_tick_icon.7319bcfe.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { Modal, Icon } from \"antd\"\nimport { connect } from \"react-redux\"\nimport { NavLink, Redirect } from \"react-router-dom\"\nimport selectors from \"../selectors\"\nimport { forwardingMessage, openDialog } from \"../actions/dialogs\"\nimport { setCallbackId } from \"../actions/callbacks\"\nimport Avatar from \"./Avatar\"\nimport Crypto from \"y_crypto\"\nimport { setSymmetricKey, setSymmetricKeyForDecrypt } from \"../actions/keys\"\nimport helpers from \"../helpers\"\nimport socket from \"../transport/Connect\"\nimport JSONbig from \"json-bigint\"\nimport { ReactComponent as TickIcon } from \"../assets/tick_icon.svg\"\nimport { ReactComponent as DoubleTickIcon } from \"../assets/double_tick_icon.svg\"\n\nfunction Message(props) {\n  const [visible, setVisible] = useState(false)\n  const [messageTime, setMessageTime] = useState(\"\")\n  const [isContextMenuVisible, setSsContextMenuVisible] = useState(false)\n  const [redirect, setRedirect] = useState(false)\n  const [decryptedMessage, setDecryptedMessage] = useState(null)\n  const [fileMsg, setFileMsg] = useState(false)\n  // const [encryptPublicKeyRequest, setEncryptPublicKeyRequest] = useState(null)\n  // const [signPublicKeyRequest, setSignPublicKeyRequest] = useState(null)\n  const user = selectors.getUserById(props.message.SenderId, props.users) || {}\n\n  const encoder = new TextEncoder()\n  const decoder = new TextDecoder()\n  const masterPassword = encoder.encode('qwerty')\n  let masterPasswordId = BigInt(1)\n  const crypto = new Crypto(masterPassword, masterPasswordId)\n\n  useEffect(() => {\n    if (props.message) {\n      // we form message time\n      const timestamp = new Date(props.message.SendingTime * 1000)\n      const date = new Date()\n      date.setTime(timestamp)\n\n      let hour = `${date.getHours()}`\n      let minutes = `${date.getMinutes()}`\n\n      if (hour.length === 1) {\n        hour = `0${hour}`\n      }\n      if (minutes.length === 1) {\n        minutes = `0${minutes}`\n      }\n\n      setMessageTime(`${hour}:${minutes}`)\n    }\n  }, [props.message])\n\n  // useEffect(() => {\n  // console.log(props.publicKeys)\n  // }, [props.publicKeys])\n\n  const setLinks = text => {\n    let str = text\n    let reg = false\n    if (str) {\n      reg = str.match(/(http|https|ftp|ftps)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(\\/\\S*)?/g)\n    }\n    let k = 0\n    // console.log(reg);\n\t\tfor (k in reg){\n      // console.log(reg[k]);\n\t\t\tstr = str.replace(reg[k], ' <a href=\"' + reg[k] + '\" target=\"_blank\"> ' + reg[k] + ' </a> ')\n    }\n\n    return str\n    \n    // let mes_block = this.refs.textMessage;\n    // if (mes_block) {\n    //   mes_block.innerHTML = str\n    // }\n  }\n\n  function getForwardingUser(userId) {\n    const forwardingUser = props.users.find(user => user.Id === userId)\n    if (forwardingUser) {\n      return ` ${forwardingUser.NameFirst} ${forwardingUser.NameSecond}`\n    }\n  }\n\n  function showMessage(message) {\n    if (message.Attachments) {\n      if (message.Attachments.length) {\n        // MESSAGES WITH ATTACMENTS\n        // message with image\n        if (message.Attachments[0].Type === 2 && message.Attachments[0].Payload.FileId) {\n          return (\n            <div className=\"message__img\" onClick={() => setVisible(true)}>\n              <img\n                src={`https://${props.node}:5000/api/Files/` + message.Attachments[0].Payload.FileId}\n                alt=\"\"\n              />\n            </div>\n          )\n        } else if (message.Attachments[0].Type === 1) {\n          // message with file\n          if (message.Attachments[0].Payload) {\n            return (\n              <div>\n                <Icon type=\"download\" className=\"download-icon\" />\n                <a href={`https://${props.node}:5000/api/Files/` + message.Attachments[0].Payload.FileId} download>\n                  {message.Attachments[0].Payload.Filename}\n                </a>\n                <span dangerouslySetInnerHTML={{__html: setLinks(message.Text)}}></span>\n              </div>\n            )\n          }\n        } else if (message.Attachments[0].Type === 5) {\n          // Forwarded message\n          if (message.Attachments[0].Payload.length > 0) {\n            return (\n              <div className=\"forwarding_message\">\n                Пересланное сообщение от\n                <NavLink to=\"/\" onClick={() => openDialog()}>\n                  {getForwardingUser(message.Attachments[0].Payload[0].SenderId)}\n                </NavLink>\n                <div dangerouslySetInnerHTML={{__html: setLinks(message.Attachments[0].Payload[0].Text)}} className=\"forward-message-text\"></div>\n                {\n                  message.Text ?\n                    <div dangerouslySetInnerHTML={{__html: setLinks(message.Text)}}></div>\n                  : null\n                }\n              </div>\n            )\n          } else {\n            return (\n              <div className=\"forwarding_message\">\n                Пересланное сообщение от:\n                <div>Пересланное сообщение удалено</div>\n              </div>\n            )\n          }\n        } \n        else if (message.Attachments[0].Type === 6) {\n          // let foundPublicKey = null\n          let foundPublicSignKey = null\n          if (message.SenderId === props.user.Id) {\n            // console.log('out - ', JSONbig.stringify(message.Attachments[0].Payload.SignKeyId))\n          }\n          else {\n            // console.log('into - ', message)\n            // foundPublicKey = props.publicKeys.find(publicKey => JSONbig.stringify(publicKey.KeyId) === JSONbig.stringify(message.Attachments[0].Payload.KeyId))\n            foundPublicSignKey = props.publicKeys.find(publicKey => JSONbig.stringify(publicKey.KeyId) === JSONbig.stringify(message.Attachments[0].Payload.SignKeyId))\n\n            if (!foundPublicSignKey) {\n              // console.log(\"запршиваем ключ подписи\")\n              let requestId2 = socket.makeId()\n              // localStorage.setItem(\"encryptPublicKey\", requestId2)\n              // const getUserKeys2 = {\n              //   UserId: message.SenderId,\n              //   Direction: true,\n              //   KeysId: [JSONbig.stringify(message.Attachments[0].Payload.SignKeyId)],\n              //   RequestType: 105,\n              //   RequestId: requestId2,\n              //   Type: 0\n              // }\n              // socket.send(getUserKeys2)\n            }\n            else{\n              // console.log('rataa')\n              let keysPair = JSON.parse(localStorage.getItem(\"keysPair\"))\n              let privateKey = keysPair.find(key => JSONbig.stringify(key.id) === JSONbig.stringify(message.Attachments[0].Payload.KeyId))\n              if (privateKey) {\n                // console.log(privateKey)\n                crypto.setPublicSignKeyToRecive(helpers.base64ToBuffer(foundPublicSignKey.Data))\n                crypto.setPrivateEncryptKeyToRecive(helpers.base64ToBuffer(privateKey.private))\n  \n                crypto.decryptKeyMsg(helpers.base64ToBuffer(message.Attachments[0].Payload.EncryptedData)).then(data => {\n                  const symmetricKeyForDecrypt = props.symmetricKeysForDecrypt.find(key => key.idKey == data.idKey)\n                  // console.log('симметричный расшифрован - ', data)\n                  if (!symmetricKeyForDecrypt) {\n                    props.setSymmetricKeyForDecrypt(data)\n                  }\n                }).catch(err => {\n                  // console.log(err)\n                })\n              } else {\n                // console.log(\"Не найден приватный ключ\")\n              }\n            }\n          }\n        \n          \n\n          // if (message.Attachments[0].Payload.KeyId.toString().length < 15) {\n          // props.setSymmetricKeyForDecrypt(payload)\n          // }\n          // if (!props.symmetricKey) {\n            // props.setSymmetricKey(message.Attachments[0].Payload.EncryptedData)\n            // localStorage.setItem('keyID', message.Attachments[0].Payload.KeyId)\n          // }\n          return <div>Симметричный ключ шифрования</div>\n        } else if (message.Attachments[0].Type === 4) {\n          // console.log(message)\n          const symmetricKeyForDecrypt = props.symmetricKeysForDecrypt.find(key => key.idKey == JSONbig.stringify(message.Attachments[0].Payload.KeyId))\n          let failedDecryptMsg = false\n          // console.log(message.GlobalId, symmetricKeyForDecrypt)\n          if (symmetricKeyForDecrypt) {\n            const signKeyForDecrypt = props.publicKeys.find(key => JSONbig.stringify(key.KeyId) == JSONbig.stringify(message.Attachments[0].Payload.SignKeyId))\n            if (signKeyForDecrypt) {\n              // console.log(message)\n              // console.log(symmetricKeyForDecrypt)\n              // console.log(signKeyForDecrypt)\n              crypto.setSymmetricKey(symmetricKeyForDecrypt.key)\n              crypto.setPublicSignKeyToRecive(helpers.base64ToBuffer(signKeyForDecrypt.Data))\n              crypto.decryptSecretMsg(helpers.base64ToBuffer(message.Attachments[0].Payload.EncryptedData)).then(result => {\n                if (Crypto.getMetaDataMsg(helpers.base64ToBuffer(message.Attachments[0].Payload.EncryptedData)).attach.type === 0) {\n                  setDecryptedMessage(decoder.decode(result.msg))\n                } else {\n                  setFileMsg(true)\n                  setDecryptedMessage(\"Просмотр файлов доступен только в мобильной версии приложения\")\n                }\n                // console.log(message)\n              }).catch(err => {\n                // console.log(err)\n                setDecryptedMessage(\"Неподдерживаемое зашифрованное сообщение\")\n              })\n            }\n            // console.log(symmetricKeyForDecrypt)\n            // const encoder2 = new TextEncoder()\n            // const decoder2 = new TextDecoder()\n            // const masterPassword2 = encoder.encode('qwerty')\n            // let masterPasswordId2 = BigInt(1)\n            // const crypto2 = new Crypto(masterPassword2, masterPasswordId2)\n          } else {\n            // console.log(\"Не удалось расшифровать сообщение\")\n            failedDecryptMsg = \"Зашифрованное сообщение\"\n            // setDecryptedMessage(\"Не удалось расшифровать сообщение\")\n          }\n          \n          return (\n            <div style={!decryptedMessage || fileMsg ? {fontStyle: \"italic\"} : null}>\n              {failedDecryptMsg ? failedDecryptMsg : decryptedMessage ? decryptedMessage : \"Сообщение расшифровывается...\"}\n            </div>\n          )\n        } else {\n          // other types of messages\n          return <div style={{fontStyle: \"italic\"}}>*неподдерживаемый тип сообщения*</div>\n        }\n      } else {\n        // regular message with text\n        return message.Text ? (\n          <div dangerouslySetInnerHTML={{__html: setLinks(message.Text)}}></div>\n        ) : null\n      }\n    } else {\n      // regular message with text\n      return message.Text ? (\n        <div>{message.Text}</div>\n      ) : null\n    }\n  }\n\n  function showMessageMenu() {\n    setSsContextMenuVisible(!isContextMenuVisible)\n  }\n\n  const handleReplyToMessage = () => {\n    props.forwardingMessage(props.message)\n  }\n\n  const handleForwardMessage = () => {\n    props.forwardingMessage(props.message)\n    setRedirect(true)\n  }\n\n  const openDialog = () => {\n    const conversation = props.dialogs.find(dialog => dialog.ConversationId === props.message.Attachments[0].Payload[0].ConversationId && dialog.ConversationType === props.message.Attachments[0].Payload[0].ConversationType)\n    if (conversation) {\n      const payload = {}\n      payload.type = \"dialog\"\n      payload.data = conversation\n      props.openDialog(payload)\n    }\n  }\n\n  if (redirect) {\n    return <Redirect to=\"/\" />\n  }\n  if (user && props.message) {\n    return (\n      <div\n        className={\n          user.currentUser\n            ? \"message message-out\"\n            : \"message message-in\"\n        }\n        id={props.message.GlobalId}\n        onClick={showMessageMenu}\n        style={props.message && isContextMenuVisible ? { background: \"#ebf5ff\" } : null }\n      >\n        <div className=\"wrap-message-content\">\n          {!user.currentUser && props.message.ConversationType !== 3 ? <Avatar user={user} /> : null}\n          {\n            user.currentUser && props.message.Read ?\n              <DoubleTickIcon className='message__read' />\n            : user.currentUser && !props.message.Read ? \n              <TickIcon className='message__read' />\n            : null\n          }\n          <div \n            className={\n              props.message.Attachments[0] ?\n                props.message.Attachments[0].Type === 6 ? \"message__content key_message\"  :\n                props.message.Attachments[0].Type === 4 ? \"message__content encrypted_message\"  : null\n              : \"message__content\"\n            }\n          >\n            {\n              !user.currentUser ?\n                <div className=\"message__name\">\n                  {user.NameFirst ? user.NameFirst + ' ' : null}\n                  {user.NameSecond ? user.NameSecond : null}\n                </div>\n              : null\n            }          \n            {showMessage(props.message)}\n          </div>\n          <div className=\"message__time\">{messageTime}</div>\n        </div>\n        {props.message.Attachments && props.message.Attachments[0] ? (\n          <Modal\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            footer={null}\n            maskClosable\n          >\n            <img\n              className=\"popup__img\"\n              src={`https://${props.node}:5000/api/Files/${props.message.Attachments[0].Payload.FileId}`}\n              alt=\"\"\n            />\n          </Modal>\n        ) : null}\n        {props.message && isContextMenuVisible ? (\n          <div className=\"message-menu\">\n            <ul>\n              <li onClick={handleReplyToMessage}>Ответить</li>\n              <li onClick={handleForwardMessage}>Переслать</li>\n            </ul>\n          </div>\n        ) : null}\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users,\n    user: state.users.find(user => user.currentUser === true),\n    dialogs: state.dialogs,\n    forwardMessage: state.forwardMessage,\n    node: state.node.activeNode.Domains[0],\n    // symmetricKey: state.symmetricKey,\n    symmetricKeysForDecrypt: state.symmetricKeysForDecrypt,\n    // callbacks: state.callbacks,\n    publicKeys: state.publicKeys\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    forwardingMessage: message => dispatch(forwardingMessage(message)),\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    setSymmetricKey: key => dispatch(setSymmetricKey(key)),\n    setSymmetricKeyForDecrypt: key => dispatch(setSymmetricKeyForDecrypt(key)),\n    setCallbackId: id => dispatch(setCallbackId(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Message)\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(-198)\",\n  id: \"g69\"\n}, React.createElement(\"g\", {\n  id: \"_x33__22_\"\n}, React.createElement(\"g\", {\n  id: \"g66\"\n}, React.createElement(\"path\", {\n  id: \"path64\",\n  d: \"m 544.5,99 v 495 c 0,82.021 -66.479,148.5 -148.5,148.5 -82.021,0 -148.5,-66.479 -148.5,-148.5 V 148.5 c 0,-54.673 44.327,-99 99,-99 54.673,0 99,44.327 99,99 V 594 c 0,27.349 -22.176,49.5 -49.5,49.5 -27.349,0 -49.5,-22.151 -49.5,-49.5 V 198 H 297 v 396 c 0,54.673 44.327,99 99,99 54.673,0 99,-44.327 99,-99 V 148.5 C 495,66.479 428.521,0 346.5,0 264.479,0 198,66.479 198,148.5 V 618.75 C 210.202,716.389 295.045,792 396,792 496.955,792 581.798,716.389 594,618.75 V 99 Z\"\n}))));\n\nvar SvgPaperclipIcon = function SvgPaperclipIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlSpace: \"preserve\",\n    viewBox: \"0 0 396 792\",\n    height: 0,\n    width: 0,\n    y: \"0px\",\n    x: \"0px\",\n    id: \"Capa_1\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPaperclipIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/paperclip_icon.b4a5561e.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g95\"\n}, React.createElement(\"g\", {\n  id: \"send\"\n}, React.createElement(\"polygon\", {\n  id: \"polygon92\",\n  points: \"0,38.25 0,216.75 382.5,267.75 0,318.75 0,497.25 535.5,267.75 \"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g97\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g99\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g101\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g103\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g105\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g107\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g109\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g111\"\n});\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g113\"\n});\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g115\"\n});\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g117\"\n});\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g119\"\n});\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g121\"\n});\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g123\"\n});\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0,-38.25)\",\n  id: \"g125\"\n});\n\nvar SvgSendButtonIcon = function SvgSendButtonIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlSpace: \"preserve\",\n    viewBox: \"0 0 535.5 459\",\n    height: 0,\n    width: 0,\n    y: \"0px\",\n    x: \"0px\",\n    id: \"Capa_1\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSendButtonIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/send_button_icon.56dc055f.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { ReactComponent as Paperclip } from \"../assets/paperclip_icon.svg\"\nimport { ReactComponent as SendBtn } from \"../assets/send_button_icon.svg\"\nimport { forwardingMessage } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\nimport { Upload, Icon } from \"antd\"\nimport axios from 'axios'\nimport Crypto from \"y_crypto\"\nimport helpers from \"../helpers\"\n\nfunction NewMessageField(props) {\n  const [messageText, setMessageText] = useState(\"\")\n  const [imgLoading, setImgLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(null)\n  const [attachmentsType, setAttachmentsType] = useState(null)\n\n  useEffect(() => {\n    if (imageUrl) {\n      sendMessage()\n    }\n  }, [imageUrl])\n\n  const sendMessage = () => {\n    \n    if (props.forwardMessage) {\n      // send a forwarded message or reply to a message\n      const data = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: messageText,\n            Attachments: [\n              {\n                Type: 5,\n                Payload: {\n                  MessagesGlobalId: [props.forwardMessage.GlobalId],\n                  ConversationId: props.forwardMessage.ConversationId,\n                  ConversationType: props.forwardMessage.ConversationType\n                }\n              }\n            ]\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(data)\n    } else if (imageUrl) {\n      // message with image\n      const data = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: messageText,\n            Attachments: [\n              {\n                Type: attachmentsType,\n                Hash: null,\n                MessageId: 0,\n                Payload: imageUrl,\n                NodesId: null\n              }\n            ],\n            GlobalId: null\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(data)\n    } else if (props.isCrypto) {\n      // encrypted text message\n      const encoder = new TextEncoder()\n      const masterPassword = encoder.encode('qwerty')\n      let masterPasswordId = BigInt(1)\n      const crypto = new Crypto(masterPassword, masterPasswordId)\n\n      crypto.setSymmetricKey(helpers.base64ToBuffer(props.symmetricKey.key))\n      crypto.encryptMsg(1, 1, 99999, encoder.encode(messageText)).then(encryptedMessage => {\n        const data = {\n          Messages: [\n            {\n              Id: 0,\n              SendingTime: \"\",\n              SenderId: props.user.Id,\n              ReceiverId: props.dialog.SecondUid,\n              ConversationId: props.dialog.ConversationId,\n              ConversationType: props.dialog.ConversationType,\n              Read: false,\n              NodesId: null,\n              ReplyTo: null,\n              Text: null,\n              Attachments: [\n                {\n                  Type: 4,\n                  Hash: null,\n                  MessageId: 0,\n                  Payload: {\n                    KeyId: props.symmetricKey.id,\n                    SignKeyId: JSON.parse(localStorage.getItem(\"signKeysPair\"))[JSON.parse(localStorage.getItem(\"signKeysPair\")).length-1].id,\n                    SaveFlag: 1,\n                    Lifetime: 99999,\n                    EncryptedData: helpers.bufferToBase64(encryptedMessage)\n                  },\n                  NodesId: null\n                }\n              ],\n              GlobalId: null\n            }\n          ],\n          RequestType: 39,\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n        socket.send(data)\n      }).catch(err => {\n        // console.log(err)\n      })\n    } else {\n      // sending a regular message without attachment\n      const data = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: messageText,\n            Attachments: null,\n            GlobalId: null\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(data)\n    }\n\n    setMessageText(\"\")\n\n    if(props.forwardMessage){\n      props.forwardingMessage(false)\n    }\n  }\n\n  const handleOnKeyDown = event => {\n    if (event.keyCode === 13) {\n      sendMessage()\n    }\n  }\n\n  const handleUploadImage = data => {\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', data.file)\n\n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            setImgLoading(false)\n            setImageUrl(res.data.File.FileId)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          // console.log(err)\n        }\n    )\n  }\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\"\n    if (isJpgOrPng) {\n      setAttachmentsType(2)\n    } else {\n      setAttachmentsType(1)\n    }\n    return isJpgOrPng\n  }\n\n  const handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      setImgLoading(true)\n      return\n    }\n  }\n\n  return (\n    <div className=\"new-message\">\n      <Upload\n        showUploadList={false}\n        customRequest={file => handleUploadImage(file)}\n        beforeUpload={beforeUpload}\n        onChange={handleChange}\n      >\n        {\n          imgLoading ? \n            <Icon type=\"loading\" className=\"loading-icon\" />\n          :\n            <Paperclip className=\"new-message__attach\"/>\n        }\n      </Upload>\n      <input\n        type=\"text\"\n        className=\"new-message__inp\"\n        placeholder=\"Введите сообщение\"\n        value={messageText}\n        onChange={e => {\n          setMessageText(e.target.value)\n        }}\n        onKeyDown={handleOnKeyDown}\n      />\n      <SendBtn\n        onClick={() => {\n          sendMessage()\n        }}\n        className=\"new-message__send\"\n      />\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.users.find(user => user.currentUser === true),\n    dialogs: state.dialog,\n    forwardMessage: state.forwardMessage,\n    node: state.node.activeNode.Domains[0],\n    symmetricKey: state.symmetricKey,\n    isCrypto: state.ui.isCrypto\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    forwardingMessage: message => dispatch(forwardingMessage(message))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMessageField)\n","/* eslint-disable */\nimport React, { useState, useEffect, useRef } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button } from 'antd'\nimport Message from \"./Message\"\nimport NewMessageField from \"./NewMessageField\"\nimport { openDialog } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\nimport axios from 'axios'\nimport { ui } from \"../reducers/ui\"\nimport helpers from \"../helpers\"\nimport Crypto from \"y_crypto\"\nimport { setCallbackId } from \"../actions/callbacks\"\nimport { setSymmetricKey, setSymmetricKeyForDecrypt } from \"../actions/keys\"\n\nfunction Dialog(props) {\n  const [messages, setMessages] = useState([])\n  const [dialog, setDialog] = useState(null)\n  const [messagesLoading, setMessagesLoading] = useState(false)\n  const [height1, setHeight1] = useState(0)\n  const [height2, setHeight2] = useState(0)\n  const [callbackFunctions, setCallbackFunctions] = useState([])\n  const [interlocutorEncryptPublicKey, setInterlocutorEncryptPublicKey] = useState(null)\n  const mesViewport = useRef(null)\n\n  // function for receiving sender in messages and forwarded messages\n  const getUsers = mess => {\n    const users = []\n    mess.forEach(message => {\n      if (message.Attachments) {\n        if (message.Attachments.length) {\n          if (message.Attachments[0].Type === 5) {\n            if (message.Attachments[0].Payload.length > 0) {\n              const foundUser = props.users.find(\n                user => user.Id === message.Attachments[0].Payload[0].SenderId\n              )\n\n              if (!foundUser) {\n                if(message.Attachments[0].Payload[0].SenderId){\n                  users.push(message.Attachments[0].Payload[0].SenderId)\n                }\n              }\n            }\n          }\n        }\n      }\n      const foundUser = props.users.find(user => user.Id === message.SenderId)\n\n      if (!foundUser) {\n        if(message.SenderId){\n          users.push(message.SenderId)\n        }\n      }\n    })\n    const uniqueUsers = [...new Set(users.map(n => n))]\n\n    if (uniqueUsers.length) {\n      const requestUsers = {\n        UsersId: [...uniqueUsers],\n        RequestType: 28,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n\n      socket.send(requestUsers)\n    }\n  }\n\n  useEffect(() => {\n    props.callbacks.forEach(callback => {\n      if (callbackFunctions.includes(callback.id) && callback.data) {\n        const encoder = new TextEncoder()\n        const masterPassword = encoder.encode('qwerty')\n        let masterPasswordId = BigInt(1)\n        const crypto = new Crypto(masterPassword, masterPasswordId)\n\n        if (callback.data.Keys[0]) {\n          let keyTimelife = (callback.data.Keys[0].GenerationTime + callback.data.Keys[0].Lifetime)*1000\n          let date = new Date()\n          if (date.getTime()/1000 < keyTimelife) {\n            // console.log(\"Ключ собеседника живой, все нормально\")\n            let interEncryptPublicKey = callback.data.Keys[1]\n            setInterlocutorEncryptPublicKey(interEncryptPublicKey)\n            let mySignPrivateKey = JSON.parse(localStorage.getItem(\"signKeysPair\"))[JSON.parse(localStorage.getItem(\"signKeysPair\")).length-1]\n            const keyId = socket.makeId()\n            crypto.setPublicEncryptKeyToSend(helpers.base64ToBuffer(interEncryptPublicKey.Data))\n            crypto.setPrivateSignKeyToSend(helpers.base64ToBuffer(mySignPrivateKey.private))\n            crypto.getSymmetricKey(1, keyId, 99999, ).then(symmetricKey => {\n              // add this unencrypted symmetric key to the state to decrypt messages on it\n              let symmKey = {\n                key: helpers.bufferToBase64(symmetricKey),\n                id: keyId\n              }\n              props.setSymmetricKeyForDecrypt(symmKey)\n              crypto.encryptKeyMsg(1, 99999, symmetricKey).then(encryptedSymmetricKey => {\n                // here we add the encrypted symmetric key to the state\n                // This key is sent to the interlocutor at the beginning of a secure dialogue, and an identifier is sent from it when sending messages\n                let symmKeyEncrypted = {\n                  key: helpers.bufferToBase64(symmetricKey),\n                  id: keyId\n                }\n                props.setSymmetricKey(symmKeyEncrypted)\n              }).catch(err => {\n                // console.log(err)\n              })\n            }).catch(err => {\n              // console.log(err)\n            })\n          } else {\n            // console.log(\"У пользовтеля истекли ключи\")\n          }\n        } else {\n          // console.log(\"У пользователя нет действующих публичных ключей\")\n        }\n      }\n    })\n  }, [props.callbacks])\n\n  useEffect(() => {\n    if (props.user && props.dialog) {\n      const requestId = socket.makeId()\n      const keysPairs = JSON.parse(localStorage.getItem('keysPair'))\n      const signKeysPairs = JSON.parse(localStorage.getItem('signKeysPair'))\n      props.setCallbackId(requestId)\n      \n      const addNewKeys = {\n        Keys: [\n          {\n            KeyId: keysPairs[keysPairs.length - 1].id,\n            Data: keysPairs[keysPairs.length - 1].public, \n            Lifetime: 99999,\n            GenerationTime: parseInt(new Date().getTime()/1000),\n            Version: 1,\n            // type 0 - signature, 1 - encryption\n            Type: 1,\n            UserId: props.user.Id,\n            ChatId: null\n          },\n          {\n            KeyId: signKeysPairs[keysPairs.length - 1].id,\n            Data: signKeysPairs[keysPairs.length - 1].public, \n            Lifetime: 99999,\n            GenerationTime: parseInt(new Date().getTime()/1000),\n            Version: 1,\n            // type 0 - signature, 1 - encryption\n            Type: 0,\n            UserId: props.user.Id,\n            ChatId: null\n          }\n        ],\n        RequestType: 100,\n        RequestId: requestId,\n        Type: 0\n      }\n\n      socket.send(addNewKeys)\n    }\n  }, [props.user, props.dialog])\n\n  useEffect(() => {\n    if(props.dialog){\n      setDialog(props.dialog)\n\n      // mark messages read\n      if (props.appFocus) {\n        if (props.dialog.LastMessageId) {\n          const data = {\n            MessagesId: [props.dialog.LastMessageId],\n            ConversationType: props.dialog.ConversationType,\n            ConversationId: props.dialog.ConversationId,\n            RequestId: socket.makeId(),\n            RequestType: 35,\n            Type: 0\n          }\n  \n          socket.send(data)\n        }\n      }\n\n      // scrolling message loading\n      mesViewport.current.onscroll = () => {\n        if (mesViewport.current.scrollTop === 0) {\n          setHeight1(mesViewport.current.scrollHeight)\n          setMessagesLoading(true)\n\n          const messagesRequest = {\n            ConversationType: props.dialog.ConversationType,\n            ConversationId: props.dialog.ConversationId,\n            NavigationMessageId: messages[0].GlobalId,\n            MessagesId: null,\n            RequestType: 25,\n            RequestId: socket.makeId(),\n            Direction: true,\n            Type: 0\n          }\n\n          socket.send(messagesRequest)\n        }\n      }\n    }\n    // setHeight2(mesViewport.current.scrollHeight)\n  }, [messages, props.dialog])\n\n  useEffect(() => {\n    // console.log(height2)\n  }, [height1, height2])\n\n  useEffect(() => {\n    if (dialog) {\n      const mess = props.messages.filter(message => message.ConversationId === parseInt(dialog.ConversationId || dialog.ChannelId) && message.ConversationType === dialog.ConversationType)\n      setMessages(mess)\n\n      setHeight2(mesViewport.current.scrollHeight)\n      setTimeout(() => {\n        if (mesViewport.current && !messagesLoading) {\n          mesViewport.current.scrollTop = 450000\n        } else {\n          mesViewport.current.scrollBottom = height1 - height2\n        }\n      }, 10)\n\n      getUsers(mess)\n    }\n    setHeight2(mesViewport.current.scrollHeight)\n  }, [dialog, props.messages])\n\n  useEffect(() => {\n    if (props.isCrypto) {\n      // receiving public encryption keys of the interlocutor\n      const requestId = socket.makeId()\n      props.setCallbackId(requestId)\n      let callbackIds = callbackFunctions\n      callbackIds.push(requestId)\n      setCallbackFunctions(callbackIds)\n\n      if (props.user && props.dialog) {\n        const getUserKeys = {\n          UserId: props.dialog.SecondUid,\n          Direction: true,\n          KeysId: null,\n          RequestType: 105,\n          NavigationTime: parseInt(new Date().getTime()/1000),\n          RequestId: requestId,\n          Type: 0\n        }\n        socket.send(getUserKeys)\n      }\n    }\n  }, [props.isCrypto])\n\n  useEffect(() => {\n    // send a symmetric key to the interlocutor\n    if (props.symmetricKey) {\n      // console.log('Отправляем симметричный ключ')\n      const keyExchangeMessage = {\n        Messages: [\n          {\n            Id: 0,\n            SendingTime: \"\",\n            SenderId: props.user.Id,\n            ReceiverId: props.dialog.SecondUid,\n            ConversationId: props.dialog.ConversationId,\n            ConversationType: props.dialog.ConversationType,\n            Read: false,\n            NodesId: null,\n            ReplyTo: null,\n            Text: null,\n            Attachments: [\n              {\n                Type: 6,\n                Hash: null,\n                MessageId: 0,\n                Payload: {\n                  KeyId: interlocutorEncryptPublicKey.KeyId,\n                  SignKeyId: JSON.parse(localStorage.getItem(\"signKeysPair\"))[JSON.parse(localStorage.getItem(\"signKeysPair\")).length-1].id,\n                  EncryptedData: props.symmetricKey.key\n                },\n                NodesId: null\n              }\n            ],\n            GlobalId: null\n          }\n        ],\n        RequestType: 39,\n        RequestId: socket.makeId(),\n        Type: 0\n      }\n  \n      socket.send(keyExchangeMessage)\n    }\n  }, [props.symmetricKey])\n\n  const joinToChannel = () => {\n    const data = {\n      ChannelsId: [dialog.ChannelId],\n      UsersId: [props.user.Id],\n      RequestType: 48,\n      RequestId: socket.makeId(),\n      Type: 0\n    }\n\n    socket.send(data)\n  }\n\n  const fileOver = e => {\n    e.preventDefault()\n    mesViewport.current.classList.add('file-over')\n  }\n\n  const fileLeave = e => {\n    e.preventDefault()\n    mesViewport.current.classList.remove('file-over')\n  }\n\n  const fileDrop = (e) => {\n    e.preventDefault()\n    mesViewport.current.classList.remove('file-over')\n\n    if (props.isCrypto) {\n      // encrypted message with file\n      const encoder = new TextEncoder()\n      const masterPassword = encoder.encode('qwerty')\n      let masterPasswordId = BigInt(1)\n      const crypto = new Crypto(masterPassword, masterPasswordId)\n\n      crypto.setSymmetricKey(helpers.base64ToBuffer(props.symmetricKey.key))\n      // crypto.encryptMsg(1, 4, 99999, encoder.encode(e.dataTransfer.files[0])).then(data => {\n        // if (data.length > 0) {\n          const fileAccessToken = localStorage.getItem('FileAccessToken')\n          axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n          const formData = new FormData()\n          // formData.append('file', new Blob(data))\n          formData.append('file', e.dataTransfer.files[0])\n\n          axios.post(`https://${props.node}:5000/api/Files`, formData).then(upladedFile => {\n            // console.log(upladedFile)\n            crypto.encryptMsg(1, 4, 99999, encoder.encode(JSON.stringify(upladedFile.data.File))).then(encryptImgMsg => {\n              const data = {\n                Messages: [\n                  {\n                    Id: 0,\n                    SendingTime: \"\",\n                    SenderId: props.user.Id,\n                    ReceiverId: dialog.SecondUid,\n                    ConversationId: dialog.ConversationId,\n                    ConversationType: dialog.ConversationType,\n                    Read: false,\n                    NodesId: null,\n                    ReplyTo: null,\n                    Text: null,\n                    Attachments: [\n                      {\n                        Type: 4,\n                        Hash: null,\n                        MessageId: 0,\n                        Payload: {\n                          KeyId: props.symmetricKey.id,\n                          SignKeyId: JSON.parse(localStorage.getItem(\"signKeysPair\"))[JSON.parse(localStorage.getItem(\"signKeysPair\")).length-1].id,\n                          SaveFlag: 1,\n                          Lifetime: 99999,\n                          EncryptedData: helpers.bufferToBase64(encryptImgMsg)\n                        },\n                        NodesId: null\n                      }\n                    ],\n                    GlobalId: null\n                  }\n                ],\n                RequestType: 39,\n                RequestId: socket.makeId(),\n                Type: 0\n              }\n              \n              // console.log(data)\n              socket.send(data)\n            }).catch(err => {\n              // console.log(err)\n            })\n          }).catch(err => {\n            // console.log(err)\n          })\n        // }\n      // }).catch(err => {\n      //   console.log(err)\n      // })\n    } else {\n      // regular message with file\n      const isJpgOrPng = e.dataTransfer.files[0].type === \"image/jpeg\" || e.dataTransfer.files[0].type === \"image/png\"\n      let attachmentType = null\n      if (isJpgOrPng) {\n        attachmentType = 2\n      } else {\n        attachmentType = 1\n      }\n\n      const fileAccessToken = localStorage.getItem('FileAccessToken')\n      axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n      const formData = new FormData()\n      formData.append('file', e.dataTransfer.files[0])\n\n      axios.post(`https://${props.node}:5000/api/Files`, formData)\n      .then(\n          (res) => {\n            if (res.status === 200) {\n              // setImgLoading(false)\n              const data = {\n                Messages: [\n                  {\n                    Id: 0,\n                    SendingTime: \"\",\n                    SenderId: props.user.Id,\n                    ReceiverId: dialog.SecondUid,\n                    ConversationId: dialog.ConversationId,\n                    ConversationType: dialog.ConversationType,\n                    Read: false,\n                    NodesId: null,\n                    ReplyTo: null,\n                    Text: \"\",\n                    Attachments: [\n                      {\n                        Type: attachmentType,\n                        Hash: null,\n                        MessageId: 0,\n                        Payload: res.data.File.FileId,\n                        NodesId: null\n                      }\n                    ],\n                    GlobalId: null\n                  }\n                ],\n                RequestType: 39,\n                RequestId: socket.makeId(),\n                Type: 0\n              }\n        \n              socket.send(data)\n            }\n          }\n      )\n      .catch(\n          (err) => {\n            // console.log(err)\n          }\n      )\n    }\n  }\n\n  return (\n    <div className=\"dialog\">\n      <div \n        className=\"dialog__messages-viewport\"\n        ref={mesViewport}\n        onDragOver={(e) => fileOver(e)}\n        onDragLeave={(e) => fileLeave(e)}\n        onDrop={(e) => fileDrop(e)}\n      >\n        <div className=\"dialog__messages\">\n          {dialog\n            ? messages.map(message => {\n                return <Message key={socket.makeId()} message={message} />\n              })\n            : null}\n        </div>\n      </div>\n      {props.forwardMessage ? (\n        <div className=\"reply-message\">\n          Ответ на:\n          {` ${props.forwardMessage.Text}`}\n        </div>\n      ) : null}\n      {\n        props.dialog ? \n          props.dialog.type === \"channel\" && props.dialog.fake ? \n            <Button type=\"primary\" size='large' onClick={joinToChannel}>Вступить</Button> \n          : props.dialog.ConversationType !== 3 ?\n            <NewMessageField {...props} dialog={dialog} />\n          : null\n        : null\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state)\n  return {\n    messages: state.messages,\n    forwardMessage: state.forwardMessage,\n    users: state.users,\n    user: state.users.find(user => user.currentUser === true),\n    node: state.node.activeNode.Domains[0],\n    appFocus: state.ui.appFocus,\n    requestsId: state.ui.requestsId,\n    symmetricKey: state.symmetricKey,\n    isCrypto: state.ui.isCrypto,\n    callbacks: state.callbacks\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    setCallbackId: id => dispatch(setCallbackId(id)),\n    setSymmetricKey: key => dispatch(setSymmetricKey(key)),\n    setSymmetricKeyForDecrypt: key => dispatch(setSymmetricKeyForDecrypt(key)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dialog)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport socket from \"../transport/Connect\"\nimport HeadDialog from \"./HeadDialog\"\nimport Dialog from \"./Dialog\"\nimport selectors from \"../selectors\"\nimport { openDialog } from \"../actions/dialogs\"\n\nfunction DialogContainer(props) {\n  // const [messages, setMessages] = useState([]);\n  const [dialog, setDialog] = useState(null)\n\n  useEffect(() => {\n    props.dialogs.forEach(dialog => {\n      if (dialog.active) {\n        setDialog(dialog)\n      }\n    })\n  }, [props.dialogs])\n\n  useEffect(() => {\n    // if (props.messages) {\n    //    props.messages.map(message => {\n    //       if (message.ConversationId === dialogId) {\n    //          // console.log(messages);\n    //          let mess = messages;\n    //          mess.push(message);\n    //          // console.log(mess);\n    //          setMessages(messages.push(message));\n    //       }\n    //    });\n    // }\n  }, [props.messages])\n\n  useEffect(() => {\n    if (dialog) {\n      // console.log(dialog)\n      // console.log(dialog.messagesRecieved)\n\n      // if for this dialogue messages have not yet been requested, then we request\n      if (!dialog.messagesRecieved) {\n        // message request\n        const data = {\n          ConversationType: dialog.type === \"channel\" ? 3 : dialog.ConversationType,\n          ConversationId: dialog.ConversationId ? dialog.ConversationId : dialog.ChannelId,\n          NavigationMessageTime: null,\n          MessageId: null,\n          RequestType: 25,\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n\n        socket.send(data)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dialog])\n\n  return (\n    <div className=\"dialog-container\" style={selectors.getActiveDialog(props.dialogs) ? {zIndex: 2} : null}>\n      <HeadDialog {...props} />\n      {selectors.getActiveDialog(props.dialogs) ? <Dialog dialog={dialog} {...props} /> : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    messages: state.messages\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogContainer)\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { NavLink } from \"react-router-dom\"\nimport { Modal } from \"antd\"\nimport { openProfile } from \"../actions/ui\"\nimport { openDialog } from \"../actions/dialogs\"\nimport socket from \"../transport/Connect\"\nimport selectors from \"../selectors\"\n\nfunction ProfileModal(props) {\n  const [visible, setVisible] = useState(false)\n  const [profile, setProfile] = useState(null)\n  const [prevProfile, setPrevProfile] = useState(null)\n\n  useEffect(() => {\n    if(props.profile) {\n      if(props.profile.ConversationType === 1){\n        const user = selectors.getUserById(props.profile.SecondUid, props.users)\n        if (user) {\n          setProfile(user)\n          setVisible(true)\n        }\n      } else if (props.profile.NameFirst) {\n        setProfile(props.profile)\n        setVisible(true)\n      } else if (props.profile.Users) {\n        setProfile(props.profile)\n        setVisible(true)\n      } else if (props.profile.ConversationType === 2){\n        const getChatInfo = {\n          RequestType: 45,\n          ChatsId: [props.profile.ConversationId],\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n    \n        socket.send(getChatInfo)\n      }\n    }\n  }, [props.profile])\n\n  useEffect(() => {\n    if (props.chats.length) {\n      setProfile(props.chats[0])\n      setVisible(true)\n\n      // we request missing users for display in a profile\n      const undefinedUsers = []\n      props.chats[0].Users.map(user => {\n        const foundUser = selectors.getUserById(user.UserId, props.users)\n        if(!foundUser){\n          undefinedUsers.push(user.UserId)\n        }\n      })\n      if(undefinedUsers.length){\n        const requestUsers = {\n          UsersId: [...undefinedUsers],\n          RequestType: 28,\n          RequestId: socket.makeId(),\n          Type: 0\n        }\n\n        socket.send(requestUsers)\n      }\n    }\n  }, [props.chats])\n\n  const openProfile = data => {\n    setPrevProfile(profile)\n    props.openProfile(data)\n  }\n\n  const showUsers = () => {\n    return props.chats[0].Users.map(user => {\n      const foundUser = selectors.getUserById(user.UserId, props.users)\n      if(foundUser){\n        let name = null\n        if (foundUser.NameFirst) {\n          name = foundUser.NameFirst\n        }\n        if (foundUser.NameSecond) {\n          name = name + ' ' + foundUser.NameSecond\n        }\n        return (\n          <div key={foundUser.Id} className='profile__info_user' onClick={() => {openProfile(foundUser)}}>\n            {\n              foundUser.Photo ? \n                <div\n                  style={{\n                    width: \"50px\",\n                    height: \"50px\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center center\",\n                    backgroundImage: `url(https://${props.node}:5000/api/Files/${foundUser.Photo})`,\n                    backgroundRepeat: \"no-repeat\",\n                    borderRadius: 100,\n                    margin: '0 auto',\n                    marginTop: \"10px\"\n                  }}\n                ></div>\n              : \n              <div className='profile__info_ava'>{selectors.getUserInitials(foundUser)}</div> \n            }\n            {name ? name : 'Имя скрыто'}\n          </div>\n        )\n      }\n    })\n  }\n\n  const handleCancelProfile = () => {\n    setVisible(false)\n    props.openProfile(null)\n  }\n\n  const handleOpenDialog = () => {\n    let payload = {}\n    payload.data = props.profile\n    if (props.profile.type === \"dialog\") {\n      payload.type = \"dialog\"\n    } else {\n      payload.type = \"user\"\n    }\n    props.openDialog(payload)\n    handleCancelProfile()\n  }\n\n  const handleBackProfile = () => {\n    props.openProfile(prevProfile)\n    setPrevProfile(null)\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={handleCancelProfile}\n      footer={null}\n      maskClosable\n    >\n      {\n        profile ? \n          <div className='profile'>\n            {\n              prevProfile ? <div onClick={handleBackProfile}>Назад</div> : null\n            }\n            {\n              profile.Photo ? \n                <div\n                  className='profile__ava'\n                  style={{\n                    width: \"100px\",\n                    height: \"100px\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center center\",\n                    backgroundImage: `url(https://${props.node}:5000/api/Files/${profile.Photo})`,\n                    backgroundRepeat: \"no-repeat\",\n                    borderRadius: 100,\n                    margin: '0 auto'\n                  }}\n                ></div>\n              : null \n            }\n            {\n              profile.Name ?\n                <div className='profile__name'>{profile.Name}</div>\n              :\n                <div className='profile__name'>\n                  {profile.NameFirst ? profile.NameFirst  : null}\n                  {' '}\n                  {profile.NameSecond ? profile.NameSecond : null}\n                </div>\n            }\n            {\n              profile.Phones ? \n                profile.Phones.length > 0 ?\n                  <div className='profile__info'>\n                    <div className='profile__info_name'>Телефон</div>\n                    <div className='profile__info_value'>{profile.Phones[0].FullNumber}</div>\n                  </div>\n                : null\n              : null\n            }\n            {\n              profile.Emails ? \n                <div className='profile__info'>\n                  <div className='profile__info_name'>Email</div>\n                  <div className='profile__info_value'><a href={`mailto:${profile.Emails[0]}`}>{profile.Emails[0]}</a></div>\n                </div>\n              : null\n            }\n            {\n              profile.About ? \n                <div className='profile__info'>\n                  <div className='profile__info_name'>О себе</div>\n                  <div className='profile__info_value'>{profile.About}</div>\n                </div>\n              : null\n            }\n            {\n              profile.Users ? \n                <div className='profile__info'>\n                  <div className='profile__info_name'>Участники</div>\n                  <div className='profile__info_users'>{showUsers()}</div>\n                </div>\n              : null\n            }\n            {\n              props.profile ? \n                <NavLink\n                  to={\"/\"}\n                  onClick={handleOpenDialog}\n                >\n                  <div className='profile__open_chat'>Открыть чат</div>\n                </NavLink>\n              : null\n            }\n          </div>\n        : null\n      }\n      \n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.ui.profile,\n    users: state.users,\n    chats: state.chats,\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openProfile: user => dispatch(openProfile(user)),\n    openDialog: dialogId => dispatch(openDialog(dialogId))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileModal)\n","/* eslint-disable */\nimport React, {useState} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Form, Input, Switch, Divider, Upload, Icon, message, Button } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport socket from \"../transport/Connect\"\nimport Avatar from \"../components/Avatar\"\nimport axios from 'axios'\n\nfunction CreateChatModal(props) {\n  const [chatName, setChatName] = useState(null)\n  const [nameError, setNameError] = useState(false)\n  const [chatPrivate, setChatPrivate] = useState(false)\n  const [chatChannel, setChatChannel] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(null)\n  const [usersIDs, setUsersIds] = useState([])\n  const [showUsers, setShowUsers] = useState(false)\n\n  const handleSetChatName = value => {\n    setChatName(value)\n    setNameError(false)\n    if (value.length < 1) {\n      setNameError(true)\n    }\n  }\n\n  const handleCreateChat = () => {\n    if (!chatName) {\n      setNameError(true)\n    } else {\n      const users = usersIDs.map(userId => {\n        return {userId}\n      })\n      const newChat = {\n        Chats: [\n          {\n            Id: 0,\n            Name: chatName,\n            Tag: 0,\n            Photo: imageUrl,\n            About: null,\n            NodesId: null,\n            Visible: null,\n            Public: null,\n            Security: null,\n            Type: 1,\n            Users: users\n          }\n        ],\n        RequestId: socket.makeId(),\n        RequestType: 36,\n        Type: 0\n       }\n      \n      socket.send(newChat)\n\n      props.toggleModal(\"createChatModal\")\n    }\n  }\n\n  const handleUploadImage = data => {\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', data.file)\n  \n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            setLoading(false)\n            setImageUrl(res.data.File.FileId)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          // console.log(err)\n        }\n    )\n  }\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n      message.error('Поддерживается только загрузка JPG/PNG файлов!')\n    }\n    return isJpgOrPng\n  }\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true)\n      return\n    }\n  }\n\n  const addContactToChat = userId => {\n    let users = [...usersIDs]\n    if (usersIDs.includes(userId)) {\n      let foudnUserIndex = users.indexOf(userId)\n      users.splice(foudnUserIndex, 1)\n      setUsersIds(users)\n    } else {\n      users.push(userId)\n      setUsersIds(users)\n    }\n  }\n\n  const showContacts = () => {\n    return props.contacts.map(user => {\n      if(user){\n        let name = null\n        if (user.ContactUser.NameFirst) {\n          name = user.ContactUser.NameFirst\n        }\n        if (user.ContactUser.NameSecond) {\n          name = name + ' ' + user.ContactUser.NameSecond\n        }\n        return (\n          <div key={user.ContactId} className={usersIDs.includes(user.ContactUserId) ? 'contacts contacts-active' : 'contacts'} onClick={() => {addContactToChat(user.ContactUserId)}}>\n            <Avatar user={user.ContactUser} />\n            {name ? name : 'Имя скрыто'}\n          </div>\n        )\n      }\n    })\n  }\n\n  return (\n    <Modal\n      visible={props.createChatModal}\n      // visible={true}\n      onCancel={() => props.toggleModal(\"createChatModal\")}\n      title=\"Создание группового чата\"\n      className=\"create-chat-modal\"\n      footer={null}\n      maskClosable\n    >\n      {\n        !showUsers ?\n          <>\n            <Upload\n              listType=\"picture-card\"\n              className=\"avatar-uploader\"\n              showUploadList={false}\n              customRequest={file => handleUploadImage(file)}\n              beforeUpload={beforeUpload}\n              onChange={handleChange}\n            >\n              {\n                loading ? \n                <Icon type=\"loading\" className=\"loading-icon\" />\n              : imageUrl ?\n                  <img src={`https://${props.node}:5000/api/Files/${imageUrl}`} alt=\"avatar\" style={{ width: '100%' }} />\n                :\n                  <>\n                    <p className=\"ant-upload-drag-icon\">\n                      <Icon type=\"inbox\" style={{fontSize: \"40px\", color: \"#1890ff\", marginTop: \"15px\"}} />\n                    </p>\n                    <p className=\"ant-upload-text\">Загрузить <br/> аватар</p>\n                  </>\n              }\n            </Upload>\n            <Divider />\n            <Form.Item\n              validateStatus={nameError ? \"error\" : ''}\n              help={nameError ? \"Это поле обязательно для заполнения\" : false}\n            >\n              <Input \n                placeholder=\"Название чата\"\n                onChange={(e) => handleSetChatName(e.target.value)}\n              />\n            </Form.Item>\n            <Divider />\n            <div className='switch-label'>\n              <div>Приватный чат</div>\n              <Switch checked={chatPrivate} onChange={(value) => setChatPrivate(value)} />\n            </div>\n            <Divider />\n            <div className='switch-label'>\n              <div>Создать канал</div>\n              <Switch checked={chatChannel} onChange={(value) => setChatChannel(value)} />\n            </div>\n            <Divider />\n            <Button type=\"normal\" block icon=\"usergroup-add\" onClick={() => setShowUsers(!showUsers)}>Добавить пользователей</Button>    \n          </>\n        :\n          <>\n            <div className=\"modal_back\" onClick={() => setShowUsers(false)}><Icon type=\"arrow-left\" /></div>\n            {\n              showUsers ?\n                <div className=\"wrap_contacts\">\n                  {showContacts()}\n                </div>\n              : null\n            }  \n          </>\n      }\n      <Divider />\n      <Button type=\"primary\" block onClick={() => handleCreateChat()}>Создать</Button>\n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createChatModal: state.ui.modals.createChatModal,\n    node: state.node.activeNode.Domains[0],\n    contacts: state.contacts.users\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateChatModal)\n","import Connect from \"./Connect\"\n\n/* eslint-disable */\nclass Request {\n  constructor() {}\n\n  // dialogue request\n  getDialogs() {\n    const getDialogs = {\n      NavigationMessageTime: null,\n      RequestId: Connect.makeId(),\n      RequestType: 12,\n      Type: 0\n    }\n\n    Connect.send(getDialogs)\n  }\n\n  // contact list request\n  getUserContacts() {\n    const getUserContacts = {\n      RequestId: Connect.makeId(),\n      RequestType: 64,\n      Type: 0\n    }\n\n    Connect.send(getUserContacts)\n  }\n\n  // user request\n  getUsers(usersIds) {\n    const getUsers = {\n      RequestId: Connect.makeId(),\n      RequestType: 28,\n      Type: 0,\n      UsersId: usersIds\n    }\n\n    Connect.send(getUsers)\n  }\n\n  // contact group request\n  getUserGroups() {\n    const data = {\n      RequestId: Connect.makeId(),\n      RequestType: 61,\n      Type: 0,\n    }\n\n    Connect.send(data)\n  }\n\n  // request contacts from a group\n  getGroupContacts(groupId) {\n    const data = {\n      RequestId: Connect.makeId(),\n      RequestType: 60,\n      Type: 0,\n      GroupId: groupId\n    }\n\n    Connect.send(data)\n  }\n\n  // update user information\n  editUser(data) {\n    const requestdData = {\n      User: {\n        NameFirst: data.NameFirst,\n        NameSecond: data.NameSecond,\n        About: data.About,\n        Photo: data.Photo,\n        Country: null,\n        Language: null,\n        Visible: null,\n        Privacy: data.Privacy,\n        Security: null,\n        Phones: null,\n        Emails: null\n      },\n      RequestId: Connect.makeId(),\n      RequestType: 10,\n      Type: 0\n    }\n\n    Connect.send(requestdData)\n  }\n\n  // create chat\n  createChat(data) {\n    const requestdData = {\n      Chats: [\n        {\n          Id: 0,\n          Name: \"NEW CHAT\",\n          Tag: 0,\n          Photo: null,\n          About: \"about chat\",\n          NodesId: null,\n          Visible: null,\n          Public: null,\n          Security: null,\n          Type: 1,\n          Users: [\n            {\n              ChatId: 0,\n              UserId: 1,\n              Deleted: false,\n              Banned: false,\n              UserRole: 0,\n              UserInfo: null\n            },\n            {\n              ChatId: 0,\n              UserId: 2,\n              Deleted: false,\n              Banned: false,\n              UserRole: 0,\n              UserInfo: null\n            }\n          ]\n        }\n      ],\n      RequestId: 3387209483927527400,\n      RequestType: 36,\n      Type: 0\n    }\n\n    Connect.send(requestdData)\n  }\n}\n\nconst request = new Request()\n\nexport default request\n","import React, {useState, useEffect} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Tabs } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport Request from \"../transport/Request\"\nimport Avatar from \"./Avatar\"\nimport { openDialog } from \"../actions/dialogs\"\n\nfunction ContactsModal(props) {\n  // const [contacts, setContacts] = useState([])\n\n  const { TabPane } = Tabs\n\n  useEffect(() => {\n    Request.getUserContacts()\n    Request.getUserGroups()\n  }, [])\n\n  // useEffect(() => {\n  //   const contactsTmp = []\n  //   props.users.forEach(user => {\n  //     if (props.contactsIDs.find(id => user.Id === id)) {\n  //       contactsTmp.push(user)\n  //     }\n  //   })\n  //   setContacts(contactsTmp)\n  // }, [props.users, props.contactsIDs])\n\n  const handleOpenChat = user => {\n    let payload = {}\n    payload.data = user\n    payload.type = \"user\"\n    props.openDialog(payload)\n    props.toggleModal(\"close\")\n  }\n\n  const changeGroup = groupId => {\n    if (groupId === \"all\") {\n      Request.getUserContacts()\n    } else {\n      Request.getGroupContacts(groupId)\n    }\n  }\n\n  const showContacts = () => {\n    return props.contacts.map(contact => {\n      if (contact.ContactUser) {\n        return (\n          <div className=\"contact\" key={contact.ContactId} onClick={() => handleOpenChat(contact.ContactUser)}>\n            <Avatar user={contact.ContactUser} />\n            <div className=\"name\">\n              {`${contact.ContactUser.NameFirst} ${contact.ContactUser.NameSecond}`}\n            </div>\n          </div>\n        )\n      }\n    })\n  }\n\n  const showGroups = () => {\n    return props.groups.map(group => {\n      return (\n        <TabPane tab={group.Title} key={group.GroupId}>\n          {showContacts()}\n        </TabPane>\n      )\n    })\n  }\n\n  return (\n    <Modal\n      visible={props.contactsModal}\n      // visible={true}\n      onCancel={() => props.toggleModal(\"contactsModal\")}\n      title=\"Контакты\"\n      footer={null}\n      maskClosable\n      className=\"contacts\"\n    >\n      <Tabs defaultActiveKey=\"1\" onChange={changeGroup}>\n        <TabPane tab=\"Все\" key=\"all\">\n          {showContacts()}\n        </TabPane>\n        {showGroups()}\n      </Tabs>\n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contactsModal: state.ui.modals.contactsModal,\n    users: state.users,\n    contacts: state.contacts.users,\n    contactsIDs: state.contacts.usersIDs,\n    groups: state.contacts.groups\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name)),\n    openDialog: data => dispatch(openDialog(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsModal)\n","/* eslint-disable */\nimport React, {useState} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Button, Input, Divider, Form, Typography, Icon } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport { removeContactFromGroup, removeGroup } from \"../actions/contacts\"\nimport Avatar from \"../components/Avatar\"\nimport socket from \"../transport/Connect\"\n\nconst { Text } = Typography\n\nfunction ContactsGroupsModal(props) {\n  const [chatName, setChatName] = useState(null)\n  const [nameError, setNameError] = useState(false)\n  const [groupOpen, setGroupOpen] = useState(false)\n  const [creatingGroup, setCreatingGroup] = useState(false)\n  const [usersIDs, setUsersIds] = useState([])\n  const [showUsers, setShowUsers] = useState(false)\n\n  const handleSetChatName = value => {\n    setChatName(value)\n    setNameError(false)\n    if (value.length < 1) {\n      setNameError(true)\n    }\n  }\n\n  const removeContactGroup = (groupId) => {\n    const removeGroup = {\n      GroupsId: [groupId],\n      RequestId: socket.makeId(),\n      RequestType: 57,\n      Type: 0\n    }\n\n    socket.send(removeGroup)\n    props.removeGroup(groupId)\n  }\n\n  const showGroups = () => {\n    return props.groups.map(group => {\n      return (\n        <div className=\"contact\" key={group.GroupId}>\n          <div className=\"name\" onClick={() => openGroup(group.GroupId)}>{group.Title}</div>\n          <Button className=\"remove-user\" type=\"danger\" shape=\"circle\" icon=\"close\" onClick={() => removeContactGroup(group.GroupId)} />\n        </div>\n      )\n    })\n  }\n\n  const openGroup = groupId => {\n    const openedGroup = props.groups.find(group => group.GroupId === groupId)\n    if (openedGroup) {\n      setGroupOpen(openedGroup)\n    }\n  }\n\n  const handleSetCreatingGroup = () => {\n    if (!chatName) {\n      setNameError(true)\n    } else {\n      setCreatingGroup(\"step2\")\n    }\n  }\n\n  const updateGroup = () => {\n    const addUsersToGroup = {\n      UsersId: usersIDs,\n      GroupId: groupOpen.GroupId,\n      RequestId: socket.makeId(),\n      RequestType: 58,\n      Type: 0\n    }\n    \n    socket.send(addUsersToGroup)\n\n    props.toggleModal(\"contactsGroupsModal\")\n  }\n\n  const createGroup = () => {\n    const newGroup = {\n      Group: {\n        GroupId: groupOpen ? groupOpen.GroupId : null,\n        Title: chatName ? chatName : groupOpen.Title,\n        UsersId: usersIDs,\n      },\n      RequestId: socket.makeId(),\n      RequestType: 56,\n      Type: 0\n    }\n    \n    socket.send(newGroup)\n\n    props.toggleModal(\"contactsGroupsModal\")\n  }\n\n  const removeUserFromGroup = user => {\n    const removeUser = {\n      UsersId: [user.Id],\n      GroupId: groupOpen.GroupId,\n      RequestId: socket.makeId(),\n      RequestType: 59,\n      Type: 0\n    }\n    \n    socket.send(removeUser)\n\n    props.removeContactFromGroup({userId: user.Id, groupId: groupOpen.GroupId})\n  }\n\n  const showUsersInGroup = () => {\n    return props.contacts.users.map(user => {\n      if(user.GroupsId.includes(groupOpen.GroupId)){\n        let name = null\n        if (user.ContactUser.NameFirst) {\n          name = user.ContactUser.NameFirst\n        }\n        if (user.ContactUser.NameSecond) {\n          name = name + ' ' + user.ContactUser.NameSecond\n        }\n        return (\n          <div key={user.ContactId} className='contacts'>\n            <>\n            <Avatar user={user.ContactUser} />\n            {name ? name : 'Имя скрыто'}\n            </>\n            <Button className=\"remove-user\" type=\"danger\" shape=\"circle\" icon=\"user-delete\" onClick={() => removeUserFromGroup(user.ContactUser)} />\n          </div>\n        )\n      }\n    })\n  }\n\n  const addContactToChat = userId => {\n    let users = [...usersIDs]\n    if (usersIDs.includes(userId)) {\n      let foudnUserIndex = users.indexOf(userId)\n      users.splice(foudnUserIndex, 1)\n      setUsersIds(users)\n    } else {\n      users.push(userId)\n      setUsersIds(users)\n    }\n  }\n\n  const showContacts = () => {\n    let contacts = []\n    if (groupOpen) {\n      contacts = props.contacts.users.map(contact => {\n        if (!contact.GroupsId.includes(groupOpen.GroupId)) {\n          return contact\n        }\n      })\n    } else {\n      contacts = props.contacts.users\n    }\n    return contacts.map(user => {\n      if(user){\n        let name = null\n        if (user.ContactUser.NameFirst) {\n          name = user.ContactUser.NameFirst\n        }\n        if (user.ContactUser.NameSecond) {\n          name = name + ' ' + user.ContactUser.NameSecond\n        }\n        return (\n          <div key={user.ContactId} className={usersIDs.includes(user.ContactUserId) ? 'contacts contacts-active' : 'contacts'} onClick={() => {addContactToChat(user.ContactUserId)}}>\n            <Avatar user={user.ContactUser} />\n            {name ? name : 'Имя скрыто'}\n          </div>\n        )\n      }\n    })\n  }\n\n  const handleCloseModal = () => {\n    setChatName(null)\n    setNameError(false)\n    setGroupOpen(false)\n    setCreatingGroup(false)\n    setUsersIds([])\n    setShowUsers(false)\n    props.toggleModal(\"contactsGroupsModal\")\n  }\n\n  return (\n    <Modal\n      visible={props.contactsGroupsModal}\n      // visible={true}\n      onCancel={() => handleCloseModal()}\n      title=\"Группы контактов\"\n      footer={null}\n      maskClosable\n      className=\"contacts create-chat-modal\"\n    >\n      {\n        creatingGroup === \"step1\" ?\n          <div className=\"content\">\n            <div className=\"modal_back\" onClick={() => setCreatingGroup(false)}><Icon type=\"arrow-left\" /></div>\n            <Form.Item\n              validateStatus={nameError ? \"error\" : ''}\n              help={nameError ? \"Это поле обязательно для заполнения\" : false}\n            >\n              <Input\n                placeholder=\"Название группы\"\n                onChange={(e) => handleSetChatName(e.target.value)}\n              />\n            </Form.Item>\n            <Divider />\n            <Button type=\"primary\" block onClick={() => handleSetCreatingGroup()}>Далее</Button>\n          </div>\n        : creatingGroup === \"step2\" ?\n          <div className=\"content\">\n            <div className=\"modal_back\" onClick={() => setCreatingGroup(\"step1\")}><Icon type=\"arrow-left\" /></div>\n            <Text strong>Добавьте участников</Text>\n            <div className=\"wrap_contacts\">\n              {showContacts()}\n            </div>\n            <Divider />\n            <Button type=\"primary\" block onClick={() => createGroup()}>Создать группу</Button>\n          </div>\n        : groupOpen ?\n          <div className=\"content\">\n            {\n              showUsers ?\n                <>\n                  <div className=\"modal_back\" onClick={() => setShowUsers(false)}><Icon type=\"arrow-left\" /></div>\n                  <Text strong>Добавьте участников</Text>\n                  <div className=\"wrap_contacts\">\n                    {showContacts()}\n                  </div>\n                  <Divider />\n                </>\n              :\n                <>\n                  <div className=\"modal_back\" onClick={() => setGroupOpen(false)}><Icon type=\"arrow-left\" /></div>\n                  <Text strong>Название:</Text>\n                  <Input defaultValue={chatName ? chatName : groupOpen.Title} onChange={(e) => handleSetChatName(e.target.value)} />\n                  <Divider />\n                  <Text strong>Участники:</Text>\n                  <div className=\"wrap_contacts\">\n                    {showUsersInGroup()}\n                  </div>\n                  <Divider />\n                  <Button type=\"normal\" block icon=\"usergroup-add\" onClick={() => setShowUsers(!showUsers)}>Добавить пользователей</Button>\n                  <Divider />\n                </>\n            }\n            <Button type=\"primary\" block onClick={() => updateGroup()}>Сохранить</Button>\n          </div>\n        :\n          <>\n            {showGroups()}\n            <div className=\"content\">\n              <Button type=\"primary\" block onClick={() => setCreatingGroup(\"step1\")}>Добавить группу</Button>\n            </div>\n          </>\n      }\n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contactsGroupsModal: state.ui.modals.contactsGroupsModal,\n    users: state.users,\n    contacts: state.contacts,\n    contactsIDs: state.contacts.usersIDs,\n    groups: state.contacts.groups\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name)),\n    removeContactFromGroup: data => dispatch(removeContactFromGroup(data)),\n    removeGroup: data => dispatch(removeGroup(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsGroupsModal)","export function setContactUsersIDs(usersIDs) {\n  return {\n    type: \"SET_CONTACT_USERS_IDS\",\n    usersIDs\n  }\n}\n\nexport function setContacts(contacts) {\n  return {\n    type: \"SET_CONTACTS\",\n    contacts\n  }\n}\n\nexport function userGroupsReceived(groups) {\n  return {\n    type: \"USER_GROUPS_RECEIVED\",\n    groups\n  }\n}\n\nexport function removeContactFromGroup(payload) {\n  return {\n    type: \"REMOVE_CONTACT_FROM_GROUP\",\n    payload\n  }\n}\n\nexport function removeGroup(groupId) {\n  return {\n    type: \"REMOVE_GROUP\",\n    groupId\n  }\n}\n","/* eslint-disable */\nimport React, {useState, useEffect} from \"react\"\nimport { connect } from \"react-redux\"\nimport { Modal, Button, Input, Divider, Upload, Icon, message, Switch } from \"antd\"\nimport { toggleModal } from \"../actions/ui\"\nimport Request from \"../transport/Request\"\nimport Avatar from \"./Avatar\"\nimport axios from 'axios'\n\nfunction SettingsModal(props) {\n  const [loading, setLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(false)\n  const [name, setName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [about, setAbout] = useState('')\n  const [privacySettings, setPrivacySettings] = useState(false)\n  const [namePrivacy, setNamePrivacy] = useState(false)\n  const [photoPrivacy, setPhotoPrivacy] = useState(false)\n  const [onlinePrivacy, setOnlinePrivacy] = useState(false)\n  const [phonePrivacy, setPhonePrivacy] = useState(false)\n  const [emailPrivacy, setEmailPrivacy] = useState(false)\n\n  useEffect(() => {\n    if (props.user) {\n      setName(props.user.NameFirst)\n      setLastName(props.user.NameSecond)\n      setAbout(props.user.About)\n      setImageUrl(props.user.Photo)\n      setNamePrivacy(props.user.Visible[0][1])\n      setPhotoPrivacy(props.user.Visible[0][2])\n      setOnlinePrivacy(props.user.Visible[0][14])\n      setPhonePrivacy(props.user.Visible[0][15])\n      setEmailPrivacy(props.user.Visible[0][17])\n    }\n  }, [props.user])\n  \n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n      message.error('Поддерживается только загрузка JPG/PNG файлов!')\n    }\n    return isJpgOrPng\n  }\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true)\n      return\n    }\n  }\n\n  const uploadButton = (\n    <div>\n      <Icon type={loading ? 'loading' : 'plus'} />\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  )\n\n  const handleUploadImage = data => {\n    const fileAccessToken = localStorage.getItem('FileAccessToken')\n    axios.defaults.headers['FileAccessToken'] = fileAccessToken\n\n    const formData = new FormData()\n    formData.append('file', data.file)\n  \n    axios.post(`https://${props.node}:5000/api/Files`, formData)\n    .then(\n        (res) => {\n          if (res.status === 200) {\n            setLoading(false)\n            setImageUrl(res.data.File.FileId)\n          }\n        }\n    )\n    .catch(\n        (err) => {\n          // console.log(err)\n        }\n    )\n  }\n\n  const handleUpdateUser = () => {\n    let privacy = props.user.Visible[0]\n    privacy[1] = namePrivacy\n    privacy[2] = photoPrivacy\n    privacy[14] = onlinePrivacy\n    privacy[15] = phonePrivacy\n    privacy[17] = emailPrivacy\n\n    const userData = {\n      NameFirst: name,\n      NameSecond: lastName,\n      About: about,\n      Photo: imageUrl,\n      Privacy: privacy\n    }\n\n    Request.editUser(userData)\n  }\n\n  return (\n    <Modal\n      visible={props.settingsModal}\n      // visible={true}\n      onCancel={() => props.toggleModal(\"settingsModal\")}\n      title=\"Редактировать профиль\"\n      footer={null}\n      maskClosable\n      className=\"contacts\"\n    >\n      {\n        props.user ?\n          <div className=\"content settings\">\n            {!privacySettings ?\n              <>\n                <Upload\n                  listType=\"picture-card\"\n                  className=\"avatar-uploader\"\n                  showUploadList={false}\n                  customRequest={file => handleUploadImage(file)}\n                  beforeUpload={beforeUpload}\n                  onChange={handleChange}\n                >\n                  {\n                    loading ? \n                      <Icon type=\"loading\" className=\"loading-icon\" />\n                    : null\n                  }\n                  {\n                    imageUrl ?\n                      <img src={`https://${props.node}:5000/api/Files/${imageUrl}`} alt=\"avatar\" style={{ width: '100%' }} />\n                    : props.user.Photo ?\n                      <Avatar user={props.user} />\n                    : uploadButton\n                  }\n                </Upload>\n                <Divider />\n                <Input value={lastName} onChange={e => setLastName(e.target.value)} placeholder=\"Фамилия\" />\n                <Divider />\n                <Input value={name} onChange={e => setName(e.target.value)} placeholder=\"Имя\" />\n                <Divider />\n                <Input value={about} onChange={e => setAbout(e.target.value)} placeholder=\"О себе\" />\n                <Divider />\n                <Input addonBefore=\"+7\" defaultValue={props.user.Phones[0] ? props.user.Phones[0].SubscriberNumber : ''} placeholder=\"Телефон\" disabled />\n                <Divider />\n                <Input defaultValue={props.user.Emails[0]} placeholder=\"Email\" disabled />\n                <Divider />\n                <Button type=\"link\" onClick={() => {setPrivacySettings(true)}}>Настроки приватности</Button>\n              </>\n            :\n              <>\n                <div className=\"modal_back\" onClick={() => setPrivacySettings(false)}><Icon type=\"arrow-left\" /></div>\n                <div className='switch-label'>\n                  <div>Имя, тэг</div>\n                  <Switch checked={namePrivacy} onChange={(value) => setNamePrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Онлайн статус</div>\n                  <Switch checked={onlinePrivacy} onChange={(value) => setOnlinePrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Телефон</div>\n                  <Switch checked={phonePrivacy} onChange={(value) => setPhonePrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Email</div>\n                  <Switch checked={emailPrivacy} onChange={(value) => setEmailPrivacy(value)} />\n                </div>\n                <Divider />\n                <div className='switch-label'>\n                  <div>Фото, о себе</div>\n                  <Switch checked={photoPrivacy} onChange={(value) => setPhotoPrivacy(value)} />\n                </div>\n              </>\n            }\n            <Divider />\n            <Button type=\"primary\" block onClick={() => handleUpdateUser()}>Сохранить</Button>\n          </div>\n        : null\n      }        \n    </Modal>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    settingsModal: state.ui.modals.settingsModal,\n    user: state.users.find(user => user.currentUser === true),\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModal: name => dispatch(toggleModal(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsModal)","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport Sidebar from \"./Sidebar\"\nimport DialogContainer from \"./DialogContainer\"\nimport ProfileModal from \"./ProfileModal\"\nimport CreateChatModal from \"./CreateChatModal\"\nimport ContactsModal from \"./ContactsModal\"\nimport ContactsGroupsModal from \"./ContactsGroupsModal\"\nimport { toggleDrawer, toggleModal } from \"../actions/ui\"\nimport { Drawer } from 'antd';\nimport SettingsModal from \"./SettingsModal\"\nimport socket from \"../transport/Connect\"\n\nfunction MainContainer(props) {\n  const logout = () => {\n    const logout = {\n      Full: false,\n      AccessToken: localStorage.getItem(\"AccessToken\"),\n      RequestType: 34,\n      RequestId: socket.makeId(),\n      Type: 0\n    }\n\n    socket.send(logout)\n\n    localStorage.removeItem(\"AccessToken\")\n    localStorage.removeItem(\"FileAccessToken\")\n    localStorage.removeItem(\"RefreshToken\")\n    localStorage.removeItem(\"User\")\n\n    window.location.replace(\"/\")\n  }\n\n  return (\n    <Router>\n      <div className=\"page\">\n        <div className=\"page__content\">\n          <Drawer\n            visible={props.ui.showDrawer}\n            // visible={true}\n            placement='left'\n            closable={true}\n            onClose={() => props.toggleDrawer()}\n            width='366'\n          >\n            {\n              props.user ? (\n                <div className=\"drawer-user\">\n                  <div className=\"drawer-user__ava\">\n                    { props.user.Photo ? (\n                      <div\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          backgroundSize: \"cover\",\n                          backgroundPosition: \"center center\",\n                          backgroundImage: `url(https://${props.node}:5000/api/Files/${props.user.Photo})`,\n                          backgroundRepeat: \"no-repeat\"\n                        }}\n                      />\n                    ) : (\n                      <div className=\"drawer-user__photo-default avatar-default\">defaultAva</div>\n                    )}\n                  </div>\n                  <div className=\"drawer-user__name\">\n                    {props.user.NameFirst + ' ' + props.user.NameSecond}\n                  </div>\n                </div>\n              ) : null\n            }\n            <ul className=\"menu\">\n              <li onClick={() => props.toggleModal(\"createChatModal\")}>Создать групповой чат</li>\n              <li onClick={() => props.toggleModal(\"contactsModal\")}>Контакты</li>\n              <li onClick={() => props.toggleModal(\"contactsGroupsModal\")}>Группы контактов</li>\n              <li onClick={() => props.toggleModal(\"settingsModal\")}>Настройки</li>\n              <li onClick={logout}>Выход</li>\n            </ul>\n            <div className=\"app-version\">v0.1.10</div>\n          </Drawer>\n          <>\n            <Sidebar {...props} />\n            <DialogContainer />\n          </>\n          {/* {windowWidth > 675 ? (\n            <>\n              <Sidebar {...props} />\n              <DialogContainer />\n            </>\n          ) : (\n            !selectors.getActiveDialog(props.dialogs) ? <Sidebar {...props} /> : <DialogContainer />\n          )} */}\n        </div>\n      </div>\n      <ProfileModal />\n      <CreateChatModal />\n      <ContactsModal />\n      <ContactsGroupsModal />\n      <SettingsModal />\n    </Router>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    ui: state.ui,\n    user: state.users.find(user => user.currentUser === true),\n    node: state.node.activeNode.Domains[0]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleDrawer: () => dispatch(toggleDrawer()),\n    toggleModal: name => dispatch(toggleModal(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer)\n","/* eslint-disable */\nimport {useEffect} from \"react\"\nimport { connect } from \"react-redux\"\nimport Connect from \"./Connect\"\nimport Request from \"./Request\"\nimport {\n  dialogsReceived,\n  chatsReceived,\n  messagesReceived,\n  openDialog,\n  readMessages,\n} from \"../actions/dialogs\"\nimport { toggleModal, toggleDrawer } from \"../actions/ui\"\nimport { setCallbackData } from \"../actions/callbacks\"\nimport { searchResultReceived } from \"../actions/search\"\nimport {\n  setContactUsersIDs,\n  userGroupsReceived,\n  setContacts\n} from \"../actions/contacts\"\nimport selectors from \"../selectors\"\nimport { userReceived, chatsUsersReceived } from \"../actions/user\"\nimport { setAuth } from \"../actions/auth\"\nimport helpers from \"../helpers\"\nimport Crypto from \"y_crypto\"\nimport { setSymmetricKey, setPublicKeys } from \"../actions/keys\"\n\nfunction Socket(props) {\n  useEffect(() => {\n    Connect.onMessage = data => {\n      \n      // Reply to authorization request or token update request\n      if (data.ResponseType === 6) {\n        // request information about the authorized user\n        const getSelf = {\n          RequestId: Connect.makeId(),\n          RequestType: 27,\n          Type: 0\n        }\n\n        Connect.send(getSelf)\n\n        localStorage.setItem(\"FileAccessToken\", data.FileAccessToken)\n        localStorage.setItem(\"AccessToken\", data.Token.AccessToken)\n        localStorage.setItem(\"RefreshToken\", data.Token.RefreshToken)\n\n        props.setAuth(\"AUTH_SUCCESS\")\n      }\n      // Response to a request to receive the current user\n      else if (data.ResponseType === 12) {\n        const user = selectors.getFormatedUser([data.User])\n        user[0].currentUser = true\n        props.userReceived(user)\n        props.toggleModal(\"close\")\n        props.toggleDrawer(\"close\")\n      }\n      // Response to the request for dialogs\n      else if (data.ResponseType === 15) {\n        props.dialogsReceived(selectors.getFormatedDialogs(data.Conversations))\n      }\n      // Reply to a message retrieval request\n      else if (data.ResponseType === 9) {\n        props.messagesReceived(selectors.getFormatedMessages(data.Messages))\n        // Request.getDialogs()\n      }\n      // New messages\n      else if (data.Message) {\n        props.messagesReceived(selectors.getFormatedMessages([data.Message]))\n        Request.getDialogs()\n      }\n      // Reading outgoing messages\n      else if (data.Type === 2 && data.Code === 5) {\n        props.readMessages({conversationId: data.ConversationId, conversationType: data.ConversationType})\n      }\n      // Response to user request\n      else if (data.ResponseType === 0) {\n        props.userReceived(selectors.getFormatedUser(data.Users))\n      }\n      // Response to chat requests\n      else if (data.ResponseType === 2) {\n        const chats = selectors.getFormatedChats(data.Chats)\n\n        // request a list of chat users\n        chats.forEach(chat => {\n          const getChatsUsers = {\n            ChatId: chat.Id,\n            NavigationUserId: null,\n            RequestId: Connect.makeId(),\n            RequestType: 17,\n            Type: 0\n          }\n\n          Connect.send(getChatsUsers)\n        })\n\n        props.chatsReceived(selectors.getFormatedChats(data.Chats))\n      }\n      // Response to user chat request\n      // Their structure is different from ordinary users, here comes information related to this particular chat\n      else if (data.ResponseType === 16) {\n        props.chatsUsersReceived(selectors.getFormatedChatsUsers(data.ChatUsers))\n      }\n      // response to a public key reques\n      else if (data.ResponseType === 18) {\n        props.setPublicKeys(data.Keys)\n        // const answer = {\n        //   data: data.Keys,\n        //   id: data.RequestId\n        // }\n        props.setCallbackData(data)\n      }\n      // Channel entry response\n      else if (data.ResponseType === 21) {\n        Request.getDialogs()\n      }\n      // Search Event Response\n      else if (data.ResponseType === 23) {\n        const searchResult = {}\n        if (data.Users.length > 0) {\n          searchResult.users = data.Users\n        }\n        if (data.Chats.length > 0) {\n          searchResult.chats = data.Chats\n        }\n        if (data.Channels.length > 0) {\n          searchResult.channels = data.Channels\n        }\n        props.searchResultReceived(searchResult)\n      }\n      // Response to contact list request\n      else if (data.ResponseType === 27) {\n        let userIDs = data.Contacts.map(user => {\n          return user.ContactUserId\n        })\n\n        props.setContactUsersIDs(userIDs)\n        props.setContacts(data.Contacts)\n\n        if (userIDs.length > 0) {\n          Request.getUsers(userIDs)\n        }\n      }\n      // Response to contact group request\n      else if (data.ResponseType === 26) {\n        props.userGroupsReceived(data.Groups)\n      }\n      // Message Read Notification\n      else if (data.Code === 5) {\n        props.messagesRead(data.ConversationId)\n      }\n      // Request to receive keys from another device\n      else if (data.Type === 8 && data.PublicKey) {\n        helpers.devicesKeysExchange(data.PublicKey, data.RequestId)\n      }\n      // The keys came from another device\n      else if (data.Type === 2 && data.Code === 12) {\n        helpers.setKeysFromAnotherDevice(data)\n      }\n    }\n  }, [])\n\n  return null\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dialogsReceived: dialogs => dispatch(dialogsReceived(dialogs)),\n    chatsReceived: chats => dispatch(chatsReceived(chats)),\n    chatsUsersReceived: chatsUsers => dispatch(chatsUsersReceived(chatsUsers)),\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    userReceived: user => dispatch(userReceived(user)),\n    messagesReceived: messages => dispatch(messagesReceived(messages)),\n    readMessages: data => dispatch(readMessages(data)),\n    setAuth: auth => dispatch(setAuth(auth)),\n    searchResultReceived: data => dispatch(searchResultReceived(data)),\n    setContactUsersIDs: usersIDs => dispatch(setContactUsersIDs(usersIDs)),\n    userGroupsReceived: groups => dispatch(userGroupsReceived(groups)),\n    setContacts: contacts => dispatch(setContacts(contacts)),\n    toggleModal: name => dispatch(toggleModal(name)),\n    toggleDrawer: name => dispatch(toggleDrawer(name)),\n    setSymmetricKey: key => dispatch(setSymmetricKey(key)),\n    setPublicKeys: publicKeys => dispatch(setPublicKeys(publicKeys)),\n    setCallbackData: data => dispatch(setCallbackData(data)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Socket)\n","/* eslint-disable */\nimport React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Spin } from \"antd\"\nimport {\n  dialogsReceived,\n  messagesReceived,\n  openDialog\n} from \"./actions/dialogs\"\nimport { userReceived } from \"./actions/user\"\nimport { setAppFocus } from \"./actions/ui\"\nimport Auth from \"./components/Auth\"\nimport Registration from \"./components/Registration\"\nimport Verify from \"./components/Verify\"\nimport MainContainer from \"./components/MainContainer\"\nimport socket from \"./transport/Connect\"\nimport Connect from \"./transport/Socket\"\nimport { setAuth } from \"./actions/auth\"\nimport { setPath } from \"./actions/path\"\nimport { setNodes, setActiveNode } from \"./actions/node\"\nimport selectors from \"./selectors\"\n\nconst licens = new WebSocket(\"wss://testlic-1.ymess.org:5005\")\n\n\nfunction App(props) {\n  useEffect(() => {\n    if (selectors.getActiveDialog(props.dialogs)) {\n      document.body.style.position = \"fixed\"\n    } else {\n      document.body.style.position = \"relative\"\n    }\n  }, [props.dialogs])\n\n  // Set the flag to mark the message read if the tab is not active\n  // window.onfocus = () => {\n  //   props.setAppFocus(true)\n  // }\n  // window.onblur = () => {\n  //   props.setAppFocus(false)\n  // }\n\n  window.addEventListener(\"load\",function() {\n    setTimeout(function(){\n      window.scrollTo(0, 1)\n    }, 0)\n  })\n\n  useEffect(() => {\n    if (props.auth === \"AUTH_SUCCESS\") {\n      // dialogue request\n      const getDialogs = {\n        NavigationMessageTime: null,\n        RequestId: socket.makeId(),\n        RequestType: 12,\n        Type: 0\n      }\n\n      socket.send(getDialogs)\n\n      // getting keys for another device\n      if(localStorage.getItem(\"keysPair\")) {\n        const getKeysFromAnotherDevice = {\n          PublicKey: JSON.parse(localStorage.getItem(\"keysPair\"))[JSON.parse(localStorage.getItem(\"keysPair\")).length-1].public,\n          NavigationMessageTime: null,\n          RequestId: socket.makeId(),\n          RequestType: 70,\n          Type: 0\n        }\n  \n        socket.send(getKeysFromAnotherDevice)\n      }\n    }\n  }, [props.auth])\n\n  useEffect(() => {\n    licens.onopen = () => {\n      // console.log(\"Connection with licensor established\")\n      const getNodesObj = {\n        RequestId: socket.makeId(),\n        RequestType: 1,\n        Type: 6\n      }\n\n      licens.send(JSON.stringify(getNodesObj))\n    }\n\n    licens.onmessage = event => {\n      const response = socket.blobToJson(event.data)\n      if (response.ResponseType === 2) {\n        props.setNodes(response.Nodes)\n        // set the first node by default if the \"automatically\" mode is selected\n        if (!localStorage.getItem(\"node\")) {\n          // localStorage.setItem(\"node\", JSON.stringify(response.Nodes[0]))\n          // props.setActiveNode(response.Nodes[0])\n        } else {\n          props.setActiveNode(JSON.parse(localStorage.getItem(\"node\")))\n        }\n      }\n    }\n\n    const node = JSON.parse(localStorage.getItem(\"node\"))\n    if (node) {\n      props.setActiveNode(node)\n    }\n\n    if (localStorage.getItem(\"AccessToken\")) {\n      let login\n      if (localStorage.getItem(\"User\")) {\n        login = {\n          Token: {\n            UserId: JSON.parse(localStorage.getItem(\"User\")).Id,\n            AccessToken: localStorage.getItem(\"AccessToken\"),\n            RefreshToken: localStorage.getItem(\"RefreshToken\")\n          },\n          LoginType: 0,\n          UidType: 1,\n          RequestId: socket.makeId(),\n          RequestType: 33,\n          Type: 0\n        }\n      } else if (localStorage.getItem(\"Phone\")) {\n        login = {\n          Uid: localStorage.getItem(\"Phone\"),\n          Token: {\n            AccessToken: localStorage.getItem(\"AccessToken\"),\n            RefreshToken: localStorage.getItem(\"RefreshToken\")\n          },\n          LoginType: 0,\n          UidType: 0,\n          RequestId: socket.makeId(),\n          RequestType: 33,\n          Type: 0\n        }\n      } else if (localStorage.getItem(\"Email\")) {\n        // console.log(\"По почте\")\n      }\n\n      socket.start(node.Domains[0])\n      socket.wsOnConnect = () => {\n        socket.send(login)\n        // if(socket.send){\n        // }\n      }\n    } else {\n      props.setAuth(\"NO_AUTH\")\n    }\n  }, [])\n\n  return (\n    <>\n      <Connect />\n      {\n        props.auth === \"CHECK_AUTH\" ? \n          <div className=\"preloader\">\n            <Spin size=\"large\" />\n          </div>\n        : props.auth === \"AUTH_SUCCESS\" ? \n            <MainContainer/>\n        : props.path === \"by-phone\" || props.path === \"by-email\" ? \n          <Verify/>\n        : props.path === \"registration\" ? \n          <Registration/> \n        : <Auth/>\n      }\n\n\n      {/* <Router>\n        <Route\n          path=\"/\"\n          render={\n            // eslint-disable-next-line no-nested-ternary\n            props.auth === \"CHECK_AUTH\"\n              ? () => (\n                  <div className=\"preloader\">\n                    <Spin size=\"large\" />\n                  </div>\n                )\n              : props.auth === \"AUTH_SUCCESS\"\n              ? () => (\n                  <>\n                    <Route path=\"/\" component={MainContainer} />\n                  </>\n                )\n              : () => <Redirect to=\"/auth\" />\n          }\n        />\n        <Route path=\"/auth/by-phone\" component={Verify} />\n        <Route path=\"/auth/by-email\" component={Verify} />\n        <Route exact path=\"/auth\" component={Auth} />\n        <Route exact path=\"/registration\" component={Registration} />\n      </Router> */}\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dialogs: state.dialogs,\n    users: state.users,\n    user: state.users.find(user => user.currentUser === true),\n    auth: state.auth,\n    path: state.path.currentPath\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dialogsReceived: dialogs => dispatch(dialogsReceived(dialogs)),\n    openDialog: dialogId => dispatch(openDialog(dialogId)),\n    userReceived: user => dispatch(userReceived(user)),\n    messagesReceived: messages => dispatch(messagesReceived(messages)),\n    setAuth: auth => dispatch(setAuth(auth)),\n    setNodes: nodes => dispatch(setNodes(nodes)),\n    setActiveNode: node => dispatch(setActiveNode(node)),\n    setPath: path => dispatch(setPath(path)),\n    setAppFocus: data => dispatch(setAppFocus(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // console.log(\n          //   'This web app is being served cache-first by a service ' +\n          //     'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          // );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // console.log(\n              //   'New content is available and will be used when all ' +\n              //     'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './css/style.css';\nimport './assets/fonts/fonts.css'\nimport 'antd/dist/antd.css';\nimport './css/style.scss';\nimport {Provider} from 'react-redux';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}\n"],"sourceRoot":""}