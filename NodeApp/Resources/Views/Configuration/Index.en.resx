<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdminEmail" xml:space="preserve">
    <value>Admin email</value>
  </data>
  <data name="AllowedRegistration" xml:space="preserve">
    <value>Administrator registration allowed</value>
  </data>
  <data name="Blockchain" xml:space="preserve">
    <value>Blockchain data recovery</value>
  </data>
  <data name="BlockchainBlocksCount" xml:space="preserve">
    <value>Blocks count</value>
  </data>
  <data name="BlockchainDatabaseOptions" xml:space="preserve">
    <value>Parameters for connecting to the blockchain database</value>
  </data>
  <data name="BlockchainRecovery" xml:space="preserve">
    <value>Blockchain data recovery</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ClientsPort" xml:space="preserve">
    <value>Port for connecting users</value>
  </data>
  <data name="ConfirmUsers" xml:space="preserve">
    <value>Automatically confirm users</value>
  </data>
  <data name="ConnectionsParameters" xml:space="preserve">
    <value>Connections parameters</value>
  </data>
  <data name="CurrentSMS" xml:space="preserve">
    <value>Current configs</value>
  </data>
  <data name="DatabasesOptions" xml:space="preserve">
    <value>Databases options</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email client options</value>
  </data>
  <data name="EncryptionType.Allowed" xml:space="preserve">
    <value>Encryption allowed</value>
  </data>
  <data name="EncryptionType.NodeUsersForbidden" xml:space="preserve">
    <value>Encryption blocked for users within the node</value>
  </data>
  <data name="EncryptionType.TotallyForbidden" xml:space="preserve">
    <value>Encryption is completely blocked</value>
  </data>
  <data name="FirstBlockCreatedAt" xml:space="preserve">
    <value>First block created at</value>
  </data>
  <data name="Keys" xml:space="preserve">
    <value>Encryption keys</value>
  </data>
  <data name="KeysCreatedAt" xml:space="preserve">
    <value>Keys created at</value>
  </data>
  <data name="KeysExpiredAt" xml:space="preserve">
    <value>Keys expired at</value>
  </data>
  <data name="KeysId" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="LastBlockCreatedAt" xml:space="preserve">
    <value>Last block created at</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="LicenseCost" xml:space="preserve">
    <value>Cost</value>
  </data>
  <data name="LicenseCreatedAt" xml:space="preserve">
    <value>License issue date</value>
  </data>
  <data name="LicenseExpiredAt" xml:space="preserve">
    <value>License expiration date</value>
  </data>
  <data name="LicenseTariff" xml:space="preserve">
    <value>Tariff</value>
  </data>
  <data name="LicensorUrl" xml:space="preserve">
    <value>Licensor URL</value>
  </data>
  <data name="MaxDbBackups" xml:space="preserve">
    <value>Maximum number of database backups stored</value>
  </data>
  <data name="MessengerDatabaseOptions" xml:space="preserve">
    <value>Parameters for connecting to the main messenger database</value>
  </data>
  <data name="NewKeys" xml:space="preserve">
    <value>Generate new enctypion keys</value>
  </data>
  <data name="NodeAbout" xml:space="preserve">
    <value>Node description</value>
  </data>
  <data name="NodeEncryptionType" xml:space="preserve">
    <value>Node encryption type</value>
  </data>
  <data name="NodeInformation" xml:space="preserve">
    <value>Node information</value>
  </data>
  <data name="NodeName" xml:space="preserve">
    <value>Node name</value>
  </data>
  <data name="NodePermanentlyDeleting" xml:space="preserve">
    <value>Delete user data in full</value>
  </data>
  <data name="NodeRegistrationMethod" xml:space="preserve">
    <value>Registration method</value>
  </data>
  <data name="NodeRouting" xml:space="preserve">
    <value>Proxy client connections from other nodes</value>
  </data>
  <data name="NodesPort" xml:space="preserve">
    <value>Port for connecting nodes</value>
  </data>
  <data name="NodeStartDay" xml:space="preserve">
    <value>Node start date</value>
  </data>
  <data name="NodeStorage" xml:space="preserve">
    <value>Store files</value>
  </data>
  <data name="NodeTag" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="NodeVisible" xml:space="preserve">
    <value>Network visibility</value>
  </data>
  <data name="OpenStack" xml:space="preserve">
    <value>OpenStack Swift options</value>
  </data>
  <data name="PasswordSecurity" xml:space="preserve">
    <value>Password and security</value>
  </data>
  <data name="PushServerUrl" xml:space="preserve">
    <value>Push server URL</value>
  </data>
  <data name="RedisServerOptions" xml:space="preserve">
    <value>Parameters for connecting to a Redis server</value>
  </data>
  <data name="RegistrationMethod.EmailRequired" xml:space="preserve">
    <value>Email required for registration</value>
  </data>
  <data name="RegistrationMethod.NothingRequired" xml:space="preserve">
    <value>Registration without phone and without email</value>
  </data>
  <data name="RegistrationMethod.PhoneRequired" xml:space="preserve">
    <value>Phone required for registration</value>
  </data>
  <data name="S3" xml:space="preserve">
    <value>Amazon S3 options</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectCountry" xml:space="preserve">
    <value>Select a country</value>
  </data>
  <data name="SMS" xml:space="preserve">
    <value>SMS service parameters</value>
  </data>
  <data name="SupportEmail" xml:space="preserve">
    <value>Support email</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="UserRegistrationAllowed" xml:space="preserve">
    <value>User registration is allowed</value>
  </data>
</root>